 .name fcn.00007fc0
 .offset 0000000000007fc0
 .file lsipc
 push r12
 pxor xmm0, xmm0
 push rbp
 sub rsp, CONST
 mov qword [rsp + CONST], rsi
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 movaps xmmword [rsp + CONST], xmm0
 movaps xmmword [rsp + CONST], xmm0
 movaps xmmword [rsp + CONST], xmm0
 movaps xmmword [rsp + CONST], xmm0
 cmp edi, CONST
 cjmp LABEL13
 cmp edi, CONST
 cjmp LABEL15
 cmp edi, CONST
 cjmp LABEL17
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 call CONST
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL13:
 lea r12, qword [rsp + CONST]
 lea rdi, qword [rsp + CONST]
 mov rsi, r12
 lea rbp, qword [rsp + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, r12
 call CONST
 mov rdx, rbp
LABEL41:
 mov ecx, dword [rdx]
 add rdx, CONST
 lea eax, dword [rcx + CONST]
 not ecx
 and eax, ecx
 and eax, CONST
 cjmp LABEL41
 mov ecx, eax
 shr ecx, CONST
 test eax, CONST
 cmove eax, ecx
 lea rcx, qword [rdx + CONST]
 cmove rdx, rcx
 mov esi, eax
 add sil, al
 sbb rdx, CONST
 cmp byte [rdx + CONST], CONST
 cjmp LABEL52
LABEL71:
 mov rdi, rbp
 call CONST
 test rax, rax
 cjmp LABEL56
 mov rsi, qword [rsp + CONST]
 xor rsi, qword fs:[CONST]
 cjmp LABEL59
 add rsp, CONST
 pop rbp
 pop r12
 ret
LABEL17:
 lea rbp, qword [rsp + CONST]
 lea rdi, qword [rsp + CONST]
 mov r8d, CONST
 xor edx, edx
 mov rcx, rbp
 lea rsi, qword [rip + CONST]
 call CONST
 jmp LABEL71
LABEL15:
 lea rbp, qword [rsp + CONST]
 lea rdi, qword [rsp + CONST]
 mov ecx, CONST
 mov esi, CONST
 mov rdx, rbp
 call CONST
 jmp LABEL71
LABEL52:
 mov byte [rdx + CONST], CONST
 jmp LABEL71
LABEL59:
 call CONST
LABEL56:
 lea rsi, qword [rip + CONST]
 mov edi, CONST
 call CONST
