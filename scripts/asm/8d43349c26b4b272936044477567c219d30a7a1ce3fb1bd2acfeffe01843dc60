 .name fcn.000113c0
 .offset 00000000000113c0
 .file install
 push rbp
 mov rbp, rdi
 push rbx
 mov ebx, esi
 sub rsp, CONST
 call CONST
 movzx edx, byte [rax]
 and edx, CONST
 cmp dl, CONST
 cjmp LABEL9
 movzx edx, byte [rax + CONST]
 and edx, CONST
 cmp dl, CONST
 cjmp LABEL13
 movzx edx, byte [rax + CONST]
 and edx, CONST
 cmp dl, CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rbp], CONST
 lea rax, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 cmovne rax, rdx
 add rsp, CONST
 pop rbx
 pop rbp
 ret
LABEL9:
 cmp dl, CONST
 cjmp LABEL13
 movzx edx, byte [rax + CONST]
 and edx, CONST
 cmp dl, CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL41
LABEL13:
 cmp ebx, CONST
 lea rax, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 cmovne rax, rdx
 add rsp, CONST
 pop rbx
 pop rbp
 ret
LABEL41:
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rax + CONST], CONST
 cjmp LABEL13
 cmp byte [rbp], CONST
 lea rax, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 cmovne rax, rdx
 add rsp, CONST
 pop rbx
 pop rbp
 ret
