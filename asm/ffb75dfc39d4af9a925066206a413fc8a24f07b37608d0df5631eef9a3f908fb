 .name fcn.00002de0
 .offset 0000000000002de0
 .file fold
 endbr64
 push r13
 mov edx, CONST
 push r12
 push rbp
 mov ebp, edi
 push rbx
 sub rsp, CONST
 mov r12, qword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test edi, edi
 cjmp LABEL13
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, qword [rip + CONST]
 mov rcx, r12
 mov esi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
LABEL166:
 mov edi, ebp
 call CONST
LABEL13:
 lea rsi, [rip + CONST]
 xor edi, edi
 lea rbx, [rip + CONST]
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 mov r12, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, [rip + CONST]
 call CONST
 mov rsi, r12
 mov rdi, rax
 call CONST
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rsp], rax
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rbx
 lea rbx, [rip + CONST]
 mov qword [rsp + CONST], rax
 mov rax, rsp
 nop dword [rax]
LABEL117:
 mov rdi, qword [rax + CONST]
 add rax, CONST
 test rdi, rdi
 cjmp LABEL110
 mov ecx, CONST
 mov rsi, rbx
 repe cmpsb byte [rsi], byte [rdi]
 seta dl
 sbb dl, CONST
 test dl, dl
 cjmp LABEL117
LABEL110:
 mov r12, qword [rax + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 test r12, r12
 cjmp LABEL123
 call CONST
 lea rcx, [rip + CONST]
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rsi, rax
 xor eax, eax
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL136
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL141
LABEL136:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 lea r13, [rip + CONST]
 call CONST
 cmp r12, rbx
 lea rcx, [rip + CONST]
 cmovne r13, rcx
LABEL197:
 xor edi, edi
 lea rsi, [rip + CONST]
 mov edx, CONST
 call CONST
 mov rcx, r13
 mov rdx, r12
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL166
LABEL123:
 call CONST
 lea rcx, [rip + CONST]
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov rsi, rax
 xor eax, eax
 call CONST
 mov edi, CONST
 xor esi, esi
 call CONST
 mov rdi, rax
 test rax, rax
 cjmp LABEL179
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL184
LABEL179:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 lea r12, [rip + CONST]
 call CONST
 lea r13, [rip + CONST]
 jmp LABEL197
LABEL184:
 lea r12, [rip + CONST]
LABEL141:
 xor edi, edi
 mov edx, CONST
 lea rsi, [rip + CONST]
 call CONST
 lea rdx, [rip + CONST]
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
 jmp LABEL136
