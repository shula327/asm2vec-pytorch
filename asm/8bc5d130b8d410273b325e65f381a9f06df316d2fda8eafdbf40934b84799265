 .name fcn.000a8f80
 .offset 00000000000a8f80
 .file perl5.30.0
 push r12
 mov r11d, CONST
 push rbp
 mov rbp, rdi
 push rbx
 mov rbx, rsi
 test cl, cl
 cjmp LABEL7
 mov r11d, dword [rsi]
 shr r11d, CONST
 and r11d, CONST
LABEL7:
 mov rdi, qword [rdx]
 mov rcx, qword [rbx + CONST]
 lea r10, qword [rip + CONST]
LABEL125:
 mov rax, rcx
 mov rsi, rcx
 sub rax, rdi
 cmp rax, CONST
 cjmp LABEL18
 cmp byte [rdi], CONST
 cjmp LABEL18
 cmp byte [rdi + CONST], CONST
 cjmp LABEL18
 cmp byte [rdi + CONST], CONST
 cjmp LABEL24
 nop dword [rax]
LABEL18:
 test r11d, r11d
 cjmp LABEL27
 cmp rcx, rdi
 cjmp LABEL27
 mov rax, rdi
 jmp LABEL31
LABEL50:
 cmp r8b, CONST
 cjmp LABEL33
 mov r9d, dword [rbx + CONST]
 test r9d, r9d
 cjmp LABEL36
 mov r8d, CONST
 cmp sil, CONST
 cjmp LABEL39
 nop word cs:[rax + rax]
LABEL52:
 add rax, r8
 mov qword [rdx], rax
LABEL137:
 mov rcx, qword [rbx + CONST]
 cmp rax, rcx
 cjmp LABEL45
LABEL31:
 movzx r8d, byte [rax]
 lea r9d, dword [r8 + CONST]
 mov esi, r8d
 cmp r9d, CONST
 cjmp LABEL50
LABEL33:
 mov r8d, CONST
 jmp LABEL52
LABEL24:
 cmp rsi, rdi
 cjmp LABEL54
LABEL62:
 lea rax, qword [rdi + CONST]
 mov qword [rdx], rax
 cmp byte [rdi + CONST], CONST
 cjmp LABEL58
 mov rsi, qword [rbx + CONST]
 mov rdi, rax
 cmp rsi, rdi
 cjmp LABEL62
LABEL54:
 mov rsi, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 sub r12, qword [rbx + CONST]
 test rsi, rsi
 cjmp LABEL67
 mov edx, CONST
 mov rdi, rbp
 call CONST
LABEL67:
 mov rsi, qword [rbx + CONST]
 test rsi, rsi
 cjmp LABEL73
 mov edx, CONST
 mov rdi, rbp
 call CONST
LABEL73:
 mov rsi, qword [rbx + CONST]
 test rsi, rsi
 cjmp LABEL79
 mov edx, CONST
 mov rdi, rbp
 call CONST
LABEL79:
 lea rax, qword [rip + CONST]
 cmp r12, CONST
 cjmp LABEL85
 mov r12d, CONST
 lea rax, qword [rip + CONST]
LABEL85:
 push r10
 xor ecx, ecx
 mov r9, qword [rbx + CONST]
 mov r8, r12
 push rax
 cmp dword [rbx + CONST], CONST
 mov rdi, rbp
 lea rdx, qword [rip + CONST]
 setne cl
 lea rsi, qword [rip + CONST]
 xor eax, eax
 call CONST
 nop word cs:[rax + rax]
LABEL36:
 movsxd r8, r8d
 mov r9, rcx
 movzx r8d, byte [r10 + r8]
 sub r9, rax
 cmp r9, r8
 cjmp LABEL39
 cmp sil, CONST
 cjmp LABEL108
 cmp sil, CONST
 cjmp LABEL39
 cmp byte [rax + CONST], CONST
 cjmp LABEL45
 movzx esi, byte [rax + CONST]
 lea r8d, dword [rsi + CONST]
 cmp r8d, CONST
 cjmp LABEL116
 sub esi, CONST
 cmp esi, CONST
 cjmp LABEL45
LABEL116:
 mov r8d, CONST
 jmp LABEL52
LABEL45:
 cmp rax, rdi
 cjmp LABEL27
 mov rdi, qword [rdx]
 jmp LABEL125
LABEL39:
 cmp sil, CONST
 cjmp LABEL127
 jmp LABEL45
LABEL134:
 cmp byte [rax + CONST], CONST
 lea rsi, qword [rax + CONST]
 cjmp LABEL131
 mov rax, rsi
LABEL127:
 cmp rax, rcx
 cjmp LABEL134
 or dword [rbx + CONST], CONST
LABEL139:
 mov qword [rdx], rax
 jmp LABEL137
LABEL131:
 add rax, CONST
 jmp LABEL139
LABEL108:
 cmp byte [rax + CONST], CONST
 cjmp LABEL45
 mov r8d, CONST
 jmp LABEL52
LABEL27:
 pop rbx
 pop rbp
 pop r12
 ret
LABEL58:
 add rdi, CONST
 mov qword [rdx], rdi
 mov rcx, qword [rbx + CONST]
 jmp LABEL125
