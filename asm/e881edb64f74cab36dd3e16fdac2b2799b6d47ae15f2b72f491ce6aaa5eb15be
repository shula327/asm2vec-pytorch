 .name fcn.0004b950
 .offset 000000000004b950
 .file perl5.30.0
LABEL44:
 movzx eax, word [CONST]
 ud2
LABEL173:
 push r15
 push r14
 push r13
 mov r13, rsi
 push r12
 xor r12d, r12d
 push rbp
 mov rbp, rdi
 push rbx
 mov rbx, rsi
 sub rsp, CONST
LABEL73:
 movzx eax, word [rbx + CONST]
 and ax, CONST
 cmp ax, CONST
 cjmp LABEL16
LABEL37:
 cjmp LABEL17
 cmp ax, CONST
 cjmp LABEL19
 cjmp LABEL20
 cmp ax, CONST
 cjmp LABEL22
 cmp ax, CONST
 cjmp LABEL24
 test byte [rbx + CONST], CONST
 cjmp LABEL26
 nop dword [rax]
LABEL50:
 test byte [rbx + CONST], CONST
 cjmp LABEL29
LABEL66:
 mov rax, qword [rbx + CONST]
 test rax, rax
 cjmp LABEL29
 mov rbx, rax
 movzx eax, word [rbx + CONST]
 and ax, CONST
 cmp ax, CONST
 cjmp LABEL37
LABEL16:
 mov rsi, rbx
 mov rdi, rbp
 call CONST
 nop dword [rax + rax]
LABEL115:
 mov rax, qword [rbx + CONST]
 test byte [rax + CONST], CONST
 cjmp LABEL44
 mov rdx, qword [rax + CONST]
 movzx eax, word [rdx + CONST]
 and ax, CONST
 cjmp LABEL48
 cmp qword [rdx + CONST], CONST
 cjmp LABEL50
LABEL159:
 mov rax, qword [rdx + CONST]
 xor edx, edx
 test byte [rax + CONST], CONST
 cjmp LABEL54
LABEL161:
 mov rsi, qword [rbx + CONST]
LABEL109:
 cmp byte [rbx + CONST], CONST
 cjmp LABEL57
 movzx eax, word [rsi + CONST]
 and ax, CONST
 cmp ax, CONST
 cmovne rsi, r12
LABEL217:
 mov ecx, CONST
 mov rdi, rbp
 call CONST
 test byte [rbx + CONST], CONST
 cjmp LABEL66
 nop word [rax + rax]
LABEL29:
 movzx eax, byte [rbx + CONST]
 mov rbx, qword [rbx + CONST]
 test al, CONST
 cjmp LABEL71
 test rbx, rbx
 cjmp LABEL73
LABEL95:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL24:
 test ax, ax
 cjmp LABEL50
 mov rax, qword [rbx + CONST]
 cmp rax, CONST
 cjmp LABEL86
 cmp rax, CONST
 cjmp LABEL50
 nop dword [rax]
LABEL86:
 mov rsi, rbx
 mov rdi, rbp
 call CONST
 jmp LABEL50
LABEL71:
 test rbx, rbx
 cjmp LABEL95
 cmp r13, rbx
 cjmp LABEL29
 jmp LABEL95
LABEL20:
 cmp ax, CONST
 cjmp LABEL86
 cmp ax, CONST
 cjmp LABEL50
 mov rdx, qword [rbx + CONST]
 movzx eax, word [rdx + CONST]
 and ax, CONST
 cmp ax, CONST
 cjmp LABEL50
 mov rsi, qword [rbx + CONST]
 jmp LABEL109
LABEL17:
 cmp ax, CONST
 cjmp LABEL111
 cmp ax, CONST
 cjmp LABEL113
 cmp ax, CONST
 cjmp LABEL115
 add ax, CONST
 and ax, CONST
 cmp ax, CONST
 cjmp LABEL50
 mov qword [rbp + CONST], rbx
 jmp LABEL50
LABEL111:
 cmp ax, CONST
 cjmp LABEL123
 cmp ax, CONST
 cjmp LABEL50
LABEL113:
 cmp qword [rbx + CONST], CONST
 cjmp LABEL50
 mov esi, CONST
 mov edx, CONST
 mov rdi, rbp
 call CONST
 lea r15, qword [rax*CONST]
 mov r14, rax
 mov rax, qword [rbp + CONST]
 add rax, r15
 mov rsi, qword [rax]
 test rsi, rsi
 cjmp LABEL138
 mov edx, dword [rsi + CONST]
 cmp edx, CONST
 cjmp LABEL141
 sub edx, CONST
 mov dword [rsi + CONST], edx
 mov rax, qword [rbp + CONST]
 add rax, r15
LABEL138:
 mov rdx, qword [rbx + CONST]
 mov qword [rax], rdx
 mov rax, qword [rbp + CONST]
 mov rdx, qword [rax + r14*CONST]
 mov eax, dword [rdx + CONST]
 test eax, CONST
 cjmp LABEL152
 or eax, CONST
 mov dword [rdx + CONST], eax
LABEL152:
 mov qword [rbx + CONST], CONST
 mov qword [rbx + CONST], r14
 jmp LABEL50
LABEL48:
 cmp ax, CONST
 cjmp LABEL159
 cmp ax, CONST
 cjmp LABEL161
 jmp LABEL50
LABEL22:
 test byte [rbx + CONST], CONST
 cjmp LABEL113
 mov rsi, rbx
 mov rdi, rbp
 call CONST
 jmp LABEL113
LABEL19:
 mov rsi, qword [rbx + CONST]
 test rsi, rsi
 cjmp LABEL50
 mov rdi, rbp
 call LABEL173
 jmp LABEL50
LABEL123:
 test byte [rbx + CONST], CONST
 cjmp LABEL50
 mov r14, qword [rbx + CONST]
 movzx eax, word [r14 + CONST]
 and ax, CONST
 sub ax, CONST
 cmp ax, CONST
 cjmp LABEL50
 mov esi, CONST
 mov rdi, rbp
 call CONST
 test al, al
 cjmp LABEL50
 test byte [r14 + CONST], CONST
 cjmp LABEL50
 mov rax, qword [r14 + CONST]
 movzx eax, word [rax + CONST]
 and ax, CONST
 lea edx, dword [rax + CONST]
 and dx, CONST
 cmp dx, CONST
 cjmp LABEL50
 cmp ax, CONST
 cjmp LABEL50
 mov rax, qword [rbp + CONST]
 mov edx, dword [r14 + CONST]
 mov esi, CONST
 mov rdi, rbp
 mov r15d, dword [rax + CONST]
 mov dword [rax + CONST], edx
 lea rdx, qword [rip + CONST]
 xor eax, eax
 call CONST
 xor eax, eax
 mov esi, CONST
 mov rdi, rbp
 lea rdx, qword [rip + CONST]
 call CONST
 mov rax, qword [rbp + CONST]
 mov dword [rax + CONST], r15d
 jmp LABEL50
LABEL57:
 xor esi, esi
 jmp LABEL217
LABEL26:
 mov esi, CONST
 mov rdi, rbp
 call CONST
 test al, al
 cjmp LABEL50
 mov rdx, qword [rbx + CONST]
 mov rax, qword [rbp + CONST]
 mov r14, qword [rax + rdx*CONST]
 cmp byte [r14 + CONST], CONST
 cjmp LABEL50
 mov rax, qword [r14 + CONST]
 mov rax, qword [rax + CONST]
 test rax, rax
 cjmp LABEL50
 cmp qword [rax + CONST], CONST
 cjmp LABEL50
 mov rdi, rbp
 call CONST
 xor ecx, ecx
 mov rdx, r14
 mov rdi, rbp
 mov r15, rax
 mov rsi, rax
 mov r8d, CONST
 call CONST
 mov rcx, r15
 mov esi, CONST
 mov rdi, rbp
 lea rdx, qword [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL50
LABEL54:
 mov rdx, qword [rax + CONST]
 jmp LABEL161
LABEL141:
 mov rdi, rbp
 call CONST
 mov rax, qword [rbp + CONST]
 add rax, r15
 jmp LABEL138
