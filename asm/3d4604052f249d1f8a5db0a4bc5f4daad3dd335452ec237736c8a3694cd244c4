 .name fcn.00022e80
 .offset 0000000000022e80
 .file grep
LABEL144:
 call CONST
 push r15
 mov r15, rdi
 push r14
 mov r14d, edx
 push r13
 push r12
 mov r12, rsi
 push rbp
 push rbx
 mov rbx, rcx
 sub rsp, CONST
 mov ebp, dword [rdi + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov edx, ebp
 and edx, CONST
 test rcx, rcx
 cjmp LABEL19
 movzx eax, byte [rcx]
 cmp eax, CONST
 cjmp LABEL22
LABEL19:
 test edx, edx
 cjmp LABEL24
 test r14d, r14d
 cjmp LABEL26
 mov byte [rsp + CONST], CONST
 mov r13d, r14d
 test bpl, CONST
 cjmp LABEL30
LABEL81:
 test rbx, rbx
 cjmp LABEL32
 movzx eax, byte [rbx]
LABEL193:
 cmp eax, CONST
 cjmp LABEL35
LABEL32:
 test ebp, CONST
 cjmp LABEL37
 endbr64
 mov edi, r13d
 call CONST
 mov r12d, eax
 test r14d, r14d
 cjmp LABEL43
 nop dword [rax]
LABEL102:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL47
 add rsp, CONST
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL22:
 cmp byte [rcx + CONST], CONST
 cjmp LABEL19
 cmp byte [rcx + CONST], CONST
 cjmp LABEL19
 test edx, edx
 cjmp LABEL24
 test r14d, r14d
 cjmp LABEL64
 test ebp, CONST
 cjmp LABEL66
 mov edx, ebp
 mov byte [rsp + CONST], CONST
 shl edx, CONST
 and edx, CONST
 or edx, CONST
LABEL176:
 mov esi, edx
 mov rdi, rbx
 xor eax, eax
 call CONST
 mov r13d, eax
LABEL139:
 test r13d, r13d
 cjmp LABEL78
 mov ebp, dword [r15 + CONST]
 test bpl, CONST
 cjmp LABEL81
 nop dword [rax]
LABEL30:
 lea rdx, [rsp + CONST]
 mov esi, r13d
 mov edi, CONST
 call CONST
 test eax, eax
 cjmp LABEL88
 mov rax, qword [rsp + CONST]
 cmp qword [r12 + CONST], rax
 cjmp LABEL91
 mov rax, qword [rsp + CONST]
 cmp qword [r12 + CONST], rax
 cjmp LABEL91
 mov ebp, dword [r15 + CONST]
 jmp LABEL32
LABEL24:
 and ebp, CONST
 cjmp LABEL98
 test r14d, r14d
 cjmp LABEL100
LABEL98:
 xor r12d, r12d
 jmp LABEL102
LABEL91:
 call CONST
 mov dword [rax], CONST
LABEL88:
 mov r12d, CONST
 test r14d, r14d
 cjmp LABEL102
LABEL43:
 call CONST
 mov edi, r13d
 mov ebp, dword [rax]
 mov rbx, rax
 call CONST
 mov dword [rbx], ebp
 jmp LABEL102
LABEL35:
 cmp byte [rbx + CONST], CONST
 cjmp LABEL32
 cmp byte [rbx + CONST], CONST
 cjmp LABEL30
 jmp LABEL32
LABEL100:
 mov edi, r14d
 xor r12d, r12d
 call CONST
 jmp LABEL102
LABEL66:
 lea r13, [rdi + CONST]
 mov rdi, r13
 call CONST
 mov byte [rsp + CONST], al
 test al, al
 cjmp LABEL129
 mov edx, ebp
 shl edx, CONST
 and edx, CONST
 or edx, CONST
LABEL175:
 mov edi, dword [r15 + CONST]
 mov rsi, rbx
 xor eax, eax
 call CONST
 mov r13d, eax
 jmp LABEL139
LABEL37:
 mov esi, dword [r15 + CONST]
 cmp esi, r13d
 cjmp LABEL142
 cmp esi, CONST
 cjmp LABEL144
LABEL142:
 cmp byte [rsp + CONST], CONST
 cjmp LABEL146
 and ebp, CONST
 cjmp LABEL148
 test esi, esi
 cjmp LABEL148
 mov edi, esi
LABEL182:
 call CONST
LABEL148:
 mov dword [r15 + CONST], r13d
 xor r12d, r12d
 jmp LABEL102
LABEL129:
 mov rdi, r13
 call CONST
 mov ebp, dword [r15 + CONST]
 mov r13d, eax
 test eax, eax
 cjmp LABEL161
 mov byte [rsp + CONST], CONST
 mov r14d, eax
 test bpl, CONST
 cjmp LABEL32
 jmp LABEL30
LABEL161:
 mov byte [rsp + CONST], CONST
 mov eax, ebp
 and eax, CONST
LABEL189:
 mov edx, ebp
 shl edx, CONST
 and edx, CONST
 or edx, CONST
 test eax, eax
 cjmp LABEL175
 jmp LABEL176
LABEL146:
 lea rdi, [r15 + CONST]
 call CONST
 mov edi, eax
 test eax, eax
 cjmp LABEL148
 jmp LABEL182
LABEL78:
 mov r12d, CONST
 jmp LABEL102
LABEL47:
 call CONST
LABEL26:
 mov eax, ebp
 mov byte [rsp + CONST], CONST
 and eax, CONST
 jmp LABEL189
LABEL64:
 mov byte [rsp + CONST], CONST
 mov r13d, r14d
 test bpl, CONST
 cjmp LABEL193
 jmp LABEL30
