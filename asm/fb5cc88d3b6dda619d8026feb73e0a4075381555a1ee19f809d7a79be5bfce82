 .name fcn.000056e0
 .offset 00000000000056e0
 .file locale
 push rbx
 mov edx, dword [rdi + CONST]
 mov rbx, rdi
 add rdx, rdi
 cmp byte [rdx], CONST
 cjmp LABEL5
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL9
LABEL67:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL13
LABEL75:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL17
LABEL83:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL21
LABEL91:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL25
LABEL99:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL29
LABEL107:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL33
LABEL115:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL37
LABEL123:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL41
LABEL131:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL45
LABEL139:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL49
LABEL147:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL53
LABEL155:
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL57
LABEL163:
 pop rbx
 ret
LABEL5:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL67
LABEL9:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL75
LABEL13:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL83
LABEL17:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL91
LABEL21:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL99
LABEL25:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL107
LABEL29:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL115
LABEL33:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL123
LABEL37:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL131
LABEL41:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL139
LABEL45:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL147
LABEL49:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL155
LABEL53:
 xor eax, eax
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rbx + CONST]
 add rdx, rbx
 cmp byte [rdx], CONST
 cjmp LABEL163
LABEL57:
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 xor eax, eax
 pop rbx
 jmp CONST
