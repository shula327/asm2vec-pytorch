 .name main
 .offset 00000000000024a0
 .file diff3
 push r15
 push r14
 xor r14d, r14d
 push r13
 xor r13d, r13d
 push r12
 movsxd r12, edi
 push rbp
 mov rbp, rsi
 push rbx
 lea rbx, qword [rip + CONST]
 sub rsp, CONST
 mov rdi, qword [rsi]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov dword [rip + CONST], CONST
 call CONST
 lea rsi, qword [rip + CONST]
 mov edi, CONST
 call CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 lea rdi, qword [rip + CONST]
 call CONST
 xor edi, edi
 call CONST
LABEL45:
 xor r8d, r8d
 lea rcx, qword [rip + CONST]
 mov rsi, rbp
 mov edi, r12d
 lea rdx, qword [rip + CONST]
 call CONST
 cmp eax, -1
 cjmp LABEL35
 sub eax, CONST
 cmp eax, CONST
 cjmp LABEL38
 movsxd rax, dword [rbx + rax*CONST]
 add rax, rbx
 jmp rax
 mov byte [rip + CONST], CONST
 mov byte [rip + CONST], CONST
 add r14d, CONST
 jmp LABEL45
 mov byte [rip + CONST], CONST
 jmp LABEL45
 mov rbx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov edi, CONST
 lea rbp, qword [rip + CONST]
 mov rdx, rbx
 mov rsi, rax
 xor eax, eax
 call CONST
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 lea rsi, qword [rip + CONST]
 mov edi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
 mov rbx, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, qword [rip + CONST]
 call CONST
 mov rsi, rbx
 lea rbx, qword [rip + CONST]
 mov rdi, rax
 call CONST
 lea rsi, qword [rip + CONST]
 jmp LABEL78
LABEL91:
 mov rdi, qword [rip + CONST]
 mov rax, qword [rdi + CONST]
 cmp rax, qword [rdi + CONST]
 cjmp LABEL82
 lea rdx, qword [rax + CONST]
 mov qword [rdi + CONST], rdx
 mov byte [rax], CONST
LABEL183:
 add rbx, CONST
 mov rsi, qword [rbx]
 test rsi, rsi
 cjmp LABEL89
LABEL78:
 cmp byte [rsi], CONST
 cjmp LABEL91
 mov edx, CONST
 xor edi, edi
 add rbx, CONST
 call CONST
 mov rsi, rbp
 mov edi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
 mov rsi, qword [rbx]
 test rsi, rsi
 cjmp LABEL78
LABEL89:
 mov rbx, qword [rip + CONST]
 mov edx, CONST
 xor edi, edi
 lea rsi, qword [rip + CONST]
 call CONST
 mov rdi, rax
 mov rsi, rbx
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 mov rbx, rax
 call CONST
 mov rcx, rbx
 mov edi, CONST
 lea rsi, qword [rip + CONST]
 mov rdx, rax
 xor eax, eax
 call CONST
 call CONST
 call CONST
 jmp LABEL129
 mov rax, qword [rip + CONST]
 mov qword [rip + CONST], rax
 jmp LABEL45
 mov byte [rip + CONST], CONST
 add r14d, CONST
 jmp LABEL45
 lea rdi, qword [rip + CONST]
 call CONST
 mov rcx, qword [rip + CONST]
 xor r9d, r9d
 mov rdi, qword [rip + CONST]
 mov r8, rax
 lea rdx, qword [rip + CONST]
 lea rsi, qword [rip + CONST]
 xor eax, eax
 call CONST
 call CONST
LABEL129:
 xor eax, eax
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL150
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
 mov byte [rip + CONST], CONST
 jmp LABEL45
 mov byte [rip + CONST], CONST
 jmp LABEL45
 mov byte [rip + CONST], CONST
 jmp LABEL45
 mov byte [rip + CONST], CONST
 jmp LABEL45
 cmp r13d, CONST
 cjmp LABEL168
 mov rdx, qword [rip + CONST]
 movsxd rax, r13d
 add r13d, CONST
 mov qword [rsp + rax*CONST + CONST], rdx
 jmp LABEL45
 mov byte [rip + CONST], CONST
 add r14d, CONST
 mov byte [rip + CONST], CONST
 jmp LABEL45
 mov byte [rip + CONST], CONST
 add r14d, CONST
 jmp LABEL45
LABEL82:
 mov esi, CONST
 call CONST
 jmp LABEL183
LABEL35:
 movzx ecx, byte [rip + CONST]
 mov eax, ecx
 mov edx, ecx
 not eax
 test eax, r14d
 mov eax, r14d
 not eax
 setne bl
 and eax, ecx
 movzx ecx, byte [rip + CONST]
 or byte [rip + CONST], al
 and byte [rip + CONST], CONST
 or eax, ecx
 mov byte [rip + CONST], bl
 mov byte [rip + CONST], al
 and byte [rip + CONST], CONST
 sub r14d, CONST
 cjmp LABEL201
 test byte [rip + CONST], dl
 cjmp LABEL201
 test r13d, r13d
 cjmp LABEL205
 test al, CONST
 cjmp LABEL201
LABEL205:
 movsxd rax, dword [rip + CONST]
 mov ecx, r12d
 sub ecx, eax
 cmp ecx, CONST
 cjmp LABEL212
 cmp ecx, CONST
 cjmp LABEL214
 mov rsi, qword [rbp + r12*CONST + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL214:
 mov rsi, qword [rbp + rax*CONST + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL38:
 xor esi, esi
 xor edi, edi
 call CONST
LABEL212:
 lea rcx, qword [rbp + rax*CONST]
 movsxd r13, r13d
 mov qword [rsp + CONST], rcx
LABEL232:
 cmp r13d, CONST
 cjmp LABEL228
 mov rax, qword [rcx + r13*CONST]
 mov qword [rsp + r13*CONST + CONST], rax
 add r13, CONST
 jmp LABEL232
LABEL228:
 or edx, ebx
 mov ebp, CONST
 mov r15, qword [rsp + CONST]
 lea rsi, qword [rip + CONST]
 movzx ebx, dl
 sub ebp, ebx
 movsxd r12, ebp
 mov rdi, qword [r15 + r12*CONST]
 call CONST
 test eax, eax
 cjmp LABEL243
 mov rdi, qword [r15]
 lea rsi, qword [rip + CONST]
 lea ebp, dword [rbx + CONST]
 call CONST
 test eax, eax
 cjmp LABEL249
 movsxd r12, ebp
 lea rsi, qword [rip + CONST]
 mov rdi, qword [r15 + r12*CONST]
 call CONST
 test eax, eax
 cjmp LABEL249
LABEL243:
 mov eax, CONST
 mov dword [rsp + CONST], CONST
 lea r13, qword [rsp + CONST]
 sub eax, ebp
 mov dword [rsp + CONST], ebp
 mov dword [rsp + CONST], eax
 cdqe
 mov dword [rsp + CONST], CONST
 mov dword [rsp + rax*CONST + CONST], CONST
 mov rax, qword [rsp + CONST]
 mov dword [rsp + r12*CONST + CONST], CONST
 mov rbx, rax
 lea r12, qword [rax + CONST]
LABEL277:
 mov rbp, qword [rbx]
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 call CONST
 test eax, eax
 cjmp LABEL274
LABEL674:
 add rbx, CONST
 cmp r12, rbx
 cjmp LABEL277
 xor esi, esi
 mov edi, CONST
 lea rbp, qword [rsp + CONST]
 call CONST
 mov r15, qword [rsp + CONST]
 mov rdx, rbp
 movsxd rax, dword [rsp + CONST]
 lea rcx, qword [rsp + CONST]
 mov rbx, qword [r15 + rax*CONST]
 movsxd rax, dword [rsp + CONST]
 mov rdi, qword [r15 + rax*CONST]
 mov rsi, rbx
 call CONST
 mov rdx, rbp
 mov rsi, rbx
 lea rcx, qword [rsp + CONST]
 mov r12, rax
 movsxd rax, dword [rsp + CONST]
 lea rbx, qword [rip + CONST]
 mov rbp, rbx
 mov rdi, qword [r15 + rax*CONST]
 call CONST
 mov qword [rsp + CONST], r12
 mov qword [rsp + CONST], rax
 lea rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 lea rax, qword [rsp + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 nop word cs:[rax + rax]
LABEL561:
 mov rax, qword [rsp + CONST]
 mov r14, qword [rsp + CONST]
 test rax, rax
 cjmp LABEL311
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 test r14, r14
 cjmp LABEL317
 mov rdx, qword [rax + CONST]
 mov rax, qword [r14 + CONST]
 cmp rdx, rax
 setg r8b
 setle al
 movzx edi, r8b
 movzx r8d, r8b
 movzx eax, al
 mov r14, qword [rsp + rdi*CONST + CONST]
 mov rcx, rdi
 shl r8, CONST
LABEL600:
 mov rdx, qword [r14 + CONST]
 mov rsi, qword [r14 + CONST]
 mov qword [rsp + rdi*CONST + CONST], r14
 mov qword [rsp + rdi*CONST + CONST], r14
 mov qword [rsp + rdi*CONST + CONST], rdx
 mov rdx, qword [rsp + rax*CONST + CONST]
 mov qword [r14 + CONST], CONST
 test rdx, rdx
 cjmp LABEL337
 lea r10, qword [rsi + CONST]
 cmp r10, qword [rdx + CONST]
 cjmp LABEL340
 jmp LABEL337
LABEL366:
 mov rdi, qword [rsp + rax*CONST + CONST]
 mov qword [rdi + CONST], rdx
LABEL368:
 mov rdi, qword [rsp + rax*CONST + CONST]
 mov qword [rsp + rax*CONST + CONST], rdx
 mov rdi, qword [rdi + CONST]
 mov qword [rdx + CONST], CONST
 mov rdx, qword [rdx + CONST]
 mov qword [rsp + rax*CONST + CONST], rdi
 mov eax, ecx
 xor eax, CONST
 cmp rdx, rsi
 cjmp LABEL353
 mov esi, ecx
 mov ecx, eax
 mov eax, esi
 mov rsi, rdx
LABEL353:
 cdqe
 mov rdx, qword [rsp + rax*CONST + CONST]
 test rdx, rdx
 cjmp LABEL361
 lea rdi, qword [rsi + CONST]
 cmp qword [rdx + CONST], rdi
 cjmp LABEL361
LABEL340:
 cmp qword [rsp + rax*CONST + CONST], CONST
 cjmp LABEL366
 mov qword [rsp + rax*CONST + CONST], rdx
 jmp LABEL368
LABEL361:
 movsxd rdi, ecx
LABEL337:
 mov rax, qword [rsp + r8 + CONST]
 mov rbx, qword [rax + CONST]
 mov rax, qword [rsp + rdi*CONST + CONST]
 mov r15, qword [rax + CONST]
 mov rax, qword [rsp + CONST]
 test rax, rax
 cjmp LABEL376
 mov rdx, rbx
 sub rdx, qword [rax + CONST]
 add rdx, qword [rax]
 mov rax, r15
 mov qword [rsp + CONST], rdx
 mov rdx, qword [rsp + CONST]
 sub rax, qword [rdx + CONST]
 add rax, qword [rdx + CONST]
 mov qword [rsp + CONST], rax
LABEL623:
 mov rax, qword [rsp + CONST]
 test rax, rax
 cjmp LABEL388
 mov r14, rbx
 sub r14, qword [rax + CONST]
 add r14, qword [rax]
 mov r12, r15
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], r14
 sub r12, qword [rax + CONST]
 add r12, qword [rax + CONST]
 mov qword [rsp + CONST], r12
LABEL611:
 mov rdx, qword [rsp + CONST]
 mov edi, CONST
 mov r13, qword [rsp + CONST]
 mov qword [rsp + CONST], rdx
 call CONST
 mov rdx, qword [rsp + CONST]
 mov qword [rax + CONST], r13
 mov rbp, rax
 sub r13, rdx
 mov dword [rax], CONST
 mov qword [rax + CONST], CONST
 mov qword [rax + CONST], rdx
 mov qword [rax + CONST], r14
 mov qword [rax + CONST], r12
 mov qword [rax + CONST], rbx
 mov qword [rax + CONST], r15
 add r13, CONST
 cjmp LABEL415
 mov qword [rax + CONST], CONST
 mov qword [rax + CONST], CONST
LABEL581:
 sub r12, r14
 add r12, CONST
 cjmp LABEL420
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], CONST
LABEL570:
 mov rdi, qword [rbp + CONST]
 sub rdi, qword [rbp + CONST]
 add rdi, CONST
 mov r12, rdi
 cjmp LABEL427
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], CONST
LABEL589:
 mov rax, qword [rsp + CONST]
 mov r12, rax
 lea r13, qword [rax + CONST]
LABEL461:
 mov r14, qword [r12]
 test r14, r14
 cjmp LABEL435
 jmp LABEL436
LABEL455:
 mov r14, qword [r14 + CONST]
 test r14, r14
 cjmp LABEL436
LABEL435:
 mov rax, qword [r14 + CONST]
 mov rsi, qword [r14 + CONST]
 mov rcx, qword [rbp + CONST]
 mov rdi, qword [r14 + CONST]
 mov rdx, rax
 sub rsi, rax
 sub rdx, rbx
 mov rax, rsi
 mov rsi, qword [r14 + CONST]
 shl rdx, CONST
 lea r8, qword [rax + CONST]
 add rcx, rdx
 add rdx, qword [rbp + CONST]
 call CONST
 test al, al
 cjmp LABEL455
LABEL514:
 lea rdi, qword [rip + CONST]
 call CONST
 nop dword [rax]
LABEL436:
 add r12, CONST
 cmp r13, r12
 cjmp LABEL461
 lea rax, qword [rsp + CONST]
 lea r15, qword [rbp + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 lea rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
LABEL545:
 mov rax, qword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 mov r12, qword [rsi + rax]
 mov rsi, qword [rsp + CONST]
 mov r14, qword [rsi + rax]
 mov rsi, qword [rsp + CONST]
 mov r13, qword [rsi + rax]
 mov rdx, r14
 xor eax, eax
 lea rdi, qword [r13 + CONST]
 jmp LABEL478
LABEL494:
 mov rcx, qword [rbp + CONST]
 add rdx, CONST
 mov rsi, qword [rcx + rax]
 mov rcx, qword [r15]
 mov qword [rcx + rax], rsi
 mov rcx, qword [rbp + CONST]
 mov rsi, qword [rcx + rax]
 mov rcx, qword [r15 + CONST]
 mov qword [rcx + rax], rsi
 add rax, CONST
LABEL478:
 mov rcx, rdi
 test r12, r12
 cjmp LABEL491
 mov rcx, qword [r12]
LABEL491:
 cmp rcx, rdx
 cjmp LABEL494
 add r13, CONST
 sub r13, r14
 test r12, r12
 cjmp LABEL498
LABEL526:
 mov rax, qword [r12]
 mov rdi, qword [r12 + CONST]
 mov rcx, qword [r15 + CONST]
 mov rsi, qword [r12 + CONST]
 mov rdx, rax
 sub rdi, rax
 sub rdx, r14
 mov rax, rdi
 mov rdi, qword [r12 + CONST]
 shl rdx, CONST
 lea r8, qword [rax + CONST]
 add rcx, rdx
 add rdx, qword [r15]
 call CONST
 test al, al
 cjmp LABEL514
 mov rdx, qword [r12 + CONST]
 mov rax, qword [r12 + CONST]
 mov r12, qword [r12 + CONST]
 sub rdx, rbx
 add rax, CONST
 sub rax, r14
 lea rdx, qword [rdx*CONST + CONST]
 jmp LABEL522
LABEL538:
 mov rcx, qword [r12]
 sub rcx, r14
 cmp rax, rcx
 cjmp LABEL526
LABEL540:
 mov rcx, qword [rbp + CONST]
 mov rsi, qword [rcx + rdx]
 mov rcx, qword [r15]
 mov qword [rcx + rax*CONST], rsi
 mov rcx, qword [rbp + CONST]
 mov rsi, qword [rcx + rdx]
 mov rcx, qword [r15 + CONST]
 add rdx, CONST
 mov qword [rcx + rax*CONST], rsi
 add rax, CONST
LABEL522:
 test r12, r12
 cjmp LABEL538
 cmp rax, r13
 cjmp LABEL540
LABEL498:
 add qword [rsp + CONST], CONST
 mov rax, qword [rsp + CONST]
 add r15, CONST
 cmp rax, CONST
 cjmp LABEL545
 cmp qword [rsp + CONST], CONST
 cjmp LABEL547
 cmp qword [rsp + CONST], CONST
 cjmp LABEL549
 mov r12, qword [rbp + CONST]
 mov rax, qword [rbp + CONST]
 sub r12, qword [rbp + CONST]
 sub rax, qword [rbp + CONST]
 cmp r12, rax
 cjmp LABEL555
LABEL664:
 mov dword [rbp], CONST
LABEL631:
 mov rax, qword [rsp + CONST]
 mov qword [rax], rbp
 lea rax, qword [rbp + CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL561
LABEL420:
 mov esi, CONST
 mov rdi, r12
 call CONST
 mov esi, CONST
 mov rdi, r12
 mov qword [rbp + CONST], rax
 call CONST
 mov qword [rbp + CONST], rax
 jmp LABEL570
LABEL415:
 mov esi, CONST
 mov rdi, r13
 call CONST
 mov esi, CONST
 mov rdi, r13
 mov qword [rbp + CONST], rax
 call CONST
 mov r12, qword [rbp + CONST]
 mov r14, qword [rbp + CONST]
 mov qword [rbp + CONST], rax
 jmp LABEL581
LABEL427:
 mov esi, CONST
 call CONST
 mov esi, CONST
 mov rdi, r12
 mov qword [rbp + CONST], rax
 call CONST
 mov qword [rbp + CONST], rax
 jmp LABEL589
LABEL311:
 test r14, r14
 cjmp LABEL591
 mov qword [rsp + CONST], CONST
 xor eax, eax
 mov r8d, CONST
 mov ecx, CONST
 mov qword [rsp + CONST], CONST
 mov edi, CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 jmp LABEL600
LABEL388:
 mov rdx, qword [rbp + CONST]
 mov rax, qword [rbp + CONST]
 mov r14, rbx
 mov r12, r15
 sub r14, rdx
 sub r12, rdx
 add r14, rax
 add r12, rax
 mov qword [rsp + CONST], r14
 mov qword [rsp + CONST], r12
 jmp LABEL611
LABEL376:
 mov rax, qword [rbp + CONST]
 mov rsi, r15
 mov rcx, qword [rbp + CONST]
 mov rdx, rbx
 sub rsi, rax
 sub rdx, rax
 mov rax, rsi
 add rdx, rcx
 add rax, rcx
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], rax
 jmp LABEL623
LABEL317:
 mov r14, rax
 xor r8d, r8d
 mov eax, CONST
 xor ecx, ecx
 xor edi, edi
 jmp LABEL600
LABEL547:
 mov dword [rbp], CONST
 jmp LABEL631
LABEL549:
 mov dword [rbp], CONST
 jmp LABEL631
LABEL555:
 mov rbx, qword [rbp + CONST]
 lea rax, qword [r12 + CONST]
 xor r12d, r12d
 mov r14, qword [rbp + CONST]
 mov r15, qword [rbp + CONST]
 mov r13, qword [rbp + CONST]
 mov qword [rsp + CONST], rbp
 mov rbp, r12
 mov r12, rbx
 mov rbx, rax
 jmp LABEL644
LABEL659:
 mov rdi, qword [r13 + rbp*CONST]
 test rdi, rdi
 cjmp LABEL647
 mov rsi, qword [r14 + rbp*CONST]
 test rsi, rsi
 cjmp LABEL647
 mov rdx, qword [r15 + rbp*CONST]
 cmp rdx, qword [r12 + rbp*CONST]
 cjmp LABEL647
 call CONST
 add rbp, CONST
 test eax, eax
 cjmp LABEL647
LABEL644:
 cmp rbx, rbp
 cjmp LABEL659
 mov rbp, qword [rsp + CONST]
 mov dword [rbp], CONST
 jmp LABEL631
LABEL647:
 mov rbp, qword [rsp + CONST]
 jmp LABEL664
LABEL274:
 mov rdx, r13
 mov rsi, rbp
 mov edi, CONST
 call CONST
 test eax, eax
 cjmp LABEL670
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL674
 mov rcx, qword [rbx]
 mov esi, CONST
 mov edi, CONST
 xor eax, eax
 lea rdx, qword [rip + CONST]
 call CONST
LABEL591:
 movzx r15d, byte [rip + CONST]
 mov rbx, qword [rsp + CONST]
 test r15b, r15b
 cjmp LABEL684
 movzx eax, byte [rip + CONST]
 mov byte [rsp + CONST], al
 test al, al
 cjmp LABEL688
 movsxd rax, dword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 mov rdx, qword [rip + CONST]
 mov rdi, qword [rsi + rax*CONST]
 lea rsi, qword [rip + CONST]
 call CONST
 mov rax, qword [rsp + CONST]
 mov byte [rsp + CONST], CONST
 mov r15, qword [rip + CONST]
 mov r14, qword [rip + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov rax, r15
 mov r15, r14
 mov r14, rax
LABEL723:
 test rbx, rbx
 cjmp LABEL709
 mov eax, dword [rbx]
 cmp eax, CONST
 cjmp LABEL712
 sub eax, CONST
 mov eax, dword [rsp + rax*CONST + CONST]
 add eax, CONST
 cmp eax, CONST
 cjmp LABEL717
 cmp eax, CONST
 cjmp LABEL719
 cmp eax, CONST
 cjmp LABEL712
LABEL725:
 mov rbx, qword [rbx + CONST]
 jmp LABEL723
LABEL712:
 cmp byte [rip + CONST], CONST
 cjmp LABEL725
 lea rax, qword [rip + CONST]
 mov dword [rsp + CONST], CONST
 movzx r13d, byte [rip + CONST]
 mov qword [rsp + CONST], rax
LABEL851:
 mov r12, qword [rsp + CONST]
 not r12
 add r12, qword [rbx + CONST]
 mov qword [rsp + CONST], r12
 mov rbp, r12
LABEL748:
 sub rbp, CONST
 cjmp LABEL736
 jmp LABEL737
LABEL751:
 lea rdx, qword [rax + CONST]
 mov qword [r14 + CONST], rdx
 movzx r12d, byte [rax]
LABEL756:
 mov rax, qword [r15 + CONST]
 cmp rax, qword [r15 + CONST]
 cjmp LABEL743
 lea rdx, qword [rax + CONST]
 mov qword [r15 + CONST], rdx
 mov byte [rax], r12b
LABEL768:
 cmp r12d, CONST
 cjmp LABEL748
LABEL736:
 mov rax, qword [r14 + CONST]
 cmp rax, qword [r14 + CONST]
 cjmp LABEL751
 mov rdi, r14
 call CONST
 mov r12d, eax
 cmp eax, -1
 cjmp LABEL756
 mov eax, dword [r14]
 test al, CONST
 cjmp LABEL759
 test al, CONST
 cjmp LABEL756
LABEL832:
 lea rdi, qword [rip + CONST]
 call CONST
 nop dword [rax]
LABEL743:
 movzx esi, r12b
 mov rdi, r15
 call CONST
 jmp LABEL768
LABEL737:
 test r13b, r13b
 cjmp LABEL770
 cmp dword [rsp + CONST], CONST
 cjmp LABEL772
LABEL955:
 cmp byte [rip + CONST], CONST
 cjmp LABEL774
LABEL930:
 mov rcx, r15
 mov edx, CONST
 mov esi, CONST
 lea rdi, qword [rip + CONST]
 call CONST
 mov byte [rsp + CONST], r13b
LABEL770:
 xor ebp, ebp
 jmp LABEL782
LABEL798:
 lea rax, qword [rbx + rcx*CONST]
 mov esi, CONST
 mov rcx, r15
 mov rdx, qword [rax + CONST]
 mov rax, qword [rax + CONST]
 mov rdx, qword [rdx + rbp*CONST]
 mov rdi, qword [rax + rbp*CONST]
 add rbp, CONST
 call CONST
LABEL782:
 movsxd rcx, dword [rsp + CONST]
 mov rdx, rcx
 shl rdx, CONST
 mov rax, qword [rbx + rdx + CONST]
 sub rax, qword [rbx + rdx + CONST]
 cmp rbp, rax
 cjmp LABEL798
 test r13b, r13b
 cjmp LABEL800
LABEL865:
 mov r13, qword [rbx + CONST]
 sub r13, qword [rbx + CONST]
 add r13, CONST
 mov rbp, r13
LABEL813:
 sub rbp, CONST
 cjmp LABEL806
 mov rax, qword [r14 + CONST]
 mov rcx, qword [r14 + CONST]
 jmp LABEL809
LABEL816:
 lea rdx, qword [rax + CONST]
 mov qword [r14 + CONST], rdx
 cmp byte [rax], CONST
 cjmp LABEL813
LABEL830:
 mov rax, rdx
LABEL809:
 cmp rax, rcx
 cjmp LABEL816
 mov rdi, r14
 call CONST
 cmp eax, CONST
 cjmp LABEL813
 cmp eax, -1
 cjmp LABEL822
 mov eax, dword [r14]
 test al, CONST
 cjmp LABEL759
 test al, CONST
 cjmp LABEL827
LABEL822:
 mov rdx, qword [r14 + CONST]
 mov rcx, qword [r14 + CONST]
 jmp LABEL830
LABEL827:
 test rbp, rbp
 cjmp LABEL832
 cmp qword [rbx + CONST], CONST
 cjmp LABEL832
LABEL901:
 mov rax, qword [rip + CONST]
 test byte [rax], CONST
 cjmp LABEL837
LABEL1032:
 mov rdi, qword [rsp + CONST]
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 call CONST
 movzx edi, byte [rsp + CONST]
 call CONST
LABEL719:
 movzx r13d, byte [rip + CONST]
 test r13b, r13b
 cjmp LABEL725
 lea rax, qword [rip + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 jmp LABEL851
LABEL717:
 movzx r13d, byte [rip + CONST]
 test r13b, r13b
 cjmp LABEL725
 lea rax, qword [rip + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 jmp LABEL851
LABEL800:
 mov rcx, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, r15
 xor eax, eax
 lea rdx, qword [rip + CONST]
 call CONST
 jmp LABEL865
LABEL837:
 lea rdi, qword [rip + CONST]
 call CONST
LABEL806:
 mov r12, qword [rsp + CONST]
 add r12, qword [rsp + CONST]
 lea rax, qword [r12 + r13]
 mov qword [rsp + CONST], rax
 jmp LABEL725
LABEL759:
 xor edi, edi
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 call CONST
 mov rdi, rax
 call CONST
LABEL709:
 mov rax, r14
 mov r14, r15
 mov r15, rax
 jmp LABEL882
LABEL894:
 lea rdx, qword [rax + CONST]
 mov qword [r15 + CONST], rdx
 movzx eax, byte [rax]
LABEL898:
 mov rdx, qword [r14 + CONST]
 cmp rdx, qword [r14 + CONST]
 cjmp LABEL888
 lea rcx, qword [rdx + CONST]
 mov qword [r14 + CONST], rcx
 mov byte [rdx], al
LABEL882:
 mov rax, qword [r15 + CONST]
 cmp rax, qword [r15 + CONST]
 cjmp LABEL894
 mov rdi, r15
 call CONST
 cmp eax, -1
 cjmp LABEL898
 test byte [r15], CONST
 cjmp LABEL898
 jmp LABEL901
LABEL888:
 movzx esi, al
 mov rdi, r14
 call CONST
 jmp LABEL882
LABEL774:
 mov rcx, qword [rsp + CONST]
 mov rdx, qword [rsp + CONST]
 mov rdi, r15
 xor eax, eax
 mov esi, CONST
 xor ebp, ebp
 call CONST
 jmp LABEL913
LABEL929:
 lea rax, qword [rbx + rcx*CONST]
 mov esi, CONST
 mov rcx, r15
 mov rdx, qword [rax + CONST]
 mov rax, qword [rax + CONST]
 mov rdx, qword [rdx + rbp*CONST]
 mov rdi, qword [rax + rbp*CONST]
 add rbp, CONST
 call CONST
LABEL913:
 movsxd rcx, dword [rsp + CONST]
 mov rdx, rcx
 shl rdx, CONST
 mov rax, qword [rbx + rdx + CONST]
 sub rax, qword [rbx + rdx + CONST]
 cmp rbp, rax
 cjmp LABEL929
 jmp LABEL930
LABEL772:
 mov rcx, qword [rsp + CONST]
 lea rdx, qword [rip + CONST]
 xor eax, eax
 xor ebp, ebp
 mov esi, CONST
 mov rdi, r15
 call CONST
 jmp LABEL938
LABEL954:
 lea rax, qword [rbx + rcx*CONST]
 mov esi, CONST
 mov rcx, r15
 mov rdx, qword [rax + CONST]
 mov rax, qword [rax + CONST]
 mov rdx, qword [rdx + rbp*CONST]
 mov rdi, qword [rax + rbp*CONST]
 add rbp, CONST
 call CONST
LABEL938:
 movsxd rcx, dword [rsp + CONST]
 mov rdx, rcx
 shl rdx, CONST
 mov rax, qword [rbx + rdx + CONST]
 sub rax, qword [rbx + rdx + CONST]
 cmp rbp, rax
 cjmp LABEL954
 jmp LABEL955
LABEL150:
 call CONST
LABEL684:
 mov rax, qword [rsp + CONST]
 mov rbp, qword [rip + CONST]
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL964
LABEL970:
 mov rax, qword [rbx + CONST]
 mov qword [rbx + CONST], r14
 mov r14, rbx
 mov rbx, rax
LABEL964:
 test rbx, rbx
 cjmp LABEL970
 mov byte [rsp + CONST], CONST
 mov byte [rsp + CONST], r15b
 jmp LABEL973
LABEL988:
 sub eax, CONST
 mov eax, dword [rsp + rax*CONST + CONST]
 add eax, CONST
 cmp eax, CONST
 cjmp LABEL978
 cmp eax, CONST
 cjmp LABEL980
 cmp eax, CONST
 cjmp LABEL982
LABEL990:
 mov r14, qword [r14 + CONST]
LABEL973:
 test r14, r14
 cjmp LABEL985
 mov eax, dword [r14]
 cmp eax, CONST
 cjmp LABEL988
LABEL982:
 cmp byte [rip + CONST], CONST
 cjmp LABEL990
 movsxd rax, dword [rsp + CONST]
 shl rax, CONST
 add rax, r14
 cmp byte [rip + CONST], CONST
 mov rbx, qword [rax + CONST]
 mov r15, qword [rax + CONST]
 cjmp LABEL997
 mov rcx, r15
 lea rdx, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 mov esi, CONST
 call CONST
 movzx r12d, byte [rip + CONST]
 test r12b, r12b
 cjmp LABEL1006
LABEL1342:
 mov rcx, rbp
 mov edx, CONST
 mov esi, CONST
 mov r13d, CONST
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, dword [rsp + CONST]
 mov rsi, r14
 mov rdi, rbp
 call CONST
 or eax, r12d
 mov r9d, eax
 jmp LABEL1019
LABEL670:
 mov rdi, qword [rbx]
 call CONST
LABEL688:
 cmp byte [rip + CONST], CONST
 lea rdx, qword [rip + CONST]
 mov r14, rbx
 mov r13, qword [rip + CONST]
 lea rax, qword [rip + CONST]
 cmovne rax, rdx
 mov qword [rsp + CONST], rax
 lea rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
LABEL1144:
 test r14, r14
 cjmp LABEL1032
 mov eax, dword [r14]
 cmp eax, CONST
 cjmp LABEL1035
 mov byte [rsp + CONST], CONST
 mov r12d, CONST
 mov dword [rsp + CONST], CONST
LABEL1157:
 mov rcx, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, r13
 xor eax, eax
 lea rdx, qword [rip + CONST]
 xor r15d, r15d
 call CONST
 mov dword [rsp + CONST], r12d
 jmp LABEL1047
LABEL1086:
 lea rcx, qword [rbx + CONST]
 lea rdx, qword [rip + CONST]
 mov rdi, r13
 xor eax, eax
 mov esi, CONST
 call CONST
LABEL1094:
 cmp dword [rsp + CONST], r15d
 cjmp LABEL1055
 cmp rbx, rbp
 cjmp LABEL1057
LABEL1055:
 cmp dword [rsp + CONST], CONST
 mov r15d, dword [rsp + CONST]
 cjmp LABEL1060
 mov rbx, qword [rsp + CONST]
 lea rax, qword [rip + CONST]
 mov r15d, dword [rax + rbx*CONST]
LABEL1060:
 cmp r15d, CONST
 cjmp LABEL1065
LABEL1047:
 movsxd rax, r15d
 lea rdx, qword [rip + CONST]
 mov esi, CONST
 mov rdi, r13
 movsxd r12, dword [rsp + rax*CONST + CONST]
 mov qword [rsp + CONST], rax
 mov rax, r12
 shl rax, CONST
 add rax, r14
 mov rbx, qword [rax + CONST]
 mov rbp, qword [rax + CONST]
 lea eax, dword [r15 + CONST]
 mov dword [rsp + CONST], eax
 mov ecx, eax
 xor eax, eax
 call CONST
 mov rax, rbx
 sub rax, rbp
 cjmp LABEL1084
 sub rax, CONST
 cjmp LABEL1086
 mov r8, rbp
 mov rcx, rbx
 lea rdx, qword [rip + CONST]
 mov rdi, r13
 mov esi, CONST
 xor eax, eax
 call CONST
 jmp LABEL1094
LABEL1084:
 mov rcx, rbx
 lea rdx, qword [rip + CONST]
 mov rdi, r13
 xor eax, eax
 mov esi, CONST
 call CONST
 jmp LABEL1094
LABEL1057:
 lea r12, qword [r14 + r12*CONST]
 mov qword [rsp + CONST], r14
 xor r15d, r15d
 mov r14, rbx
 mov r8, rbp
LABEL1125:
 mov rdi, qword [rsp + CONST]
 mov rsi, r13
 mov qword [rsp + CONST], r8
 call CONST
 mov rax, qword [r12 + CONST]
 mov rcx, r13
 mov esi, CONST
 mov rbx, qword [rax + r15*CONST]
 mov rax, qword [r12 + CONST]
 mov rbp, qword [rax + r15*CONST]
 mov rdi, rbx
 add r15, CONST
 mov rdx, rbp
 call CONST
 mov r8, qword [rsp + CONST]
 mov rax, r8
 sub rax, r14
 cmp rax, r15
 cjmp LABEL1125
 cmp byte [rbx + rbp + CONST], CONST
 mov r14, qword [rsp + CONST]
 cjmp LABEL1055
 xor edi, edi
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 call CONST
 lea rdx, qword [rip + CONST]
 mov esi, CONST
 mov rdi, r13
 mov rcx, rax
 xor eax, eax
 call CONST
 jmp LABEL1055
LABEL168:
 xor esi, esi
 lea rdi, qword [rip + CONST]
 call CONST
LABEL1065:
 mov r14, qword [r14 + CONST]
 jmp LABEL1144
LABEL1035:
 cjmp LABEL1145
 cmp eax, CONST
 cjmp LABEL1145
 sub eax, CONST
 mov byte [rsp + CONST], CONST
 mov r12d, dword [rsp + rax*CONST + CONST]
 lea eax, dword [r12 + CONST]
 mov byte [rsp + CONST], al
 xor eax, eax
 test r12d, r12d
 sete al
 mov dword [rsp + CONST], eax
 jmp LABEL1157
LABEL201:
 xor esi, esi
 lea rdi, qword [rip + CONST]
 call CONST
LABEL249:
 lea rdi, qword [rip + CONST]
 call CONST
LABEL1145:
 lea rdi, qword [rip + CONST]
 call CONST
LABEL980:
 cmp byte [rip + CONST], CONST
 cjmp LABEL990
 movsxd rax, dword [rsp + CONST]
 shl rax, CONST
 add rax, r14
 mov rbx, qword [rax + CONST]
 mov r15, qword [rax + CONST]
LABEL997:
 movsxd r13, dword [rsp + CONST]
 mov r12, r13
 mov dword [rsp + CONST], r13d
 shl r12, CONST
 add r12, r14
 mov rax, qword [r12 + CONST]
 sub rax, qword [r12 + CONST]
 add rax, CONST
 cjmp LABEL1180
 mov rax, r15
 sub rax, rbx
 cmp rax, -1
 cjmp LABEL1184
 test rax, rax
 cjmp LABEL1186
 mov r8, r15
 mov rcx, rbx
 lea rdx, qword [rip + CONST]
 mov rdi, rbp
 mov esi, CONST
 xor eax, eax
 call CONST
LABEL1278:
 shl r13, CONST
 mov edx, dword [rsp + CONST]
 mov rsi, r14
 mov rdi, rbp
 mov rax, qword [r14 + r13 + CONST]
 sub rax, qword [r12 + CONST]
 mov r12, rax
 call CONST
 add r12, CONST
 mov rdx, rbx
 mov rdi, rbp
 movzx esi, al
 mov rcx, r12
 call CONST
 jmp LABEL990
LABEL978:
 cmp byte [rip + CONST], CONST
 cjmp LABEL990
 movsxd rax, dword [rsp + CONST]
 lea rdx, qword [rip + CONST]
 mov esi, CONST
 mov rdi, rbp
 mov r13d, CONST
 shl rax, CONST
 add rax, r14
 mov r15, qword [rax + CONST]
 mov rbx, qword [rax + CONST]
 xor eax, eax
 mov rcx, r15
 call CONST
 xor r9d, r9d
LABEL1019:
 mov rcx, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, rbp
 xor eax, eax
 lea rdx, qword [rip + CONST]
 mov byte [rsp + CONST], r9b
 call CONST
 movsxd rax, dword [rsp + CONST]
 movzx esi, byte [rsp + CONST]
 mov rdi, rbp
 mov dword [rsp + CONST], eax
 mov qword [rsp + CONST], rax
 shl rax, CONST
 mov r12, rax
 movsxd rax, dword [rsp + CONST]
 add r12, r14
 shl rax, CONST
 mov rcx, qword [r12 + CONST]
 sub rcx, qword [r12 + CONST]
 mov rdx, qword [r14 + rax + CONST]
 sub rdx, qword [r14 + rax + CONST]
 lea rcx, qword [rcx + rdx + CONST]
 lea rdx, qword [r15 + CONST]
 call CONST
 lea rcx, qword [rbx + CONST]
 cmp r13d, CONST
 cjmp LABEL1250
 mov r8, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, rbp
 xor eax, eax
 lea rdx, qword [rip + CONST]
 xor r15d, r15d
 call CONST
 cmp r13d, CONST
 cjmp LABEL1259
LABEL1289:
 mov rax, qword [rsp + CONST]
 lea rdx, qword [rbx + CONST]
 movzx esi, r15b
 mov rdi, rbp
 shl rax, CONST
 mov rcx, qword [r14 + rax + CONST]
 sub rcx, qword [r12 + CONST]
 add rcx, CONST
 call CONST
 movzx eax, byte [rsp + CONST]
 mov byte [rsp + CONST], al
 jmp LABEL990
LABEL1186:
 mov rcx, r15
 lea rdx, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 mov esi, CONST
 call CONST
 jmp LABEL1278
LABEL1259:
 mov edx, dword [rsp + CONST]
 mov rsi, r14
 mov rdi, rbp
 call CONST
 mov rcx, rbp
 mov edx, CONST
 mov esi, CONST
 lea rdi, qword [rip + CONST]
 mov r15d, eax
 call CONST
 jmp LABEL1289
LABEL1250:
 mov r8, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, rbp
 xor eax, eax
 lea rdx, qword [rip + CONST]
 xor r15d, r15d
 call CONST
 jmp LABEL1289
LABEL1184:
 mov rcx, r15
 lea rdx, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 mov esi, CONST
 call CONST
 jmp LABEL1278
LABEL1180:
 cmp rbx, r15
 cjmp LABEL1306
 mov r8, r15
 mov rcx, rbx
 lea rdx, qword [rip + CONST]
 mov rdi, rbp
 mov esi, CONST
 xor eax, eax
 call CONST
 jmp LABEL990
LABEL985:
 cmp byte [rip + CONST], CONST
 cjmp LABEL1032
 mov rcx, rbp
 mov edx, CONST
 mov esi, CONST
 lea rdi, qword [rip + CONST]
 call CONST
 jmp LABEL1032
LABEL1306:
 mov rcx, rbx
 lea rdx, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 mov esi, CONST
 call CONST
 jmp LABEL990
LABEL1006:
 mov r12d, dword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov rdi, rbp
 xor eax, eax
 lea rdx, qword [rip + CONST]
 mov esi, CONST
 call CONST
 mov edx, r12d
 mov rsi, r14
 mov rdi, rbp
 call CONST
 mov r12d, eax
 jmp LABEL1342
