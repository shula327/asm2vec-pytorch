 .name fcn.00005f50
 .offset 0000000000005f50
 .file diff3
 push r15
 push r14
 push r13
 push r12
 mov r12, r9
 push rbp
 mov rbp, rdi
 push rbx
 mov rbx, r8
 sub rsp, CONST
 test rsi, rsi
 cjmp LABEL11
 mov r9, rcx
 mov r8, rdx
 mov rcx, rsi
 xor eax, eax
 lea rdx, qword [rip + CONST]
 mov esi, CONST
 call CONST
LABEL88:
 xor edi, edi
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 call CONST
 mov r8d, CONST
 mov esi, CONST
 mov rdi, rbp
 mov rcx, rax
 lea rdx, qword [rip + CONST]
 xor eax, eax
 call CONST
 xor edi, edi
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, rax
 call CONST
 cmp r12, CONST
 cjmp LABEL38
 lea rdx, qword [rip + CONST]
 movsxd rax, dword [rdx + r12*CONST]
 add rax, rdx
 jmp rax
 mov r9, qword [rbx + CONST]
 mov rax, qword [rbx + CONST]
 mov edx, CONST
 xor edi, edi
 mov r8, qword [rbx + CONST]
 lea rsi, qword [rip + CONST]
 mov r13, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 mov r15, qword [rbx + CONST]
 mov qword [rsp + CONST], r9
 mov r14, qword [rbx + CONST]
 mov rbx, qword [rbx]
 mov qword [rsp], rax
 mov qword [rsp + CONST], r8
 call CONST
 sub rsp, CONST
LABEL108:
 mov r9, qword [rsp + CONST]
 mov rdx, rax
 mov rcx, rbx
 mov esi, CONST
 mov rdi, rbp
 xor eax, eax
 push r9
 push r13
 push r12
 push r15
 push r14
 mov r9, qword [rsp + CONST]
 mov r8, qword [rsp + CONST]
 call CONST
 add rsp, CONST
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL11:
 mov r8, rcx
 mov esi, CONST
 mov rcx, rdx
 xor eax, eax
 lea rdx, qword [rip + CONST]
 call CONST
 jmp LABEL88
 mov r10, qword [rbx + CONST]
 mov r9, qword [rbx + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 mov rax, qword [rbx + CONST]
 mov r8, qword [rbx + CONST]
 mov r13, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 mov qword [rsp + CONST], r10
 mov r15, qword [rbx + CONST]
 mov r14, qword [rbx + CONST]
 mov qword [rsp + CONST], r9
 mov qword [rsp], rax
 mov rbx, qword [rbx]
 mov qword [rsp + CONST], r8
LABEL274:
 xor edi, edi
 call CONST
 mov r10, qword [rsp + CONST]
 push r10
 jmp LABEL108
 mov rbx, qword [rbx]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 add rsp, CONST
 mov rdi, rbp
 mov esi, CONST
 mov rcx, rbx
 mov rdx, rax
 pop rbx
 xor eax, eax
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
 mov r12, qword [rbx + CONST]
 mov edx, CONST
 mov rbx, qword [rbx]
 xor edi, edi
 lea rsi, qword [rip + CONST]
 call CONST
 add rsp, CONST
 mov r8, r12
 mov rcx, rbx
 mov rdx, rax
 pop rbx
 mov rdi, rbp
 mov esi, CONST
 pop rbp
 xor eax, eax
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
 mov r13, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 mov edx, CONST
 xor edi, edi
 mov rbx, qword [rbx]
 lea rsi, qword [rip + CONST]
 call CONST
 add rsp, CONST
 mov r9, r13
 mov r8, r12
 mov rcx, rbx
 mov rdx, rax
 pop rbx
 mov rdi, rbp
 mov esi, CONST
 pop rbp
 xor eax, eax
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
 mov edx, CONST
 xor edi, edi
 mov r14, qword [rbx + CONST]
 mov r13, qword [rbx + CONST]
 lea rsi, qword [rip + CONST]
 mov r12, qword [rbx + CONST]
 mov rbx, qword [rbx]
 call CONST
 sub rsp, CONST
LABEL207:
 push r14
 mov rdx, rax
 mov r9, r13
 mov r8, r12
 mov rcx, rbx
 mov rdi, rbp
 mov esi, CONST
 xor eax, eax
 call CONST
 pop rax
 pop rdx
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
 mov r15, qword [rbx + CONST]
 mov edx, CONST
 xor edi, edi
 mov r14, qword [rbx + CONST]
 lea rsi, qword [rip + CONST]
 mov r13, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 mov rbx, qword [rbx]
 call CONST
 push r15
 jmp LABEL207
 mov r8, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 mov edx, CONST
 xor edi, edi
 mov r15, qword [rbx + CONST]
 mov r14, qword [rbx + CONST]
 lea rsi, qword [rip + CONST]
 mov qword [rsp], r8
 mov r13, qword [rbx + CONST]
 mov rbx, qword [rbx]
 call CONST
 sub rsp, CONST
 mov r9, r13
 push r12
 push r15
 push r14
LABEL258:
 mov r8, qword [rsp + CONST]
 mov rcx, rbx
 mov rdx, rax
 mov rdi, rbp
 mov esi, CONST
 xor eax, eax
 call CONST
 add rsp, CONST
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
 mov r9, qword [rbx + CONST]
 mov r13, qword [rbx + CONST]
 mov edx, CONST
 xor edi, edi
 mov r12, qword [rbx + CONST]
 mov r15, qword [rbx + CONST]
 lea rsi, qword [rip + CONST]
 mov r14, qword [rbx + CONST]
 mov r8, qword [rbx + CONST]
 mov qword [rsp + CONST], r9
 mov rbx, qword [rbx]
 mov qword [rsp], r8
 call CONST
 push r13
 push r12
 push r15
 push r14
 mov r9, qword [rsp + CONST]
 jmp LABEL258
LABEL38:
 mov r10, qword [rbx + CONST]
 mov r9, qword [rbx + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 mov rax, qword [rbx + CONST]
 mov r8, qword [rbx + CONST]
 mov r13, qword [rbx + CONST]
 mov r12, qword [rbx + CONST]
 mov qword [rsp + CONST], r10
 mov r15, qword [rbx + CONST]
 mov r14, qword [rbx + CONST]
 mov qword [rsp + CONST], r9
 mov qword [rsp], rax
 mov rbx, qword [rbx]
 mov qword [rsp + CONST], r8
 jmp LABEL274
