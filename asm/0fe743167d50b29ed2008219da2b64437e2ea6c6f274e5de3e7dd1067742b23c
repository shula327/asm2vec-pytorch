 .name fcn.0000da10
 .offset 000000000000da10
 .file dpkg
 endbr64
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r8d, dword [rsi + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov qword [rsp], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 cmp r8d, CONST
 cjmp LABEL15
 lea rcx, [rip + CONST]
 mov edx, r8d
 mov rbp, rdi
 mov rbx, rsi
 movsxd rax, dword [rcx + rdx*CONST]
 add rax, rcx
 notrack jmp rax
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 nop
LABEL62:
 mov r12, rsp
 mov rsi, rbx
 mov rdi, r12
 call CONST
 mov rdi, r12
 call CONST
 mov rdi, qword [rbx]
 mov r14, qword [rsp + CONST]
 mov esi, CONST
 call CONST
 mov rcx, r14
 mov rsi, r13
 mov rdi, rbp
 mov rdx, rax
 xor eax, eax
 call CONST
 mov rdi, r12
 call CONST
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL49
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 jmp LABEL62
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 jmp LABEL62
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 jmp LABEL62
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 jmp LABEL62
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 jmp LABEL62
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov r13, rax
 jmp LABEL62
LABEL15:
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov esi, CONST
 xor eax, eax
 lea rdi, [rip + CONST]
 call CONST
LABEL49:
 call CONST
