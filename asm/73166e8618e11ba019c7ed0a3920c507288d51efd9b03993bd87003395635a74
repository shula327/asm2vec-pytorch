 .name fcn.00037800
 .offset 0000000000037800
 .file localedef
LABEL844:
 push rbp
 mov rbp, rsp
 push r15
 push r14
 push r13
 push r12
 push rbx
 mov rbx, rdi
 sub rsp, CONST
 mov qword [rbp + CONST], rdi
 mov rdi, rsi
 mov qword [rbp + CONST], rsi
 mov qword [rbp + CONST], rdx
 mov dword [rbp + CONST], ecx
 mov rax, qword fs:[CONST]
 mov qword [rbp + CONST], rax
 xor eax, eax
 call CONST
 cmp byte [rip + CONST], CONST
 mov qword [rbp + CONST], rax
 mov rax, qword [rbx + CONST]
 mov qword [rbp + CONST], rax
 mov eax, dword [rax + CONST]
 cjmp LABEL23
 bswap eax
LABEL23:
 mov eax, eax
 pxor xmm0, xmm0
 mov edx, CONST
 mov esi, CONST
 mov r15, qword [rbp + CONST]
 add rax, qword [rbp + CONST]
 lea rbx, qword [rbp + CONST]
 lea rcx, qword [rip + CONST]
 mov qword [rbp + CONST], rax
 mov rdi, rbx
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], r15
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov qword [rbp + CONST], rax
 lea rax, qword [r15 + CONST]
 mov dword [rbp + CONST], CONST
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], rax
 movaps xmmword [rbp + CONST], xmm0
 movaps xmmword [rbp + CONST], xmm0
 movaps xmmword [rbp + CONST], xmm0
 call CONST
 mov rdx, qword [rbp + CONST]
 mov qword [r15 + CONST], CONST
 test rdx, rdx
 cjmp LABEL67
 mov rax, qword [rdx]
 add rax, CONST
 and rax, CONST
 cmp rax, CONST
 cjmp LABEL72
 sub rdx, r15
 mov qword [r15 + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 mov dword [rbp + CONST], edx
LABEL975:
 mov rcx, qword [rbp + CONST]
 mov r13, rax
 test rcx, rcx
 cjmp LABEL83
 mov rdi, qword [rcx]
 lea rdx, qword [rdi + CONST]
 and rdx, CONST
 add rax, rdx
 cmp rax, CONST
 cjmp LABEL89
 mov rdi, qword [rbp + CONST]
 mov edx, CONST
 sub rcx, rdi
 mov qword [rdi + CONST], rax
 sar rcx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL83:
 mov rcx, qword [rbp + CONST]
 mov r13, rax
 test rcx, rcx
 cjmp LABEL100
 mov rdi, qword [rcx]
 lea rdx, qword [rdi + CONST]
 and rdx, CONST
 add rax, rdx
 cmp rax, CONST
 cjmp LABEL106
 mov rdi, qword [rbp + CONST]
 mov edx, CONST
 sub rcx, rdi
 mov qword [rdi + CONST], rax
 sar rcx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL100:
 mov rcx, qword [rbp + CONST]
 mov r13, rax
 test rcx, rcx
 cjmp LABEL117
 mov rdi, qword [rcx]
 lea rdx, qword [rdi + CONST]
 and rdx, CONST
 add rax, rdx
 cmp rax, CONST
 cjmp LABEL123
 mov rdi, qword [rbp + CONST]
 mov edx, CONST
 sub rcx, rdi
 mov qword [rdi + CONST], rax
 sar rcx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL117:
 mov rcx, qword [rbp + CONST]
 mov r13, rax
 test rcx, rcx
 cjmp LABEL134
 mov rdi, qword [rcx]
 lea rdx, qword [rdi + CONST]
 and rdx, CONST
 add rax, rdx
 cmp rax, CONST
 cjmp LABEL140
 mov rdi, qword [rbp + CONST]
 mov edx, CONST
 sub rcx, rdi
 mov qword [rdi + CONST], rax
 sar rcx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL134:
 mov rcx, qword [rbp + CONST]
 mov r13, rax
 test rcx, rcx
 cjmp LABEL151
 mov rdi, qword [rcx]
 lea rdx, qword [rdi + CONST]
 and rdx, CONST
 add rax, rdx
 cmp rax, CONST
 cjmp LABEL157
 mov rdi, qword [rbp + CONST]
 mov edx, CONST
 sub rcx, rdi
 mov qword [rdi + CONST], rax
 sar rcx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL151:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL168
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL174
 mov rdi, qword [rbp + CONST]
 sub rdx, rdi
 mov qword [rdi + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL168:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL186
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL192
 mov rdi, qword [rbp + CONST]
 sub rdx, rdi
 mov qword [rdi + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL186:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL204
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL210
 mov rdi, qword [rbp + CONST]
 sub rdx, rdi
 mov qword [rdi + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL204:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL222
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL228
 mov rdi, qword [rbp + CONST]
 sub rdx, rdi
 mov qword [rdi + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL222:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL240
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL246
 mov rdi, qword [rbp + CONST]
 sub rdx, rdi
 mov qword [rdi + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL240:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL258
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add rax, rcx
 cmp rax, CONST
 cjmp LABEL264
 mov rdi, qword [rbp + CONST]
 sub rdx, rdi
 mov qword [rdi + CONST], rax
 sar rdx, CONST
 mov rcx, rdx
 mov edx, CONST
 shl edx, cl
 or dword [rbp + CONST], edx
LABEL258:
 mov rdx, qword [rbp + CONST]
 mov r13, rax
 test rdx, rdx
 cjmp LABEL276
 mov rdi, qword [rdx]
 lea rcx, qword [rdi + CONST]
 and rcx, CONST
 add r13, rcx
 cmp r13, CONST
 cjmp LABEL282
 mov rax, qword [rbp + CONST]
 sub rdx, rax
 mov qword [rax + CONST], r13
 mov eax, CONST
 sar rdx, CONST
 mov rcx, rdx
 shl eax, cl
 or dword [rbp + CONST], eax
LABEL276:
 lea rax, qword [r13 + CONST]
 mov rdi, rsp
 mov rdx, rax
 and rax, CONST
 sub rdi, rax
 and rdx, CONST
 mov rax, rdi
 cmp rsp, rax
 cjmp LABEL299
LABEL303:
 sub rsp, CONST
 or qword [rsp + CONST], CONST
 cmp rsp, rax
 cjmp LABEL303
LABEL299:
 and edx, CONST
 sub rsp, rdx
 test rdx, rdx
 cjmp LABEL307
LABEL1011:
 mov rax, qword [rbp + CONST]
 lea r12, qword [rsp + CONST]
 mov edx, r13d
 and r12, CONST
 mov qword [rax + CONST], r12
 mov rdi, r12
 cmp r13d, CONST
 cjmp LABEL315
 test dl, CONST
 cjmp LABEL317
LABEL1017:
 test dl, CONST
 cjmp LABEL319
LABEL1008:
 and edx, CONST
 cjmp LABEL321
LABEL998:
 mov eax, dword [rbp + CONST]
 mov rdi, r12
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL326
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 lea rdi, qword [rbx + CONST]
 and rdi, CONST
 add rdi, r12
LABEL326:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL339
LABEL897:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL344
LABEL887:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL349
LABEL877:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL354
LABEL867:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL359
LABEL972:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL364
LABEL962:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL369
LABEL952:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL374
LABEL942:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL379
LABEL932:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL384
LABEL922:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL389
LABEL912:
 mov eax, dword [rbp + CONST]
 sar eax, CONST
 and eax, CONST
 mov dword [rbp + CONST], eax
 cjmp LABEL394
LABEL902:
 mov rbx, qword [rbp + CONST]
 mov rsi, r13
 mov rdi, r12
 lea rdx, qword [rbx + CONST]
 lea r15, qword [rbx + CONST]
 call CONST
 xor r11d, r11d
 mov dword [rbp + CONST], CONST
 mov r13, r11
 mov r11, qword [rbp + CONST]
 jmp LABEL405
LABEL417:
 cmp r13d, CONST
 setne byte [rbp + CONST]
 cmp byte [rbp + CONST], CONST
 cjmp LABEL409
LABEL425:
 add r13, CONST
 add r15, CONST
 cmp r13, CONST
 cjmp LABEL413
LABEL405:
 mov r9d, dword [rbp + CONST]
 mov dword [rbp + CONST], r13d
 test r9d, r9d
 cjmp LABEL417
 mov eax, dword [rbp + CONST]
 mov ecx, r13d
 sar eax, cl
 not eax
 and eax, CONST
 mov byte [rbp + CONST], al
 cmp byte [rbp + CONST], CONST
 cjmp LABEL425
LABEL409:
 mov eax, dword [rbp + CONST]
 movzx ecx, byte [r15 + CONST]
 movzx r14d, byte [rip + CONST]
 add eax, CONST
 mov dword [rbp + CONST], eax
 movzx eax, byte [r15]
 add eax, CONST
 rol eax, CONST
 add ecx, eax
 mov eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 movzx eax, byte [r15 + CONST]
 rol ecx, CONST
 add eax, ecx
 rol eax, CONST
 mov ecx, eax
 movzx eax, byte [r15 + CONST]
 add eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 mov eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 movzx eax, byte [r15 + CONST]
 rol ecx, CONST
 add eax, ecx
 rol eax, CONST
 mov ecx, eax
 movzx eax, byte [r15 + CONST]
 add eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 mov eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 movzx eax, byte [r15 + CONST]
 rol ecx, CONST
 add eax, ecx
 rol eax, CONST
 mov ecx, eax
 movzx eax, byte [r15 + CONST]
 add eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 mov eax, ecx
 movzx ecx, byte [r15 + CONST]
 rol eax, CONST
 add ecx, eax
 movzx eax, byte [r15 + CONST]
 rol ecx, CONST
 add ecx, eax
 mov eax, CONST
 cmove ecx, eax
 mov rax, qword [rbp + CONST]
 test r14b, r14b
 mov r9d, dword [rax + CONST]
 mov eax, ecx
 mov esi, r9d
 bswap esi
 cmove esi, r9d
 xor edx, edx
 div esi
 sub esi, CONST
 mov eax, ecx
 mov ebx, edx
 xor edx, edx
 div esi
 lea eax, dword [rdx + CONST]
 mov dword [rbp + CONST], eax
 nop dword [rax]
LABEL565:
 mov eax, ebx
 test r14b, r14b
 lea rax, qword [rax + rax*CONST]
 lea r12, qword [r11 + rax*CONST]
 mov edi, dword [r12 + CONST]
 mov edx, edi
 bswap edx
 cmove edx, edi
 test edx, edx
 cjmp LABEL512
 mov rax, qword [r15]
 mov rcx, qword [r15 + CONST]
 xor rax, qword [r12]
 xor rcx, qword [r12 + CONST]
 or rcx, rax
 cjmp LABEL518
 mov rax, qword [rbp + CONST]
 mov rcx, qword [rbp + CONST]
 mov rsi, qword [rax + CONST]
 mov eax, dword [rcx + CONST]
 mov qword [rbp + CONST], rsi
 test r14b, r14b
 cjmp LABEL525
 mov r10d, dword [rcx + CONST]
 bswap eax
 mov eax, eax
 xor ecx, ecx
 add rax, rsi
 bswap r10d
 mov rsi, rax
 mov r10d, r10d
 jmp LABEL534
LABEL545:
 mov r8d, dword [rsi]
 test r8d, r8d
 cjmp LABEL537
 mov r8d, dword [rsi + r13*CONST + CONST]
 bswap r8d
 cmp r8d, edx
 cjmp LABEL541
LABEL537:
 add rcx, CONST
 add rsi, CONST
LABEL534:
 cmp rcx, r10
 cjmp LABEL545
 cjmp LABEL546
 lea rcx, qword [rcx + rcx*CONST]
 mov r8, qword [r15 + CONST]
 lea rcx, qword [rcx + rcx*CONST]
 lea rax, qword [rax + rcx*CONST]
 mov ecx, dword [rbp + CONST]
 mov eax, dword [rax + rcx*CONST + CONST]
LABEL715:
 bswap eax
 mov eax, eax
 cmp rax, r8
 cjmp LABEL556
LABEL546:
 add ebx, dword [rbp + CONST]
LABEL636:
 movzx r14d, byte [rbp + CONST]
 mov eax, r9d
 bswap eax
LABEL637:
 mov edx, ebx
 sub edx, eax
 cmp eax, ebx
 cmovbe ebx, edx
 jmp LABEL565
LABEL646:
 mov ecx, dword [rbp + CONST]
 mov r8d, dword [rax + rcx*CONST + CONST]
 cmp qword [r15 + CONST], r8
 cjmp LABEL569
LABEL556:
 mov rax, qword [rbp + CONST]
 mov ecx, edx
 mov rax, qword [rax + CONST]
 cmp rcx, rax
 cjmp LABEL574
 add edx, r8d
 cmp rax, rdx
 cjmp LABEL577
LABEL574:
 mov r14, qword [rbp + CONST]
 lea rdx, qword [rbp + CONST]
 mov edi, CONST
 mov qword [rbp + CONST], r11
 mov esi, dword [r14 + CONST]
 call CONST
 mov r11, qword [rbp + CONST]
 test eax, eax
 cjmp LABEL586
 mov rsi, qword [rbp + CONST]
 cmp rsi, qword [r14 + CONST]
 mov qword [rbp + CONST], r14
 mov qword [rbp + CONST], rsi
 cjmp LABEL586
 mov qword [rbp + CONST], r11
 call CONST
 mov ecx, CONST
 mov edx, CONST
 mov rsi, qword [rbp + CONST]
 movsxd r14, eax
 mov rax, qword [rbp + CONST]
 neg r14
 mov rdi, qword [rax + CONST]
 and r14, qword [rax + CONST]
 mov r8d, dword [rax + CONST]
 sub rsi, r14
 mov r9, r14
 add rdi, r14
 call CONST
 mov r11, qword [rbp + CONST]
 cmp rax, -1
 cjmp LABEL609
 mov rdi, qword [rbp + CONST]
 mov rax, qword [rbp + CONST]
 movzx r14d, byte [rip + CONST]
 mov qword [rdi + CONST], rax
 mov rax, qword [rdi + CONST]
 mov r8, qword [r15 + CONST]
 mov edi, dword [r12 + CONST]
 mov qword [rbp + CONST], rax
LABEL577:
 test r14b, r14b
 mov eax, edi
 mov rdx, r8
 mov qword [rbp + CONST], r11
 bswap eax
 cmovne edi, eax
 mov esi, edi
 mov rdi, qword [r15 + CONST]
 add rsi, qword [rbp + CONST]
 call CONST
 mov r11, qword [rbp + CONST]
 test eax, eax
 sete al
 test al, al
 jne CONST
LABEL518:
 add ebx, dword [rbp + CONST]
 mov eax, r9d
 test r14b, r14b
 cjmp LABEL636
 jmp LABEL637
LABEL525:
 mov esi, dword [rcx + CONST]
 add rax, qword [rbp + CONST]
 xor ecx, ecx
 jmp LABEL641
LABEL650:
 mov r8d, dword [rax]
 test r8d, r8d
 cjmp LABEL644
 cmp edx, dword [rax + r13*CONST + CONST]
 cjmp LABEL646
LABEL644:
 add rcx, CONST
 add rax, CONST
LABEL641:
 cmp rsi, rcx
 cjmp LABEL650
LABEL569:
 add ebx, dword [rbp + CONST]
 mov eax, r9d
 jmp LABEL637
LABEL512:
 mov eax, dword [rbp + CONST]
 add r13, CONST
 add r15, CONST
 mov dword [rbp + CONST], eax
 cmp r13, CONST
 cjmp LABEL405
LABEL413:
 movzx r12d, byte [rbp + CONST]
 mov rdx, qword [rbp + CONST]
 mov rsi, qword [rbp + CONST]
 mov rdi, qword [rbp + CONST]
 mov ecx, r12d
 call CONST
 mov qword [rbp + CONST], rax
 test rax, rax
 cjmp LABEL668
 mov rdi, qword [rbp + CONST]
 cmp byte [rip + CONST], CONST
 mov eax, dword [rdi + CONST]
 mov edx, dword [rdi + CONST]
 cjmp LABEL673
 bswap eax
 add eax, dword [rbp + CONST]
 bswap edx
 imul edx, edx, CONST
 imul eax, eax, CONST
 cmp edx, eax
 cjmp LABEL680
 mov rax, qword [rbp + CONST]
 mov eax, dword [rax + CONST]
 test eax, eax
 cjmp LABEL684
LABEL819:
 mov qword [rbp + CONST], CONST
 mov rbx, qword [rbp + CONST]
 xor r14d, r14d
 lea r15, qword [rip + CONST]
 mov r12, qword [rbp + CONST]
 jmp LABEL690
LABEL705:
 cmp r14d, CONST
 setne al
LABEL711:
 test al, al
 cjmp LABEL694
 mov eax, dword [rbp + r14*CONST + CONST]
 test eax, eax
 cjmp LABEL697
LABEL694:
 add r14, CONST
 add rbx, CONST
 cmp r14, CONST
 cjmp LABEL701
LABEL690:
 mov eax, dword [rbp + CONST]
 mov r13d, r14d
 test eax, eax
 cjmp LABEL705
 mov eax, dword [rbp + CONST]
 mov ecx, r14d
 sar eax, cl
 not eax
 and eax, CONST
 jmp LABEL711
LABEL541:
 mov eax, dword [rbp + CONST]
 mov r8, qword [r15 + CONST]
 mov eax, dword [rsi + rax*CONST + CONST]
 jmp LABEL715
LABEL609:
 mov rax, qword [rbp + CONST]
 mov qword [rax + CONST], r14
LABEL586:
 cmp byte [rip + CONST], CONST
 mov r8, qword [r15 + CONST]
 mov ecx, dword [r12 + CONST]
 cjmp LABEL721
 bswap ecx
LABEL721:
 mov r8d, r8d
 mov rax, qword [r15 + CONST]
 mov qword [rbp + CONST], r11
 mov rdi, r8
 mov dword [rbp + CONST], ecx
 mov qword [rbp + CONST], r8
 mov qword [rbp + CONST], rax
 call CONST
 mov r8, qword [rbp + CONST]
 mov ecx, dword [rbp + CONST]
 mov r14, rax
 mov rax, qword [rbp + CONST]
 mov rdx, r8
 mov rsi, r14
 mov edi, dword [rax + CONST]
 call CONST
 mov r8, qword [rbp + CONST]
 mov r11, qword [rbp + CONST]
 cmp r8, rax
 cjmp LABEL742
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 mov qword [rbp + CONST], r8
 call CONST
 mov qword [rbp + CONST], rax
 call CONST
 mov rdx, qword [rbp + CONST]
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 mov r11, qword [rbp + CONST]
 mov r8, qword [rbp + CONST]
LABEL742:
 mov rdi, qword [rbp + CONST]
 mov rsi, r14
 mov rdx, r8
 mov qword [rbp + CONST], r11
 call CONST
 mov rdi, r14
 mov dword [rbp + CONST], eax
 call CONST
 mov eax, dword [rbp + CONST]
 movzx r14d, byte [rip + CONST]
 mov r11, qword [rbp + CONST]
 test eax, eax
 sete al
 test al, al
 je CONST
LABEL697:
 mov edi, dword [r12 + CONST]
 mov edx, CONST
 xor esi, esi
 call CONST
 mov qword [rbp + CONST], rax
 cmp rax, -1
 cjmp LABEL778
 cmp r13d, CONST
 cjmp LABEL780
 mov rdi, qword [rbp + CONST]
 cmp rax, rdi
 cjmp LABEL780
LABEL780:
 mov rax, qword [rbp + CONST]
 and eax, CONST
 je CONST
LABEL701:
 mov r8d, dword [rbp + CONST]
 mov eax, dword [rbp + CONST]
 test r8d, r8d
 cjmp LABEL790
 mov rdi, qword [rbp + CONST]
 mov dword [rbp + CONST], eax
 mov rbx, qword [rdi]
 lea rdx, qword [rbx + CONST]
 mov qword [rbp + CONST], rbx
 and rdx, CONST
 add rax, rdx
LABEL790:
 mov edi, dword [rbp + CONST]
 test edi, edi
 cjmp LABEL800
 mov rbx, qword [rbp + CONST]
 mov dword [rbp + CONST], eax
 mov rdi, qword [rbx + CONST]
 lea rdx, qword [rdi + CONST]
 mov qword [rbp + CONST], rdi
 and rdx, CONST
 add rax, rdx
LABEL800:
 mov esi, dword [rbp + CONST]
 test esi, esi
 je CONST
LABEL673:
 add eax, dword [rbp + CONST]
 imul edx, edx, CONST
 imul eax, eax, CONST
 cmp edx, eax
 cjmp LABEL680
 mov rax, qword [rbp + CONST]
 mov edx, dword [rax + CONST]
 test edx, edx
 cjmp LABEL819
 mov rax, rdi
 mov edi, dword [rdi + CONST]
 cmp dword [rax + CONST], edi
 cjmp LABEL680
 mov edx, dword [rax + CONST]
 mov rbx, qword [rbp + CONST]
 mov eax, dword [rax + CONST]
 lea rax, qword [rbx + rax + CONST]
 cmp rdx, rax
 cjmp LABEL680
 mov rax, qword [rbp + CONST]
 imul edx, dword [rax + CONST], CONST
 mov eax, dword [rax + CONST]
LABEL996:
 imul eax, eax, CONST
 cmp eax, edx
 cjmp LABEL819
LABEL680:
 mov rbx, qword [rbp + CONST]
 mov rsi, qword [rbp + CONST]
 mov rdi, rbx
 call CONST
 mov rdx, qword [rbp + CONST]
 mov ecx, r12d
 mov rdi, rbx
 mov rsi, qword [rbp + CONST]
 call LABEL844
 mov r8d, eax
LABEL1020:
 mov rax, qword [rbp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL848
 lea rsp, qword [rbp + CONST]
 mov eax, r8d
 pop rbx
 pop r12
 pop r13
 pop r14
 pop r15
 pop rbp
 ret
LABEL354:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL867
LABEL349:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL877
LABEL344:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL887
LABEL339:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL897
LABEL394:
 mov rax, qword [rbp + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, qword [rax + CONST]
 call CONST
 jmp LABEL902
LABEL389:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL912
LABEL384:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL922
LABEL379:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL932
LABEL374:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL942
LABEL369:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL952
LABEL364:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL962
LABEL359:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rax + CONST]
 mov rsi, qword [rax + CONST]
 mov rdx, rbx
 call CONST
 mov rdi, rax
 lea rax, qword [rbx + CONST]
 and rax, CONST
 add rdi, rax
 jmp LABEL972
LABEL67:
 mov dword [rbp + CONST], CONST
 xor eax, eax
 jmp LABEL975
LABEL684:
 mov ebx, dword [rdi + CONST]
 mov rax, rdi
 cmp dword [rdi + CONST], ebx
 cjmp LABEL680
 mov edx, dword [rax + CONST]
 mov rbx, qword [rbp + CONST]
 mov eax, dword [rax + CONST]
 bswap edx
 mov edx, edx
 bswap eax
 lea rdx, qword [rbx + rdx + CONST]
 mov eax, eax
 cmp rax, rdx
 cjmp LABEL680
 mov rax, qword [rbp + CONST]
 mov edx, dword [rax + CONST]
 mov eax, dword [rax + CONST]
 bswap edx
 bswap eax
 imul edx, edx, CONST
 jmp LABEL996
LABEL321:
 mov byte [rdi], CONST
 jmp LABEL998
LABEL319:
 xor r10d, r10d
 add rdi, CONST
 mov word [rdi + CONST], r10w
 and edx, CONST
 cjmp LABEL998
 jmp LABEL321
LABEL317:
 mov dword [rdi], CONST
 add rdi, CONST
 test dl, CONST
 cjmp LABEL1008
 jmp LABEL319
LABEL307:
 or qword [rsp + rdx + CONST], CONST
 jmp LABEL1011
LABEL315:
 mov ecx, r13d
 xor eax, eax
 shr ecx, CONST
 rep stosq qword [rdi], rax
 test dl, CONST
 cjmp LABEL1017
 jmp LABEL317
LABEL668:
 xor r8d, r8d
 jmp LABEL1020
LABEL210:
 mov eax, CONST
LABEL1040:
 mov edx, CONST
 lea ecx, dword [rax + CONST]
 sub edx, eax
 cmp ecx, CONST
 lea rax, qword [rbx + rax*CONST]
 mov ecx, CONST
 lea rdx, qword [rdx*CONST + CONST]
 mov qword [rax], CONST
 lea rdi, qword [rax + CONST]
 cmova rdx, rcx
 mov ecx, edx
 mov qword [rax + rcx + CONST], CONST
 lea ecx, dword [rdx + CONST]
 xor eax, eax
 shr ecx, CONST
 rep stosq qword [rdi], rax
 jmp LABEL276
LABEL192:
 mov eax, CONST
 jmp LABEL1040
LABEL106:
 mov eax, CONST
 jmp LABEL1040
LABEL89:
 mov eax, CONST
 jmp LABEL1040
LABEL174:
 mov eax, CONST
 jmp LABEL1040
LABEL72:
 mov dword [rbp + CONST], CONST
 xor eax, eax
 xor r13d, r13d
 jmp LABEL1040
LABEL157:
 mov eax, CONST
 jmp LABEL1040
LABEL140:
 mov eax, CONST
 jmp LABEL1040
LABEL123:
 mov eax, CONST
 jmp LABEL1040
LABEL228:
 mov eax, CONST
 jmp LABEL1040
LABEL246:
 mov eax, CONST
 jmp LABEL1040
LABEL264:
 mov eax, CONST
 jmp LABEL1040
LABEL282:
 mov r13, rax
 mov eax, CONST
 jmp LABEL1040
LABEL848:
 call CONST
LABEL778:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov r12, rax
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 nop word cs:[rax + rax]
 nop dword [rax]
