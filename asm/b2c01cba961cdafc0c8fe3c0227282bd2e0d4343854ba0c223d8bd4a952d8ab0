 .name fcn.0002b160
 .offset 000000000002b160
 .file find
 push r14
 push r13
 mov r13, rdi
 push rbp
 push rbx
 sub rsp, CONST
 test rsi, rsi
 cjmp LABEL7
 mov rbx, qword [rsi + CONST]
 test rdx, rdx
 cjmp LABEL10
 test rbx, rbx
 cjmp LABEL7
 mov r14, qword [rdx + CONST]
 mov qword [rsp], rdx
 test r14, r14
 cjmp LABEL16
 lea rdi, qword [rbx + r14]
 mov qword [rsp + CONST], rsi
 mov qword [r13], rdi
 shl rdi, CONST
 call CONST
 mov rsi, qword [rsp + CONST]
 mov rdx, qword [rsp]
 test rax, rax
 mov qword [r13 + CONST], rax
 cjmp LABEL26
 mov r8, qword [rdx + CONST]
 mov r9, qword [rsi + CONST]
 xor ebp, ebp
 xor edx, edx
 xor ecx, ecx
 jmp LABEL32
LABEL46:
 sete dil
 mov qword [rax + rbp*CONST + CONST], rsi
 add rcx, CONST
 movzx edi, dil
 add rdx, rdi
LABEL49:
 cmp rbx, rcx
 cjmp LABEL39
 cmp r14, rdx
 cjmp LABEL41
LABEL32:
 mov rsi, qword [r9 + rcx*CONST]
 mov rdi, qword [r8 + rdx*CONST]
 add rbp, CONST
 cmp rsi, rdi
 cjmp LABEL46
 mov qword [rax + rbp*CONST + CONST], rdi
 add rdx, CONST
 jmp LABEL49
LABEL10:
 test rbx, rbx
 cjmp LABEL16
LABEL7:
 test rdx, rdx
 cjmp LABEL53
 cmp qword [rdx + CONST], CONST
 cjmp LABEL55
LABEL53:
 mov qword [r13 + CONST], CONST
 pxor xmm0, xmm0
 xor eax, eax
 movaps xmmword [r13], xmm0
LABEL100:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r13
 pop r14
 ret
LABEL55:
 mov rsi, rdx
LABEL16:
 add rsp, CONST
 mov rdi, r13
 pop rbx
 pop rbp
 pop r13
 pop r14
 jmp CONST
LABEL39:
 cmp r14, rdx
 cjmp LABEL75
LABEL91:
 mov qword [r13 + CONST], rbp
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r13
 pop r14
 ret
LABEL75:
 sub r14, rdx
 lea rdi, qword [rax + rbp*CONST]
 lea rsi, qword [r8 + rdx*CONST]
 lea r9, qword [r14*CONST]
 add rbp, r14
 mov rdx, r9
 call CONST
 jmp LABEL91
LABEL41:
 sub rbx, rcx
 lea rdi, qword [rax + rbp*CONST]
 lea rsi, qword [r9 + rcx*CONST]
 lea rdx, qword [rbx*CONST]
 add rbp, rbx
 call CONST
 jmp LABEL91
LABEL26:
 mov eax, CONST
 jmp LABEL100
