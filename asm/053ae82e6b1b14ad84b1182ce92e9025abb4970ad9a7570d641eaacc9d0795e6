 .name fcn.001a2dc0
 .offset 00000000001a2dc0
 .file perl5.30.0
 push r15
 push r14
 push r13
 mov r13, rdi
 push r12
 mov r12d, ecx
 push rbp
 push rbx
 sub rsp, CONST
 mov r15, qword [rsi]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 cmp r15, rdx
 cjmp LABEL14
 mov rbp, rsi
 mov esi, CONST
 mov r14, rdx
 call CONST
 mov rdx, r15
 lea r9, qword [rip + CONST]
 mov r11d, CONST
 cmp al, CONST
 sbb r10d, r10d
 xor ebx, ebx
 xor edi, edi
 and r10d, CONST
LABEL70:
 movzx eax, byte [rdx]
 movzx ecx, al
 mov esi, eax
 movzx r8d, byte [r9 + rcx]
 mov rcx, r8
 test rdi, rdi
 cjmp LABEL33
 mov ebx, r11d
 sar ebx, cl
 and eax, ebx
 movsxd rbx, eax
LABEL65:
 add r8, r9
 movzx edi, byte [rdi + r8 + CONST]
 test rdi, rdi
 cjmp LABEL41
 sub rdx, r15
 add rdx, CONST
 mov qword [rsp], rdx
LABEL81:
 cmp rdx, -1
 cjmp LABEL14
 cmp rbx, CONST
 cjmp LABEL48
LABEL90:
 add qword [rbp], rdx
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL52
 add rsp, CONST
 mov eax, ebx
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL33:
 shl rbx, CONST
 and esi, CONST
 or rbx, rsi
 jmp LABEL65
LABEL41:
 add rdx, CONST
 cmp r14, rdx
 cjmp LABEL68
 cmp rdi, CONST
 cjmp LABEL70
LABEL68:
 mov rsi, r14
 mov rdx, rsp
 xor r9d, r9d
 xor r8d, r8d
 sub rsi, r15
 mov ecx, r10d
 mov rdi, r15
 call CONST
 mov rdx, qword [rsp]
 mov rbx, rax
 jmp LABEL81
LABEL48:
 lea rdx, qword [rip + CONST]
 movzx ecx, r12b
 mov rdi, r13
 xor eax, eax
 mov esi, CONST
 movzx ebx, bl
 call CONST
 mov rdx, qword [rsp]
 jmp LABEL90
LABEL14:
 movzx edx, r12b
 lea rsi, qword [rip + CONST]
 mov rdi, r13
 xor eax, eax
 call CONST
LABEL52:
 call CONST
