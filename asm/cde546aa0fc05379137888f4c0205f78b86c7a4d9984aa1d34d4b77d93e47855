 .name fcn.00084aa0
 .offset 0000000000084aa0
 .file perl5.30.0
 push r15
 push r14
 push r13
 xor r13d, r13d
 push r12
 mov r12, rcx
 push rbp
 mov rbp, rsi
 push rbx
 mov rbx, rdi
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 cmp byte [rsi], CONST
 sete r13b
 add r13, rsi
 test rdx, rdx
 cjmp LABEL18
 mov rsi, rdx
 mov ecx, CONST
 mov edx, CONST
 call CONST
 test rax, rax
 cjmp LABEL18
 cmp byte [rax + CONST], CONST
 cjmp LABEL26
LABEL18:
 test r12, r12
 cjmp LABEL28
 mov eax, dword [r12 + CONST]
 test ah, CONST
 cjmp LABEL31
 mov rcx, qword [r12 + CONST]
 cmp al, CONST
 cjmp LABEL34
LABEL238:
 test rcx, rcx
 cjmp LABEL31
 movzx edx, byte [rcx]
 lea rsi, qword [rip + CONST]
 test dl, dl
 cjmp LABEL31
 nop dword [rax + rax]
LABEL52:
 movzx eax, dl
 mov eax, dword [rsi + rax*CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL46
 cmp dl, CONST
 cjmp LABEL48
LABEL46:
 movzx edx, byte [rcx + CONST]
 add rcx, CONST
 test dl, dl
 cjmp LABEL52
LABEL31:
 cmp byte [rbp], CONST
 cjmp LABEL54
LABEL129:
 lea r14, qword [rsp + CONST]
 mov rsi, r13
 lea r9, qword [rsp + CONST]
 mov rdi, rbx
 mov r8d, CONST
 mov ecx, CONST
 mov rdx, r14
 call CONST
 mov r15, qword [rsp + CONST]
 xor ecx, ecx
 mov rsi, r14
 mov rdi, rbx
 mov rbp, rax
 mov edx, r15d
 call CONST
 mov r13d, eax
 test eax, eax
 cjmp LABEL54
 cmp r15, CONST
 cjmp LABEL74
 cmp byte [rsp + r15 + CONST], CONST
 lea rdx, qword [r15 + CONST]
 cjmp LABEL77
LABEL74:
 mov rdx, qword [rbx + CONST]
 mov rax, qword [rdx + CONST]
 test rax, rax
 cjmp LABEL81
 test byte [rax + CONST], CONST
 cjmp LABEL81
 mov rax, qword [rbx + CONST]
 mov ecx, CONST
 test byte [rax + CONST], CONST
 cjmp LABEL81
LABEL160:
 mov r8d, CONST
 mov rdx, r15
 mov rsi, r14
 mov rdi, rbx
 call CONST
 test rax, rax
 cjmp LABEL94
 movzx edx, byte [rax + CONST]
 test edx, edx
 cjmp LABEL94
 cmp edx, CONST
 cjmp LABEL54
 mov rax, qword [rax + CONST]
 mov edx, dword [rax + CONST]
 test edx, edx
 cjmp LABEL103
 cmp qword [rax + CONST], CONST
 cjmp LABEL54
LABEL103:
 test r12, r12
 cjmp LABEL107
 test rax, rax
 cjmp LABEL109
 cmp qword [rax + CONST], CONST
 cjmp LABEL107
 jmp LABEL109
LABEL48:
 cmp dl, CONST
 cjmp LABEL31
 nop dword [rax]
LABEL54:
 xor eax, eax
LABEL151:
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL119
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL28:
 cmp byte [rbp], CONST
 cjmp LABEL129
 mov rdx, qword [rbx + CONST]
 movzx eax, word [rdx + CONST]
 sub ax, CONST
 cmp ax, CONST
 cjmp LABEL54
 movzx eax, byte [rdx + CONST]
 sub eax, CONST
 cmp eax, CONST
 cjmp LABEL54
 movzx ecx, byte [r13]
 lea rax, qword [rip + CONST]
 mov eax, dword [rax + rcx*CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL144
LABEL258:
 mov qword [rdx + CONST], rbp
 mov rax, qword [rbx + CONST]
 mov byte [rax + CONST], CONST
 cmp byte [r13], CONST
 cjmp LABEL149
LABEL227:
 mov eax, CONST
 jmp LABEL151
LABEL26:
 mov rax, qword [rax + CONST]
 test rax, rax
 cjmp LABEL18
 cmp qword [rax + CONST], CONST
 cjmp LABEL54
 jmp LABEL18
LABEL81:
 mov ecx, CONST
 test byte [rdx + CONST], CONST
 cjmp LABEL160
 mov eax, dword [rbx + CONST]
 and eax, CONST
 cmp eax, CONST
 sbb ecx, ecx
 and ecx, CONST
 add ecx, CONST
 jmp LABEL160
LABEL94:
 test r12, r12
 cjmp LABEL107
LABEL109:
 mov rdx, qword [rbx + CONST]
 mov rax, qword [rdx + CONST]
 test rax, rax
 cjmp LABEL173
 test byte [rax + CONST], CONST
 cjmp LABEL173
 mov rax, qword [rbx + CONST]
 test byte [rax + CONST], CONST
 cjmp LABEL173
 mov r13d, CONST
LABEL231:
 mov edx, dword [rsp + CONST]
 mov ecx, r13d
 mov rsi, r14
 mov rdi, rbx
 call CONST
 test rax, rax
 cjmp LABEL54
LABEL107:
 mov rsi, rbp
 xor edx, edx
 mov rdi, rbx
 call CONST
 mov rbp, rax
 mov rax, qword [rbx + CONST]
 mov rax, qword [rax + CONST]
 sub rax, rbp
 cmp rax, CONST
 cjmp LABEL196
 cmp byte [rbp], CONST
 cjmp LABEL196
 cmp byte [rbp + CONST], CONST
 cjmp LABEL54
LABEL196:
 mov rdx, qword [rsp + CONST]
LABEL246:
 mov rsi, r14
 mov rdi, rbx
 call CONST
 xor edx, edx
 mov esi, CONST
 mov rdi, rbx
 mov r13, qword [rbx + CONST]
 mov rcx, rax
 movzx r12d, byte [r13 + CONST]
 call CONST
 mov qword [r13 + r12*CONST + CONST], rax
 mov rax, qword [rbx + CONST]
 movzx edx, byte [rax + CONST]
 mov rax, qword [rax + rdx*CONST + CONST]
 mov byte [rax + CONST], CONST
 mov rax, qword [rbx + CONST]
 mov byte [rax + CONST], CONST
 mov rax, qword [rbx + CONST]
 movzx edx, byte [rax + CONST]
 mov dword [rax + rdx*CONST + CONST], CONST
 mov rax, qword [rbx + CONST]
 add byte [rax + CONST], CONST
 mov rax, qword [rbx + CONST]
 mov qword [rax + CONST], rbp
 cmp byte [rbp], CONST
 cjmp LABEL227
LABEL149:
 mov eax, CONST
 jmp LABEL151
LABEL173:
 test byte [rdx + CONST], CONST
 cjmp LABEL231
 test byte [rbx + CONST], CONST
 mov eax, CONST
 cmovne r13d, eax
 jmp LABEL231
LABEL34:
 mov rax, qword [r12]
 test byte [rax + CONST], CONST
 cjmp LABEL238
 mov rax, qword [rax + CONST]
 lea rcx, qword [rcx + rax + CONST]
 jmp LABEL238
LABEL77:
 cmp byte [rsp + r15 + CONST], CONST
 cjmp LABEL74
 mov qword [rsp + CONST], rdx
 mov byte [rsp + rdx + CONST], CONST
 jmp LABEL246
LABEL144:
 mov rax, qword [rdx + CONST]
 mov rsi, r13
 xor edx, edx
 mov rdi, rbx
 mov r12, qword [rax + CONST]
 call CONST
 mov rdx, qword [rbx + CONST]
 mov r13, rax
 sub rbp, r12
 mov rax, qword [rdx + CONST]
 add rbp, qword [rax + CONST]
 jmp LABEL258
LABEL119:
 call CONST
