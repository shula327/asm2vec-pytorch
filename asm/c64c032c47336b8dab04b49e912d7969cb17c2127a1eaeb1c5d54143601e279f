 .name fcn.0000c960
 .offset 000000000000c960
 .file find
LABEL147:
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r8, qword [rdi]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 test r8, r8
 cjmp LABEL16
 lea rbp, qword [rsp + CONST]
 mov r15, rdi
 mov rdx, r8
 mov rax, rbp
 lea rcx, qword [rsp + CONST]
 nop word [rax + rax]
LABEL27:
 mov qword [rax + CONST], CONST
 add rax, CONST
 mov qword [rax + CONST], CONST
 cmp rcx, rax
 cjmp LABEL27
 mov rdi, qword [r8 + CONST]
 test rdi, rdi
 cjmp LABEL30
 jmp LABEL31
LABEL37:
 mov rdx, rdi
 mov rdi, rax
LABEL30:
 mov rax, qword [rdi + CONST]
 mov esi, dword [rdx + CONST]
 test rax, rax
 cjmp LABEL37
 add rdx, CONST
LABEL212:
 cmp dword [rdi + CONST], CONST
 cjmp LABEL40
 mov r13, r8
 test byte [rip + CONST], CONST
 cjmp LABEL43
LABEL125:
 mov eax, dword [r13 + CONST]
 xor ebx, ebx
 cmp eax, CONST
 cjmp LABEL47
 mov ebx, dword [r13 + CONST]
LABEL47:
 lea rsi, qword [rsp + CONST]
 xor r12d, r12d
 mov qword [rsp], rsi
 lea rsi, qword [rsp + CONST]
 mov qword [rsp + CONST], rsi
 cmp eax, CONST
 cjmp LABEL55
 nop dword [rax]
LABEL165:
 mov r14, qword [r13 + CONST]
 mov eax, dword [r14 + CONST]
 cmp eax, CONST
 cjmp LABEL60
LABEL176:
 cjmp LABEL61
 movzx eax, byte [r14 + CONST]
 cmp ebx, CONST
 cjmp LABEL64
 test al, al
 cjmp LABEL66
 mov rax, qword [r14]
 cmp rax, qword [rip + CONST]
 sete cl
 cmp rax, qword [rip + CONST]
 sete sil
 or ecx, esi
 cmp rax, qword [rip + CONST]
 sete sil
 or cl, sil
 cjmp LABEL76
 cmp rax, qword [rip + CONST]
 cjmp LABEL76
 cmp rax, qword [rip + CONST]
 movzx esi, word [rip + CONST]
 sete cl
 cmp rax, qword [rip + CONST]
 sete dil
 or ecx, edi
 test si, si
 sete dil
 or ecx, edi
 cmp rax, qword [rip + CONST]
 sete dil
 or cl, dil
 cjmp LABEL91
 cmp rax, qword [rip + CONST]
 cjmp LABEL91
 mov edx, dword [r14 + CONST]
 test edx, edx
 cjmp LABEL76
LABEL91:
 cmp rax, qword [rip + CONST]
 cjmp LABEL98
 cmp si, CONST
 cjmp LABEL100
 mov eax, dword [r14 + CONST]
 lea ecx, dword [rax + CONST]
 cmp ecx, CONST
 cjmp LABEL104
LABEL208:
 cmp si, CONST
 cjmp LABEL100
LABEL207:
 test byte [rip + CONST], CONST
 cjmp LABEL108
LABEL265:
 mov rcx, qword [r13 + CONST]
 shl rax, CONST
 lea rdx, qword [rbp + rax]
 mov qword [r15], rcx
 mov rcx, qword [rdx]
 mov qword [r13 + CONST], rcx
 mov qword [rdx], r13
 cmp qword [rsp + rax + CONST], CONST
 cjmp LABEL117
 mov qword [rsp + rax + CONST], r13
 jmp LABEL117
LABEL40:
 call CONST
 test byte [rip + CONST], CONST
 cjmp LABEL43
LABEL192:
 mov r13, qword [r15]
 test r13, r13
 cjmp LABEL125
 xor r12d, r12d
LABEL162:
 lea rdx, qword [rsp + CONST]
 lea rsi, qword [rsp + CONST]
 mov rcx, r15
 mov rdi, rbp
 call CONST
LABEL205:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL134
 add rsp, CONST
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL61:
 cmp eax, CONST
 cjmp LABEL145
 lea rdi, qword [r13 + CONST]
 call LABEL147
 mov byte [r14 + CONST], al
 mov rax, qword [r13 + CONST]
 movzx eax, byte [rax + CONST]
LABEL64:
 test al, al
 cjmp LABEL100
LABEL66:
 mov rdx, qword [rsp]
 mov rsi, qword [rsp + CONST]
 mov rcx, r15
 mov rdi, rbp
 mov r12d, CONST
 call CONST
LABEL100:
 lea r15, qword [r13 + CONST]
LABEL117:
 mov r13, qword [r15]
 test r13, r13
 cjmp LABEL162
 mov eax, dword [r13 + CONST]
 cmp eax, CONST
 cjmp LABEL165
LABEL55:
 cmp dword [r13 + CONST], ebx
 cjmp LABEL165
 mov rdi, r13
 mov rdx, r15
 mov esi, ebx
 call CONST
 mov r13, rax
 mov r14, qword [r13 + CONST]
 mov eax, dword [r14 + CONST]
 cmp eax, CONST
 cjmp LABEL176
LABEL60:
 lea rdi, qword [r14 + CONST]
 call LABEL147
 mov byte [r14 + CONST], al
 mov rax, qword [r13 + CONST]
 movzx eax, byte [rax + CONST]
 jmp LABEL64
LABEL43:
 mov rcx, qword [rip + CONST]
 mov edx, CONST
 mov esi, CONST
 lea rdi, qword [rip + CONST]
 call CONST
 mov rsi, qword [r15]
 mov rdi, qword [rip + CONST]
 xor edx, edx
 call CONST
 jmp LABEL192
LABEL76:
 test byte [rip + CONST], CONST
 cjmp LABEL194
LABEL236:
 mov rax, qword [r13 + CONST]
 mov qword [r15], rax
 mov rax, qword [rsp + CONST]
 cmp qword [rsp + CONST], CONST
 mov qword [rsp + CONST], r13
 mov qword [r13 + CONST], rax
 cjmp LABEL117
 mov qword [rsp + CONST], r13
 jmp LABEL117
LABEL16:
 xor r12d, r12d
 jmp LABEL205
LABEL104:
 cmp byte [r14 + CONST], CONST
 cjmp LABEL207
 jmp LABEL208
LABEL31:
 mov rdx, r15
 mov rdi, r8
 mov esi, CONST
 jmp LABEL212
LABEL98:
 mov rax, qword [r13 + CONST]
 mov qword [r15], rax
 mov rax, qword [rsp + CONST]
 cmp qword [rsp + CONST], CONST
 mov qword [rsp + CONST], r13
 mov qword [r13 + CONST], rax
 cjmp LABEL117
 mov qword [rsp + CONST], r13
 jmp LABEL117
LABEL194:
 movzx ecx, word [rip + CONST]
 mov rdi, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 xor eax, eax
 mov esi, CONST
 call CONST
 mov rsi, qword [r13 + CONST]
 mov rdi, qword [rip + CONST]
 call CONST
 mov edx, CONST
 mov rcx, qword [rip + CONST]
 mov esi, CONST
 lea rdi, qword [rip + CONST]
 call CONST
 jmp LABEL236
LABEL108:
 mov rdi, qword [rip + CONST]
 movzx ecx, si
 lea rdx, qword [rip + CONST]
 xor eax, eax
 mov esi, CONST
 call CONST
 mov rsi, qword [r13 + CONST]
 mov rdi, qword [rip + CONST]
 call CONST
 mov rax, qword [r13 + CONST]
 lea rdx, qword [rip + CONST]
 mov ecx, dword [rax + CONST]
 xor eax, eax
 nop word [rax + rax]
LABEL256:
 cmp ecx, dword [rdx]
 cjmp LABEL252
 add eax, CONST
 add rdx, CONST
 cmp eax, CONST
 cjmp LABEL256
 lea rcx, qword [rip + CONST]
LABEL269:
 mov rdi, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 call CONST
 mov rax, qword [r13 + CONST]
 mov eax, dword [rax + CONST]
 jmp LABEL265
LABEL252:
 shl rax, CONST
 lea rsi, qword [rip + CONST]
 mov rcx, qword [rsi + rax + CONST]
 jmp LABEL269
LABEL145:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 xor esi, esi
 mov edi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
LABEL134:
 call CONST
