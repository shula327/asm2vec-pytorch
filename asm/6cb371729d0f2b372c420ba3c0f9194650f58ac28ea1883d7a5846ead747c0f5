 .name fcn.0000b2d0
 .offset 000000000000b2d0
 .file dmesg
 push r12
 xor edi, edi
 mov esi, CONST
 push rbp
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rdx, qword [rsp + CONST]
 call CONST
 test eax, eax
 cjmp LABEL11
 mov r12d, dword [rsp + CONST]
 cmp r12d, CONST
 cjmp LABEL14
LABEL11:
 mov r12d, dword [rip + CONST]
 and r12d, CONST
 cjmp LABEL17
LABEL40:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL20
 add rsp, CONST
 mov eax, r12d
 pop rbp
 pop r12
 ret
LABEL17:
 call CONST
 lea r9, qword [rip + CONST]
 mov esi, CONST
 xor r12d, r12d
 mov ecx, eax
 mov rax, qword [rip + CONST]
 lea r8, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 mov rdi, qword [rax]
 xor eax, eax
 call CONST
 lea rdi, qword [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL40
LABEL14:
 lea rdi, qword [rip + CONST]
 call CONST
 mov ebp, eax
 cmp eax, CONST
 cjmp LABEL11
 test byte [rip + CONST], CONST
 cjmp LABEL40
 call CONST
 lea r9, qword [rip + CONST]
 mov esi, CONST
 lea r8, qword [rip + CONST]
 mov ecx, eax
 mov rax, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 mov rdi, qword [rax]
 xor eax, eax
 call CONST
 mov esi, ebp
 lea rdi, qword [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL40
LABEL20:
 call CONST
