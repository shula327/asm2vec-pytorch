 .name fcn.00016df0
 .offset 0000000000016df0
 .file ls
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r12, qword [rsi + CONST]
 test r12, r12
 cjmp LABEL9
 mov rbp, rdi
 mov r13, rsi
 cmp rsi, r12
 cjmp LABEL13
 lea rdx, qword [rsi + CONST]
 mov eax, CONST
 cmp r12, rdx
 cjmp LABEL17
LABEL13:
 cmp byte [r12], CONST
 lea rbx, qword [rbp + CONST]
 cjmp LABEL20
 nop
LABEL38:
 mov rsi, r12
 mov rdi, rbx
 call CONST
 test eax, eax
 cjmp LABEL26
LABEL48:
 cmp byte [rbx], CONST
 cjmp LABEL28
 lea r14, qword [rbp + CONST]
 cmp r14, rbx
 cjmp LABEL31
 cmp byte [rbp + CONST], CONST
 cjmp LABEL31
LABEL28:
 mov rdi, rbx
 call CONST
 lea rbx, qword [rbx + rax + CONST]
 cmp byte [rbx], CONST
 cjmp LABEL38
 mov rax, qword [rbp]
 test rax, rax
 cjmp LABEL38
 lea rbx, qword [rax + CONST]
 mov rsi, r12
 mov rbp, rax
 mov rdi, rbx
 call CONST
 test eax, eax
 cjmp LABEL48
 nop dword [rax]
LABEL26:
 mov qword [r13 + CONST], rbx
 mov eax, CONST
LABEL17:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL20:
 lea rbx, qword [rip + CONST]
 jmp LABEL26
LABEL9:
 add rsp, CONST
 mov eax, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL31:
 mov rdi, r12
 call CONST
 mov r15, rax
 lea rdx, qword [rax + CONST]
 mov rax, rbx
 sub rax, r14
 mov rcx, rax
 not rcx
 cmp rcx, rdx
 cjmp LABEL80
 add rax, rdx
 cmp rax, CONST
 cjmp LABEL83
 mov rsi, r12
 mov rdi, rbx
 call CONST
 mov byte [rbx + r15 + CONST], CONST
 jmp LABEL26
LABEL80:
 call CONST
 mov dword [rax], CONST
 xor eax, eax
 jmp LABEL17
LABEL83:
 mov rdi, r12
 call CONST
 mov qword [rbp], rax
 test rax, rax
 cjmp LABEL97
 mov byte [rax + CONST], CONST
 lea rbx, qword [rax + CONST]
 jmp LABEL26
LABEL97:
 xor eax, eax
 jmp LABEL17
