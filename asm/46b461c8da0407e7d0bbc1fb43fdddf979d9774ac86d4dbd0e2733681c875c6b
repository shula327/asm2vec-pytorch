 .name fcn.00032280
 .offset 0000000000032280
 .file bash
 mov edi, dword [rip + CONST]
 push r14
 push r13
 push r12
 push rbp
 push rbx
 test edi, edi
 cjmp LABEL7
 mov r8d, dword [rip + CONST]
 test r8d, r8d
 cjmp LABEL10
 mov rbp, qword [rip + CONST]
 test rbp, rbp
 cjmp LABEL13
 movzx edx, byte [rbp]
 test dl, dl
 cjmp LABEL16
LABEL13:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov rdx, rax
 jmp LABEL22
LABEL7:
 mov rbp, qword [rip + CONST]
 test rbp, rbp
 cjmp LABEL25
 movzx edx, byte [rbp]
 test dl, dl
 cjmp LABEL16
LABEL25:
 mov ecx, dword [rip + CONST]
 test ecx, ecx
 cjmp LABEL13
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov rdx, rax
LABEL22:
 mov edi, dword [rip + CONST]
 lea rsi, qword [rip + CONST]
 xor eax, eax
 call CONST
 mov edx, dword [rip + CONST]
 test edx, edx
 cjmp LABEL43
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL43
 mov dword [rip + CONST], CONST
LABEL43:
 cmp dword [rip + CONST], CONST
 pop rbx
 sbb eax, eax
 pop rbp
 pop r12
 and al, CONST
 pop r13
 pop r14
 add eax, CONST
 mov dword [rip + CONST], eax
 ret
LABEL16:
 mov rcx, qword [rip + CONST]
 movsxd rax, ecx
 test ecx, ecx
 cjmp LABEL62
 movsxd rsi, ecx
 movsx esi, byte [rbp + rsi]
 test sil, sil
 cjmp LABEL66
 mov eax, ecx
 sub eax, CONST
 cjmp LABEL62
 cdqe
 movsx esi, byte [rbp + rax]
 jmp LABEL66
LABEL79:
 sub rax, CONST
 test eax, eax
 cjmp LABEL62
 movsx esi, byte [rbp + rax]
LABEL66:
 lea ecx, dword [rsi + CONST]
 cmp cl, CONST
 cjmp LABEL79
 cmp sil, CONST
 cjmp LABEL79
 lea r12d, dword [rax + CONST]
 test eax, eax
 cjmp LABEL84
 movsxd rbx, eax
 lea r13, qword [rip + CONST]
 jmp LABEL87
LABEL95:
 sub rbx, CONST
 mov r14d, ebx
 test ebx, ebx
 cjmp LABEL91
 movsx esi, byte [rbp + rbx]
LABEL87:
 mov r14d, ebx
 test sil, sil
 cjmp LABEL95
 mov rdi, r13
 call CONST
 test rax, rax
 cjmp LABEL95
 cmp r12d, ebx
 cjmp LABEL101
LABEL175:
 movsxd rax, r14d
 movzx edx, byte [rbp + rax]
 jmp LABEL104
LABEL114:
 movzx edx, byte [rbp + rax]
LABEL104:
 lea ecx, dword [rdx + CONST]
 mov r14d, eax
 cmp cl, CONST
 cjmp LABEL109
 cmp dl, CONST
 cjmp LABEL101
LABEL109:
 add rax, CONST
 cmp r12d, eax
 cjmp LABEL114
 mov r14d, r12d
LABEL101:
 test r12d, r12d
 cjmp LABEL117
 mov edx, r12d
 mov esi, r14d
 mov rdi, rbp
 call CONST
 mov r12, rax
 test rax, rax
 cjmp LABEL124
 jmp LABEL125
LABEL10:
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL7
 mov rdi, rax
 call CONST
 test eax, eax
 cjmp LABEL133
LABEL185:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov edi, dword [rip + CONST]
 mov rdx, rbp
 mov rsi, rax
 xor eax, eax
 call CONST
 mov rdi, rbp
 call CONST
 mov edi, dword [rip + CONST]
 test edi, edi
 cjmp LABEL43
 jmp LABEL148
LABEL117:
 test r14d, r14d
 cjmp LABEL124
 nop dword [rax]
LABEL62:
 mov edi, CONST
 call CONST
 mov r12, rax
 movzx eax, byte [rbp]
 mov byte [r12 + CONST], CONST
 mov byte [r12], al
LABEL125:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov edi, dword [rip + CONST]
 mov rdx, r12
 mov rsi, rax
 xor eax, eax
 call CONST
 mov rdi, r12
 call CONST
LABEL124:
 mov esi, dword [rip + CONST]
 test esi, esi
 cjmp LABEL43
LABEL148:
 call CONST
 jmp LABEL43
LABEL91:
 test r12d, r12d
 cjmp LABEL175
 jmp LABEL62
LABEL133:
 mov rdi, rbp
 xor edx, edx
 xor esi, esi
 call CONST
 mov rdi, rbp
 mov rbx, rax
 call CONST
 mov rbp, rbx
 jmp LABEL185
LABEL84:
 mov r12d, CONST
 xor eax, eax
 jmp LABEL104
