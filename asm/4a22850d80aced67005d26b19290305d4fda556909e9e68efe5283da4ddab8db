 .name fcn.0001b7c0
 .offset 000000000001b7c0
 .file grep
LABEL38:
 call CONST
 push r15
 push r14
 mov r14, rdi
 push r13
 push r12
 mov r12d, edx
 push rbp
 mov rbp, rsi
 push rbx
 sub rsp, CONST
 mov rbx, qword [rsi]
 mov rax, qword [rsi + CONST]
 cmp rbx, rax
 cjmp LABEL14
 jmp LABEL15
LABEL21:
 add rbx, CONST
 cmp rbx, rax
 cjmp LABEL15
LABEL14:
 mov r15, qword [rbx]
 test r15, r15
 cjmp LABEL21
 mov r13, qword [rbx + CONST]
 test r13, r13
 cjmp LABEL24
 mov rsi, qword [r14 + CONST]
 jmp LABEL26
LABEL43:
 mov rcx, qword [rax + CONST]
 mov qword [r13 + CONST], rcx
 mov qword [rax + CONST], r13
 test rdx, rdx
 cjmp LABEL31
LABEL51:
 mov r13, rdx
LABEL26:
 mov r15, qword [r13]
 mov rdi, r15
 call qword [r14 + CONST]
 mov rsi, qword [r14 + CONST]
 cmp rax, rsi
 cjmp LABEL38
 shl rax, CONST
 add rax, qword [r14]
 mov rdx, qword [r13 + CONST]
 cmp qword [rax], CONST
 cjmp LABEL43
 mov qword [rax], r15
 add qword [r14 + CONST], CONST
 mov qword [r13], CONST
 mov rax, qword [r14 + CONST]
 mov qword [r13 + CONST], rax
 mov qword [r14 + CONST], r13
 test rdx, rdx
 cjmp LABEL51
LABEL31:
 mov r15, qword [rbx]
LABEL24:
 mov qword [rbx + CONST], CONST
 test r12b, r12b
 cjmp LABEL55
 mov rsi, qword [r14 + CONST]
 mov rdi, r15
 call qword [r14 + CONST]
 mov r13, rax
 cmp rax, qword [r14 + CONST]
 cjmp LABEL38
 shl r13, CONST
 add r13, qword [r14]
 cmp qword [r13], CONST
 cjmp LABEL65
 mov rax, qword [r14 + CONST]
 test rax, rax
 cjmp LABEL68
 mov rdx, qword [rax + CONST]
 mov qword [r14 + CONST], rdx
LABEL96:
 mov rdx, qword [r13 + CONST]
 mov qword [rax], r15
 mov qword [rax + CONST], rdx
 mov qword [r13 + CONST], rax
LABEL92:
 mov qword [rbx], CONST
 sub qword [rbp + CONST], CONST
LABEL55:
 mov rax, qword [rbp + CONST]
 add rbx, CONST
 cmp rbx, rax
 cjmp LABEL14
LABEL15:
 add rsp, CONST
 mov eax, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL65:
 mov qword [r13], r15
 add qword [r14 + CONST], CONST
 jmp LABEL92
LABEL68:
 mov edi, CONST
 call CONST
 test rax, rax
 cjmp LABEL96
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
