 .name fcn.000321d0
 .offset 00000000000321d0
 .file find
 push r15
 push r14
 mov r14, rdx
 push r13
 push r12
 mov r12, rcx
 push rbp
 push rbx
 mov rbx, rsi
 sub rsp, CONST
 mov rbp, qword [rdi + CONST]
 mov qword [rsp], rdi
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rax, qword [rdx*CONST]
 mov rdx, qword [r12 + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 add rax, qword [rdi + CONST]
 mov rcx, qword [rax]
 mov qword [rsp + CONST], rcx
 test rcx, rcx
 cjmp LABEL23
 test rdx, rdx
 cjmp LABEL25
 mov rdx, qword [rsi]
 mov qword [rdx + r14*CONST], CONST
 mov rdx, qword [rax]
 xor eax, eax
 test byte [rdx + CONST], CONST
 cjmp LABEL31
 nop dword [rax]
LABEL52:
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL35
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL25:
 mov rdx, r12
 lea rdi, qword [rsp + CONST]
 mov rsi, rbp
 mov dword [rsp + CONST], CONST
 call CONST
 mov rdx, rax
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL52
 mov r13, qword [rdx + CONST]
 lea r15, qword [rdx + CONST]
 test r13, r13
 cjmp LABEL56
 mov rdi, qword [r12 + CONST]
 mov qword [rdx + CONST], CONST
 mov qword [rsp + CONST], rdx
 mov qword [rdx + CONST], rdi
 shl rdi, CONST
 call CONST
 mov rdx, qword [rsp + CONST]
 mov qword [rdx + CONST], rax
 test rax, rax
 cjmp LABEL66
 cmp qword [r12 + CONST], CONST
 mov dword [rsp + CONST], CONST
 cjmp LABEL69
 jmp LABEL56
LABEL83:
 add r13, CONST
 cmp r13, qword [r12 + CONST]
 cjmp LABEL56
LABEL69:
 mov rax, qword [r12 + CONST]
 mov rdi, r15
 mov rax, qword [rax + r13*CONST]
 lea rdx, qword [rax + rax*CONST]
 mov rax, qword [rbp + CONST]
 lea rsi, qword [rax + rdx*CONST]
 call CONST
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL83
LABEL66:
 mov eax, CONST
 jmp LABEL52
LABEL56:
 mov rax, qword [rsp + CONST]
 mov rdx, r15
 mov rdi, r12
 add rax, CONST
 mov rsi, rax
 mov qword [rsp + CONST], rax
 call CONST
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL52
 cmp qword [rbx + CONST], CONST
 cjmp LABEL97
LABEL383:
 lea rdi, qword [rsp + CONST]
 mov rdx, r12
 mov rsi, rbp
 mov r13, qword [rsp + CONST]
 add r13, qword [rbx]
 call CONST
 mov qword [r13], rax
 mov eax, dword [rsp + CONST]
 test eax, eax
 cjmp LABEL52
 mov rcx, qword [rsp]
 mov rax, qword [rsp + CONST]
 add rax, qword [rcx + CONST]
 mov rdx, qword [rax]
 xor eax, eax
 test byte [rdx + CONST], CONST
 cjmp LABEL52
LABEL31:
 mov rax, qword [rsp]
 xor edi, edi
 mov rsi, qword [rax + CONST]
 mov rcx, rsi
 jmp LABEL119
LABEL130:
 lea rax, qword [rcx + rdi]
 mov r11, qword [rsp]
 sar rax, CONST
 lea rdx, qword [rax + rax*CONST]
 shl rdx, CONST
 add rdx, qword [r11 + CONST]
 cmp r14, qword [rdx + CONST]
 cjmp LABEL127
 mov rcx, rax
LABEL119:
 cmp rcx, rdi
 cjmp LABEL130
 mov qword [rsp + CONST], rdi
 cmp rsi, rdi
 cjmp LABEL133
 mov rax, qword [rsp + CONST]
 lea rax, qword [rax + rax*CONST]
 lea rsi, qword [rax*CONST]
 mov qword [rsp + CONST], rsi
 mov rsi, qword [rsp]
 mov rdx, qword [rsi + CONST]
 cmp r14, qword [rdx + rax*CONST + CONST]
 cjmp LABEL133
 mov rax, qword [rsp + CONST]
 mov r13, qword [rsi + CONST]
 mov qword [rsp + CONST], CONST
 cmp qword [rax + CONST], CONST
 cjmp LABEL133
 mov qword [rsp + CONST], CONST
 lea rax, qword [rbx + CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL150
LABEL167:
 cmp al, CONST
 cjmp LABEL152
LABEL169:
 mov rsi, qword [rsp + CONST]
 add qword [rsp + CONST], CONST
 mov rax, qword [rsp + CONST]
 cmp rax, qword [rsi + CONST]
 cjmp LABEL157
LABEL150:
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov rax, qword [rax + CONST]
 mov rbp, qword [rax + rcx*CONST]
 mov rax, rbp
 shl rax, CONST
 add rax, qword [r13]
 movzx eax, byte [rax + CONST]
 cmp rbp, qword [rbx + CONST]
 cjmp LABEL167
 cmp r14, qword [rbx + CONST]
 cjmp LABEL169
 cmp al, CONST
 cjmp LABEL169
LABEL152:
 mov rax, qword [rsp]
 mov r15, qword [rsp + CONST]
 mov r12, qword [rsp + CONST]
 add r15, qword [rax + CONST]
 lea rax, qword [rbp + rbp*CONST]
 shl rax, CONST
 mov qword [rsp + CONST], rax
 lea rax, qword [rbp*CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL181
LABEL273:
 mov rax, qword [r13 + CONST]
 mov rcx, qword [rsp + CONST]
 mov r9, qword [rax + rcx]
LABEL278:
 cmp r8, qword [rbx + CONST]
 cjmp LABEL186
 mov rax, qword [rbx]
 mov rax, qword [rax + r8*CONST]
 test rax, rax
 cjmp LABEL186
 mov rdi, qword [rax + CONST]
 lea rsi, qword [rax + CONST]
 mov rdx, r9
 call CONST
 test rax, rax
 cjmp LABEL186
 sub rsp, CONST
 mov rcx, rbp
 lea rsi, qword [rbx + CONST]
 push r8
 mov rdx, qword [rsp + CONST]
 mov r8, r14
 mov rdi, qword [rsp + CONST]
 call CONST
 pop rdx
 pop rcx
 test al, al
 cjmp LABEL186
 cmp qword [rsp + CONST], CONST
 cjmp LABEL210
 lea r15, qword [rsp + CONST]
LABEL313:
 lea r8, qword [rsp + CONST]
 mov rsi, r12
 mov rdi, r15
 mov qword [rsp + CONST], rbp
 mov qword [rsp + CONST], r8
 mov qword [rsp + CONST], r14
 call CONST
 mov r8, qword [rsp + CONST]
 test al, al
 cjmp LABEL221
 mov rsi, qword [rsp + CONST]
 mov rax, qword [rsp + CONST]
 mov rdi, qword [rsp]
 mov r15, qword [rax + rsi]
 mov rsi, r8
 call CONST
 test eax, eax
 cjmp LABEL229
 mov rsi, qword [rbx + CONST]
 mov rdx, qword [rsp + CONST]
 test rsi, rsi
 cjmp LABEL233
 lea rcx, qword [r14 + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL229
 mov rdx, qword [rsp + CONST]
LABEL233:
 mov rax, qword [rsp + CONST]
 mov r8, qword [rsp + CONST]
 lea r9, qword [rsp + CONST]
 mov rsi, r9
 mov qword [rdx + rax], r15
 mov rdi, r8
 mov rdx, r12
 call CONST
 sub rax, CONST
 mov rdx, rax
 cjmp LABEL250
 cmp r8, rax
 cjmp LABEL250
 sub r8, CONST
 lea rdi, qword [rsp + CONST]
 mov rsi, r9
 mov qword [rsp + CONST], r8
 call CONST
LABEL250:
 mov rcx, qword [rsp]
 lea rax, qword [r12 + r12*CONST]
 mov rdx, qword [rcx + CONST]
 lea r15, qword [rdx + rax*CONST]
 nop word cs:[rax + rax]
LABEL186:
 add r12, CONST
 cmp byte [r15 + CONST], CONST
 lea rax, qword [r15 + CONST]
 cjmp LABEL169
 mov r15, rax
LABEL181:
 cmp rbp, qword [r15]
 cjmp LABEL186
 mov rax, qword [r15 + CONST]
 sub rax, qword [r15 + CONST]
 lea r8, qword [r14 + rax]
 cjmp LABEL273
 mov rax, qword [r13 + CONST]
 mov rcx, qword [rsp + CONST]
 mov rax, qword [rax + rcx + CONST]
 mov r9, qword [rax]
 jmp LABEL278
LABEL23:
 mov rax, qword [rsp + CONST]
 add rax, qword [rsi]
 mov rbx, rax
 test rdx, rdx
 cjmp LABEL283
 mov qword [rax], CONST
 xor eax, eax
 jmp LABEL52
LABEL283:
 lea rdi, qword [rsp + CONST]
 mov rdx, r12
 mov rsi, rbp
 call CONST
 mov qword [rbx], rax
 mov eax, dword [rsp + CONST]
 jmp LABEL52
LABEL157:
 cmp qword [rsp + CONST], CONST
 cjmp LABEL295
LABEL133:
 xor eax, eax
 jmp LABEL52
LABEL127:
 lea rdi, qword [rax + CONST]
 jmp LABEL119
LABEL210:
 movdqa xmm0, xmmword [rbx]
 movdqa xmm1, xmmword [rbx + CONST]
 lea rsi, qword [rbx + CONST]
 lea r15, qword [rsp + CONST]
 movdqa xmm2, xmmword [rbx + CONST]
 mov rax, qword [rbx + CONST]
 mov rdi, r15
 movaps xmmword [rsp + CONST], xmm0
 mov qword [rsp + CONST], rax
 movaps xmmword [rsp + CONST], xmm1
 movaps xmmword [rsp + CONST], xmm2
 call CONST
 test eax, eax
 cjmp LABEL313
LABEL229:
 cmp qword [rsp + CONST], CONST
 cjmp LABEL52
LABEL468:
 mov rdi, qword [rsp + CONST]
 mov dword [rsp], eax
 call CONST
 mov eax, dword [rsp]
 jmp LABEL52
LABEL97:
 mov rax, qword [rsp]
 mov rax, qword [rax + CONST]
 mov qword [rsp + CONST], rax
 cjmp LABEL324
 mov qword [rsp + CONST], r14
 xor r13d, r13d
 nop word cs:[rax + rax]
LABEL380:
 mov rax, qword [rbx + CONST]
 mov rcx, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rax, qword [rax + r13*CONST]
 lea rax, qword [rax + rax*CONST]
 lea rdx, qword [rcx + rax*CONST]
 cmp rdi, qword [rdx + CONST]
 cjmp LABEL335
 cmp rdi, qword [rdx + CONST]
 cjmp LABEL335
 mov rcx, qword [rdx]
 mov rax, qword [rbp]
 mov rsi, qword [r12 + CONST]
 shl rcx, CONST
 mov r15, qword [rax + rcx]
 cmp rdi, qword [rdx + CONST]
 cjmp LABEL344
 xor r14d, r14d
 test rsi, rsi
 cjmp LABEL335
 mov rcx, r15
 mov r15, rbp
 mov rbp, rcx
 jmp LABEL351
LABEL364:
 add r14, CONST
 cmp r14, qword [r12 + CONST]
 cjmp LABEL354
LABEL375:
 mov rax, qword [r15]
LABEL351:
 mov rdx, qword [r12 + CONST]
 mov rsi, qword [rdx + r14*CONST]
 mov rdx, rsi
 shl rdx, CONST
 add rax, rdx
 movzx edx, byte [rax + CONST]
 sub edx, CONST
 cmp edx, CONST
 cjmp LABEL364
 cmp rbp, qword [rax]
 cjmp LABEL364
 mov rcx, qword [rsp + CONST]
 mov rdx, r12
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL52
 add r14, CONST
 cmp r14, qword [r12 + CONST]
 cjmp LABEL375
 nop dword [rax]
LABEL354:
 mov rbp, r15
LABEL335:
 add r13, CONST
 cmp r13, qword [rbx + CONST]
 cjmp LABEL380
 mov r14, qword [rsp + CONST]
LABEL324:
 mov dword [rsp + CONST], CONST
 jmp LABEL383
LABEL344:
 test rsi, rsi
 cjmp LABEL335
 mov r10, qword [r12 + CONST]
 mov r14, -1
 mov r9, -1
 mov rcx, r10
 lea r11, qword [r10 + rsi*CONST]
 jmp LABEL391
LABEL405:
 cmp esi, CONST
 cjmp LABEL393
 cmp r15, qword [rdx]
 cmove r14, rdi
LABEL393:
 add rcx, CONST
 cmp r11, rcx
 cjmp LABEL398
LABEL391:
 mov rdi, qword [rcx]
 mov rdx, rdi
 shl rdx, CONST
 add rdx, rax
 movzx esi, byte [rdx + CONST]
 cmp esi, CONST
 cjmp LABEL405
 cmp r15, qword [rdx]
 cmove r9, rdi
 add rcx, CONST
 cmp r11, rcx
 cjmp LABEL391
LABEL398:
 test r9, r9
 cjmp LABEL412
 test r14, r14
 cjmp LABEL335
LABEL461:
 xor r15d, r15d
 mov qword [rsp + CONST], rbx
 mov rbx, r15
 mov r15, qword [rsp + CONST]
 jmp LABEL419
LABEL434:
 add rbx, CONST
LABEL447:
 cmp qword [r12 + CONST], rbx
 cjmp LABEL422
 mov r10, qword [r12 + CONST]
LABEL419:
 mov r10, qword [r10 + rbx*CONST]
 mov rax, qword [rbp + CONST]
 mov rdx, r14
 lea r8, qword [r10 + r10*CONST]
 shl r8, CONST
 add rax, r8
 mov rdi, qword [rax + CONST]
 lea rsi, qword [rax + CONST]
 call CONST
 test rax, rax
 cjmp LABEL434
 add r8, qword [rbp + CONST]
 mov rdi, qword [r8 + CONST]
 lea rsi, qword [r8 + CONST]
 call CONST
 test rax, rax
 cjmp LABEL434
 mov rcx, r15
 mov rdx, r12
 mov rsi, r10
 mov rdi, rbp
 call CONST
 test eax, eax
 cjmp LABEL447
 jmp LABEL52
LABEL412:
 mov rcx, qword [rsp + CONST]
 mov rdx, r12
 mov rsi, r9
 mov rdi, rbp
 call CONST
 test eax, eax
 cjmp LABEL52
 test r14, r14
 cjmp LABEL335
 cmp qword [r12 + CONST], CONST
 cjmp LABEL335
 mov r10, qword [r12 + CONST]
 jmp LABEL461
LABEL221:
 mov eax, CONST
 jmp LABEL229
LABEL422:
 mov rbx, qword [rsp + CONST]
 jmp LABEL335
LABEL35:
 call CONST
LABEL295:
 xor eax, eax
 jmp LABEL468
