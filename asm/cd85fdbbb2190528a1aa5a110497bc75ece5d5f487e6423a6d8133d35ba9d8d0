 .name fcn.000037a0
 .offset 00000000000037a0
 .file test
LABEL354:
 call CONST
LABEL672:
 call CONST
LABEL629:
 push rbp
 push rbx
 sub rsp, CONST
 mov rbx, qword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 movsxd rax, dword [rip + CONST]
 mov rax, qword [rbx + rax*CONST]
 movzx eax, byte [rax + CONST]
 sub eax, CONST
 cmp al, CONST
 cjmp LABEL14
 lea rdx, qword [rip + CONST]
 movzx eax, al
 movsxd rax, dword [rdx + rax*CONST]
 add rax, rdx
 jmp rax
LABEL14:
 xor eax, eax
LABEL36:
 mov rcx, qword [rsp + CONST]
 xor rcx, qword fs:[CONST]
 cjmp LABEL23
 add rsp, CONST
 pop rbx
 pop rbp
 ret
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 test eax, eax
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov esi, CONST
 mov rdi, qword [rbx + rax*CONST + CONST]
 call CONST
 test eax, eax
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov esi, CONST
 mov rdi, qword [rbx + rax*CONST + CONST]
 call CONST
 test eax, eax
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 shr eax, CONST
 and eax, CONST
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rax, qword [rbx + rax*CONST + CONST]
 cmp byte [rax], CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 shr eax, CONST
 and eax, CONST
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 shr eax, CONST
 and eax, CONST
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov rbp, rax
 call CONST
 xor esi, esi
 mov rdi, rbp
 mov edx, CONST
 mov dword [rax], CONST
 mov rbx, rax
 call CONST
 mov rdi, rax
 xor eax, eax
 cmp dword [rbx], CONST
 cjmp LABEL36
 cmp rdi, CONST
 cjmp LABEL36
 call CONST
 test eax, eax
 setne al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 cmp qword [rsp + CONST], CONST
 setg al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov esi, CONST
 mov rdi, qword [rbx + rax*CONST + CONST]
 call CONST
 test eax, eax
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rax, qword [rbx + rax*CONST + CONST]
 cmp byte [rax], CONST
 setne al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 test eax, eax
 cjmp LABEL14
 call CONST
 mov dword [rax], CONST
 mov rbx, rax
 call CONST
 mov edx, eax
 cmp eax, -1
 cjmp LABEL254
LABEL295:
 cmp dword [rsp + CONST], edx
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 mov r8d, eax
 xor eax, eax
 test r8d, r8d
 cjmp LABEL36
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 sete al
 jmp LABEL36
 call CONST
 movsxd rax, dword [rip + CONST]
 mov rdx, rsp
 mov edi, CONST
 mov rsi, qword [rbx + rax*CONST + CONST]
 call CONST
 test eax, eax
 cjmp LABEL14
 call CONST
 mov dword [rax], CONST
 mov rbx, rax
 call CONST
 mov edx, eax
 cmp eax, -1
 cjmp LABEL287
LABEL300:
 cmp dword [rsp + CONST], edx
 sete al
 jmp LABEL36
LABEL254:
 mov ecx, dword [rbx]
 xor eax, eax
 test ecx, ecx
 cjmp LABEL36
 jmp LABEL295
LABEL287:
 mov esi, dword [rbx]
 xor eax, eax
 test esi, esi
 cjmp LABEL36
 jmp LABEL300
LABEL23:
 call CONST
LABEL872:
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov edx, dword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea eax, dword [rdx + CONST]
 test dil, dil
 cjmp LABEL314
 mov dword [rip + CONST], eax
 lea eax, dword [rdx + CONST]
LABEL314:
 mov ecx, dword [rip + CONST]
 mov rbp, qword [rip + CONST]
 movsxd rbx, eax
 xor r12d, r12d
 lea edx, dword [rcx + CONST]
 cmp edx, eax
 cjmp LABEL323
 mov rdx, qword [rbp + rbx*CONST + CONST]
 cmp byte [rdx], CONST
 cjmp LABEL326
LABEL381:
 xor r12d, r12d
LABEL323:
 mov r8, qword [rbp + rbx*CONST]
 lea r13, qword [rbx*CONST]
 movzx eax, byte [r8]
 cmp al, CONST
 cjmp LABEL332
 cmp al, CONST
 cjmp LABEL334
 movzx eax, byte [r8 + CONST]
 test al, al
 cjmp LABEL337
 cmp al, CONST
 cjmp LABEL334
 cmp byte [r8 + CONST], CONST
 cjmp LABEL334
LABEL337:
 movsxd rax, dword [rip + CONST]
 mov rbx, rax
 add rax, CONST
 mov rsi, qword [rbp + rax*CONST]
 mov rdi, qword [rbp + rax*CONST + CONST]
 call CONST
 test eax, eax
 sete r12b
 add ebx, CONST
 mov dword [rip + CONST], ebx
 jmp LABEL352
LABEL334:
 cmp byte [r8], CONST
 cjmp LABEL354
 cmp byte [r8 + CONST], CONST
 cjmp LABEL354
 cmp byte [r8 + CONST], CONST
 cjmp LABEL354
 movsxd rax, dword [rip + CONST]
 mov rbx, rax
 add rax, CONST
 mov rsi, qword [rbp + rax*CONST]
 mov rdi, qword [rbp + rax*CONST + CONST]
 call CONST
 test eax, eax
 setne r12b
 add ebx, CONST
 mov dword [rip + CONST], ebx
LABEL352:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL371
 add rsp, CONST
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL326:
 cmp byte [rdx + CONST], CONST
 cjmp LABEL381
 cmp byte [rdx + CONST], CONST
 cjmp LABEL381
 mov dword [rip + CONST], eax
 mov r12d, CONST
 jmp LABEL323
LABEL332:
 movzx eax, byte [r8 + CONST]
 cmp al, CONST
 cjmp LABEL389
 cmp al, CONST
 cjmp LABEL389
LABEL463:
 cmp al, CONST
 cjmp LABEL393
 cmp al, CONST
 cjmp LABEL395
LABEL465:
 cmp al, CONST
 cjmp LABEL397
 cmp byte [r8 + CONST], CONST
 cjmp LABEL399
 cmp byte [r8 + CONST], CONST
 cjmp LABEL399
 add dword [rip + CONST], CONST
 or r12b, dil
 cjmp LABEL404
 mov rsi, qword [rbp + r13 + CONST]
 lea r14, qword [rsp + CONST]
 mov edi, CONST
 mov rdx, r14
 call CONST
 lea rcx, qword [rbp + r13 + CONST]
 test eax, eax
 cjmp LABEL412
 mov rsi, qword [rcx]
 mov rdx, r14
 mov edi, CONST
 mov rbp, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 call CONST
 test eax, eax
 cjmp LABEL352
 mov rax, qword [rsp + CONST]
 mov rdx, qword [rsp + CONST]
 cmp rax, rbp
 cjmp LABEL424
 sub ebx, edx
 shr ebx, CONST
 cmp rax, rbp
 cmovge r12d, ebx
 jmp LABEL352
LABEL393:
 movzx eax, byte [r8 + CONST]
 cmp al, CONST
 cjmp LABEL432
LABEL578:
 cmp al, CONST
 cjmp LABEL399
 cmp byte [r8 + CONST], CONST
 cjmp LABEL399
 add dword [rip + CONST], CONST
 or r12b, dil
 cjmp LABEL439
 mov rsi, qword [rbp + r13 + CONST]
 mov rdx, rsp
 mov edi, CONST
 call CONST
 test eax, eax
 cjmp LABEL352
 mov rsi, qword [rbp + r13 + CONST]
 lea rdx, qword [rsp + CONST]
 mov edi, CONST
 call CONST
 test eax, eax
 cjmp LABEL352
 mov rax, qword [rsp + CONST]
 cmp qword [rsp], rax
 cjmp LABEL352
 mov rax, qword [rsp + CONST]
 cmp qword [rsp + CONST], rax
 sete r12b
 jmp LABEL352
LABEL389:
 movzx edx, byte [r8 + CONST]
 cmp dl, CONST
 cjmp LABEL461
 cmp dl, CONST
 cjmp LABEL463
LABEL461:
 cmp byte [r8 + CONST], CONST
 cjmp LABEL465
LABEL543:
 mov r8, qword [rbp + r13 + CONST]
 test dil, dil
 mov rdi, r8
 cjmp LABEL469
 call CONST
 lea rsi, qword [rsp + CONST]
 mov rdi, rax
 call CONST
 mov rbp, rax
LABEL576:
 mov rax, qword [rip + CONST]
 test r12b, r12b
 cjmp LABEL477
 mov rdi, qword [rax + r13 + CONST]
 call CONST
 lea rsi, qword [rsp + CONST]
 mov rdi, rax
 call CONST
 mov rsi, rax
LABEL573:
 mov rdi, rbp
 call CONST
 mov rdx, qword [rip + CONST]
 mov rcx, qword [rdx + rbx*CONST]
 cmp byte [rcx + CONST], CONST
 movzx ecx, byte [rcx + CONST]
 sete dl
 add dword [rip + CONST], CONST
 cmp cl, CONST
 cjmp LABEL493
 cmp cl, CONST
 cjmp LABEL495
 test eax, eax
 setne al
 cmp al, dl
 sete r12b
 jmp LABEL352
LABEL397:
 cjmp LABEL399
 cmp al, CONST
 cjmp LABEL503
 cmp al, CONST
 cjmp LABEL399
 movzx eax, byte [r8 + CONST]
LABEL541:
 cmp al, CONST
 cjmp LABEL399
 cmp byte [r8 + CONST], CONST
 cjmp LABEL399
 add dword [rip + CONST], CONST
 or r12b, dil
 cjmp LABEL513
 mov rsi, qword [rbp + r13 + CONST]
 lea r14, qword [rsp + CONST]
 mov edi, CONST
 mov rdx, r14
 call CONST
 lea rcx, qword [rbp + r13 + CONST]
 test eax, eax
 cjmp LABEL521
 mov rsi, qword [rcx]
 mov rdx, r14
 mov edi, CONST
 mov rbp, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 call CONST
 test eax, eax
 cjmp LABEL424
 mov rax, qword [rsp + CONST]
 cmp qword [rsp + CONST], rbp
 cjmp LABEL352
 mov r12d, CONST
 cjmp LABEL352
 sub ebx, eax
 test ebx, ebx
 setg r12b
 jmp LABEL352
LABEL395:
 movzx eax, byte [r8 + CONST]
 cmp al, CONST
 cjmp LABEL541
LABEL432:
 cmp byte [r8 + CONST], CONST
 cjmp LABEL543
LABEL399:
 mov rdi, r8
 call CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 mov rbp, rax
 call CONST
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
 nop dword [rax + rax]
LABEL521:
 mov rsi, qword [rcx]
 mov rdx, r14
 mov edi, CONST
 call CONST
 jmp LABEL352
LABEL412:
 mov rsi, qword [rcx]
 mov rdx, r14
 mov edi, CONST
 call CONST
 test eax, eax
 sete r12b
 jmp LABEL352
LABEL424:
 mov r12d, CONST
 jmp LABEL352
LABEL477:
 mov rdi, qword [rax + r13 + CONST]
 call CONST
 mov rsi, rax
 jmp LABEL573
LABEL469:
 call CONST
 mov rbp, rax
 jmp LABEL576
LABEL503:
 movzx eax, byte [r8 + CONST]
 jmp LABEL578
LABEL493:
 movzx edx, dl
 cmp edx, eax
 setg r12b
 jmp LABEL352
LABEL495:
 movzx edx, dl
 neg edx
 cmp edx, eax
 setl r12b
 jmp LABEL352
LABEL371:
 call CONST
LABEL439:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
LABEL599:
 xor edi, edi
 call CONST
 xor esi, esi
 mov rdi, rax
 xor eax, eax
 call CONST
LABEL404:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 jmp LABEL599
LABEL513:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 jmp LABEL599
LABEL651:
 mov rcx, qword [rip + CONST]
 movsxd rdx, dword [rip + CONST]
 mov rdi, qword [rcx + rdx*CONST]
 cmp byte [rdi], CONST
 cjmp LABEL607
 cmp byte [rdi + CONST], CONST
 cjmp LABEL607
 mov rax, rdx
 lea rsi, qword [rdx*CONST]
 add eax, CONST
 mov dword [rip + CONST], eax
 mov rax, qword [rcx + rsi + CONST]
 cmp byte [rax], CONST
 sete al
 ret
LABEL607:
 push rbp
 cmp byte [rdi], CONST
 cjmp LABEL620
 cmp byte [rdi + CONST], CONST
 cjmp LABEL620
 cmp byte [rdi + CONST], CONST
 cjmp LABEL620
 call CONST
 test al, al
 cjmp LABEL627
 pop rbp
 jmp LABEL629
LABEL620:
 call CONST
LABEL627:
 call CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 mov rbp, rax
 call CONST
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
 nop
LABEL770:
 sub rsp, CONST
 cmp edi, CONST
 cjmp LABEL644
 cjmp LABEL645
 cmp edi, CONST
 cjmp LABEL647
 cmp edi, CONST
 cjmp LABEL649
 add rsp, CONST
 jmp LABEL651
LABEL645:
 cmp edi, CONST
 cjmp LABEL653
 movsxd rdx, dword [rip + CONST]
 mov rsi, qword [rip + CONST]
 mov rax, rdx
 lea rdi, qword [rdx*CONST]
 mov rdx, qword [rsi + rdx*CONST]
 movzx ecx, byte [rdx]
 cmp ecx, CONST
 cjmp LABEL661
 cmp byte [rdx + CONST], CONST
 cjmp LABEL661
 add eax, CONST
 cmp eax, dword [rip + CONST]
 mov dword [rip + CONST], eax
 cjmp LABEL667
 call LABEL668
 xor eax, CONST
 jmp LABEL670
LABEL649:
 sub edi, CONST
 cjmp LABEL672
 nop dword [rax]
LABEL653:
 mov eax, dword [rip + CONST]
LABEL691:
 cmp dword [rip + CONST], eax
 cjmp LABEL667
 add rsp, CONST
 jmp LABEL678
LABEL647:
 movsxd rax, dword [rip + CONST]
 lea edx, dword [rax + CONST]
 mov dword [rip + CONST], edx
 mov rdx, qword [rip + CONST]
 mov rax, qword [rdx + rax*CONST]
 cmp byte [rax], CONST
 setne al
LABEL670:
 add rsp, CONST
 ret
LABEL644:
 add rsp, CONST
 jmp LABEL668
LABEL661:
 cmp ecx, CONST
 cjmp LABEL691
 cmp byte [rdx + CONST], CONST
 cjmp LABEL691
 mov rdx, qword [rsi + rdi + CONST]
 cmp byte [rdx], CONST
 cjmp LABEL691
 cmp byte [rdx + CONST], CONST
 cjmp LABEL691
 add eax, CONST
 mov dword [rip + CONST], eax
 call LABEL651
 add dword [rip + CONST], CONST
 jmp LABEL670
LABEL667:
 call CONST
 nop word [rax + rax]
LABEL678:
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov edx, dword [rip + CONST]
 mov r12d, dword [rip + CONST]
 mov byte [rsp + CONST], CONST
LABEL887:
 mov ebp, CONST
 cmp edx, r12d
 cjmp LABEL718
 nop
LABEL865:
 mov rsi, qword [rip + CONST]
 movsxd rdx, edx
 xor eax, eax
 xor r13d, r13d
 jmp LABEL724
LABEL738:
 cmp byte [r14 + CONST], CONST
 cjmp LABEL726
 add rdx, CONST
 add edi, CONST
 cmp r12d, edx
 cjmp LABEL730
 xor r13d, CONST
 mov eax, CONST
LABEL724:
 mov r14, qword [rsi + rdx*CONST]
 mov edi, edx
 mov ebx, edx
 movzx r15d, byte [r14]
 cmp r15b, CONST
 cjmp LABEL738
 test al, al
 cjmp LABEL740
 mov dword [rip + CONST], edx
LABEL740:
 cmp r15b, CONST
 cjmp LABEL743
 cmp byte [r14 + CONST], CONST
 cjmp LABEL743
 lea r8d, dword [rbx + CONST]
 mov dword [rip + CONST], r8d
 cmp r8d, r12d
 cjmp LABEL718
 add ebx, CONST
 cmp ebx, r12d
 cjmp LABEL752
 movsxd rbx, ebx
 lea eax, dword [r12 + CONST]
 mov edi, CONST
 lea rsi, qword [rsi + rbx*CONST]
 sub eax, edx
LABEL768:
 mov rdx, qword [rsi]
 cmp byte [rdx], CONST
 cjmp LABEL760
 cmp byte [rdx + CONST], CONST
 cjmp LABEL762
LABEL760:
 cmp edi, CONST
 cjmp LABEL764
 add edi, CONST
 add rsi, CONST
 cmp eax, edi
 cjmp LABEL768
 nop word [rax + rax]
LABEL762:
 call LABEL770
 movsxd rsi, dword [rip + CONST]
 mov rcx, qword [rip + CONST]
 mov rdx, rsi
 mov rsi, qword [rcx + rsi*CONST]
 test rsi, rsi
 cjmp LABEL776
 cmp byte [rsi], CONST
 cjmp LABEL778
 cmp byte [rsi + CONST], CONST
 cjmp LABEL778
 add edx, CONST
 mov r12d, dword [rip + CONST]
 mov dword [rip + CONST], edx
LABEL857:
 xor eax, r13d
 and ebp, eax
 cmp edx, r12d
 cjmp LABEL787
LABEL840:
 mov rsi, qword [rip + CONST]
 movsxd rax, edx
 mov rax, qword [rsi + rax*CONST]
 movzx esi, byte [rax]
 cmp esi, CONST
 cjmp LABEL793
LABEL859:
 or byte [rsp + CONST], bpl
 cmp esi, CONST
 cjmp LABEL796
LABEL842:
 movzx eax, byte [rsp + CONST]
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL726:
 test al, al
 cjmp LABEL743
 mov dword [rip + CONST], edx
LABEL743:
 mov eax, r12d
 sub eax, ebx
 cmp eax, CONST
 cjmp LABEL812
 cmp byte [r14], CONST
 cjmp LABEL814
 cmp byte [r14 + CONST], CONST
 cjmp LABEL814
 cmp byte [r14 + CONST], CONST
 cjmp LABEL814
 mov rdi, qword [rsi + rdx*CONST + CONST]
 mov qword [rsp + CONST], rsi
 mov qword [rsp + CONST], rdx
 call CONST
 mov rdx, qword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 test al, al
 cjmp LABEL826
LABEL814:
 mov rdi, qword [rsi + rdx*CONST + CONST]
 call CONST
 test al, al
 cjmp LABEL830
 cmp r15b, CONST
 cjmp LABEL832
LABEL845:
 test r15b, r15b
 lea edx, dword [rbx + CONST]
 setne al
 mov dword [rip + CONST], edx
 xor eax, r13d
 and ebp, eax
 cmp edx, r12d
 cjmp LABEL840
LABEL787:
 or byte [rsp + CONST], bpl
 jmp LABEL842
LABEL812:
 cjmp LABEL814
 cmp r15b, CONST
 cjmp LABEL845
LABEL832:
 cmp byte [r14 + CONST], CONST
 cjmp LABEL845
 cmp byte [r14 + CONST], CONST
 cjmp LABEL845
 mov rdi, r14
 call CONST
 test al, al
 cjmp LABEL853
 call LABEL629
 mov edx, dword [rip + CONST]
 mov r12d, dword [rip + CONST]
 jmp LABEL857
LABEL793:
 cmp byte [rax + CONST], CONST
 cjmp LABEL859
 cmp byte [rax + CONST], CONST
 cjmp LABEL859
 add edx, CONST
 mov dword [rip + CONST], edx
 cmp edx, r12d
 cjmp LABEL865
LABEL718:
 call CONST
 nop dword [rax + rax]
LABEL764:
 mov edi, r12d
 sub edi, r8d
 jmp LABEL762
LABEL830:
 xor edi, edi
 call LABEL872
 mov edx, dword [rip + CONST]
 mov r12d, dword [rip + CONST]
 jmp LABEL857
LABEL826:
 mov edi, CONST
 call LABEL872
 mov edx, dword [rip + CONST]
 mov r12d, dword [rip + CONST]
 jmp LABEL857
LABEL796:
 cmp byte [rax + CONST], CONST
 cjmp LABEL842
 cmp byte [rax + CONST], CONST
 cjmp LABEL842
 add edx, CONST
 mov dword [rip + CONST], edx
 jmp LABEL887
LABEL752:
 mov edi, CONST
 jmp LABEL762
LABEL730:
 mov dword [rip + CONST], edi
 call CONST
LABEL778:
 mov edi, CONST
 call CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov r12, rax
 call CONST
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov rbp, rax
 call CONST
 mov rdx, r12
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
LABEL776:
 lea rdi, qword [rip + CONST]
 call CONST
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 mov rbp, rax
LABEL923:
 xor edi, edi
 call CONST
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
LABEL853:
 call CONST
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 mov rbp, rax
 jmp LABEL923
LABEL668:
 push r14
 push r13
 push r12
 mov r12, qword [rip + CONST]
 push rbp
 push rbx
 movsxd rbx, dword [rip + CONST]
 mov rbp, rbx
 add rbx, CONST
 mov r13, qword [r12 + rbx*CONST]
 mov rdi, r13
 call CONST
 test al, al
 cjmp LABEL937
 lea r14, qword [rbx*CONST]
 mov rax, qword [r12 + r14 + CONST]
 movzx edx, byte [rax]
 cmp edx, CONST
 cjmp LABEL942
 cmp byte [rax + CONST], CONST
 cjmp LABEL942
 add ebp, CONST
 cmp ebp, dword [rip + CONST]
 mov dword [rip + CONST], ebp
 cjmp LABEL948
 call LABEL651
 xor eax, CONST
LABEL971:
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL942:
 cmp edx, CONST
 cjmp LABEL958
 cmp byte [rax + CONST], CONST
 cjmp LABEL958
 mov rax, qword [r12 + r14 + CONST]
 cmp byte [rax], CONST
 cjmp LABEL958
 cmp byte [rax + CONST], CONST
 cjmp LABEL958
 mov rax, qword [r12 + rbx*CONST]
 cmp byte [rax], CONST
 setne al
 add ebp, CONST
 mov dword [rip + CONST], ebp
 jmp LABEL971
LABEL958:
 movzx eax, byte [r13]
 cmp eax, CONST
 cjmp LABEL974
 cmp byte [r13 + CONST], CONST
 cjmp LABEL976
LABEL1001:
 cmp eax, CONST
 cjmp LABEL974
 cmp byte [r13 + CONST], CONST
 cjmp LABEL980
LABEL974:
 mov rdi, r13
 call CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 mov rbp, rax
 call CONST
 mov rsi, rbp
 mov rdi, rax
 xor eax, eax
 call CONST
 nop dword [rax + rax]
LABEL937:
 pop rbx
 xor edi, edi
 pop rbp
 pop r12
 pop r13
 pop r14
 jmp LABEL872
LABEL976:
 cmp byte [r13 + CONST], CONST
 cjmp LABEL1001
LABEL1011:
 cmp ebp, dword [rip + CONST]
 cjmp LABEL948
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 jmp LABEL678
LABEL980:
 cmp byte [r13 + CONST], CONST
 cjmp LABEL1011
 jmp LABEL974
LABEL948:
 call CONST
 nop
