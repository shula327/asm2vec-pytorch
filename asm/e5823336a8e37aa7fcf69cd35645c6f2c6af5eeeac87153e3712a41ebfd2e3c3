 .name fcn.00032a00
 .offset 0000000000032a00
 .file find
 push r14
 mov r10, rsi
 movsxd r11, ecx
 push r13
 push r12
 push rbp
 mov rbp, rdx
 push rbx
 mov rbx, rdi
 sub rsp, CONST
 mov r12, qword [rsi + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 cmp dword [rsi + CONST], CONST
 cjmp LABEL15
 mov rsi, r12
 mov rdi, r10
 call CONST
 cmp eax, CONST
 cjmp LABEL20
LABEL15:
 movzx eax, byte [rbp + CONST]
 add r11, r12
 mov qword [r10 + CONST], r11
 mov edx, eax
 and edx, CONST
 cmp dl, CONST
 cjmp LABEL27
 cmp al, CONST
 cjmp LABEL27
 cmp al, CONST
 cjmp LABEL31
 test r9b, r9b
 cjmp LABEL33
LABEL31:
 movzx eax, byte [rbp]
 mov dword [rbx], CONST
 mov byte [rbx + CONST], al
 xor eax, eax
LABEL56:
 mov rcx, qword [rsp + CONST]
 xor rcx, qword fs:[CONST]
 cjmp LABEL40
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 ret
LABEL20:
 mov rdx, qword [r10 + CONST]
 mov dword [rbx], CONST
 cdqe
 add rax, r12
 mov edx, dword [rdx + r12*CONST]
 mov dword [rbx + CONST], edx
 mov qword [r10 + CONST], rax
 xor eax, eax
 jmp LABEL56
LABEL27:
 mov r12, qword [r10 + CONST]
 cmp r11, r12
 cjmp LABEL59
 movzx r13d, byte [rbp]
 xor r9d, r9d
 jmp LABEL62
LABEL81:
 mov rax, qword [rbx + CONST]
 mov byte [rax + r9], r8b
 add r9, CONST
 cmp r9, CONST
 cjmp LABEL59
 movzx eax, byte [rbp + CONST]
 mov r11, qword [r10 + CONST]
 mov r12, qword [r10 + CONST]
LABEL62:
 movsxd r14, r9d
 cmp al, CONST
 cjmp LABEL73
LABEL102:
 mov rdx, qword [r10 + CONST]
 lea rax, qword [r11 + CONST]
 mov qword [r10 + CONST], rax
 movzx r8d, byte [rdx + r11]
LABEL126:
 cmp r12, rax
 cjmp LABEL59
 cmp r13b, r8b
 cjmp LABEL81
 mov rdx, qword [r10 + CONST]
 cmp byte [rdx + rax], CONST
 cjmp LABEL81
 add rax, CONST
 mov qword [r10 + CONST], rax
 mov rax, qword [rbx + CONST]
 mov byte [rax + r14], CONST
 movzx edx, byte [rbp + CONST]
 cmp dl, CONST
 cjmp LABEL91
 cmp dl, CONST
 cjmp LABEL93
 xor eax, eax
 cmp dl, CONST
 cjmp LABEL56
 mov dword [rbx], CONST
 jmp LABEL56
LABEL59:
 mov eax, CONST
 jmp LABEL56
LABEL73:
 cmp byte [r10 + CONST], CONST
 cjmp LABEL102
 cmp byte [r10 + CONST], CONST
 cjmp LABEL104
 cmp r11, qword [r10 + CONST]
 cjmp LABEL106
 mov rax, qword [r10 + CONST]
 cmp dword [rax + r11*CONST], -1
 cjmp LABEL102
LABEL106:
 mov rax, qword [r10 + CONST]
 mov rax, qword [rax + r11*CONST]
 add rax, qword [r10]
 add rax, qword [r10 + CONST]
 movzx r8d, byte [rax]
 test r8b, CONST
 cjmp LABEL102
 cmp dword [r10 + CONST], CONST
 mov eax, CONST
 cjmp LABEL119
 mov rsi, r11
 mov rdi, r10
 call CONST
 cdqe
LABEL119:
 add rax, r11
 mov qword [r10 + CONST], rax
 jmp LABEL126
LABEL104:
 lea rax, qword [r11 + CONST]
 add r11, qword [r10]
 add r11, qword [r10 + CONST]
 mov qword [r10 + CONST], rax
 movzx r8d, byte [r11]
 jmp LABEL126
LABEL33:
 mov rdi, rsp
 mov rdx, r8
 mov rsi, r10
 call CONST
 cmp byte [rsp + CONST], CONST
 mov eax, CONST
 cjmp LABEL31
 jmp LABEL56
LABEL93:
 mov dword [rbx], CONST
 xor eax, eax
 jmp LABEL56
LABEL91:
 mov dword [rbx], CONST
 xor eax, eax
 jmp LABEL56
LABEL40:
 call CONST
