 .name fcn.0002d910
 .offset 000000000002d910
 .file dpkg
 endbr64
 push r15
 push r14
 push r13
 xor r13d, r13d
 push r12
 movabs r12, CONST
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov r14, rsp
LABEL24:
 mov rcx, qword [rip + CONST]
 mov rdx, qword [rip + CONST]
 mov esi, CONST
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL20
 movsx edi, byte [rsp]
 add r13d, CONST
 test dil, dil
 cjmp LABEL24
 mov r15, r14
 jmp LABEL26
LABEL34:
 movsx edi, byte [r15 + CONST]
 add r15, CONST
 test dil, dil
 cjmp LABEL24
LABEL26:
 mov esi, CONST
 call CONST
 test al, al
 cjmp LABEL34
 movzx eax, byte [r15]
 test al, al
 cjmp LABEL24
 cmp al, CONST
 cjmp LABEL24
 mov rbx, r15
 jmp LABEL41
LABEL48:
 movzx eax, byte [rbx + CONST]
 add rbx, CONST
 test al, al
 cjmp LABEL45
LABEL41:
 sub eax, CONST
 cmp al, CONST
 cjmp LABEL48
 cmp rbx, r15
 cjmp LABEL45
 mov rax, qword [rip + CONST]
 mov rdi, r15
 mov byte [rbx], CONST
 lea rbp, [rbx + CONST]
 call qword [rax]
 movsx edi, byte [rbx + CONST]
 test dil, dil
 cjmp LABEL58
 jmp LABEL59
LABEL68:
 movsx edi, byte [rbp + CONST]
 lea rbx, [rbp + CONST]
 test dil, dil
 cjmp LABEL45
LABEL119:
 mov rbp, rbx
LABEL58:
 mov esi, CONST
 call CONST
 test al, al
 cjmp LABEL68
 movsx edi, byte [rbp]
 test dil, dil
 cjmp LABEL71
 mov esi, CONST
 call CONST
 test al, al
 cjmp LABEL75
LABEL142:
 movsx edi, byte [rbp + CONST]
 lea r15, [rbp + CONST]
 test dil, dil
 cjmp LABEL79
 jmp LABEL80
LABEL90:
 movsx edi, byte [r15 + CONST]
 lea rax, [r15 + CONST]
 test dil, dil
 cjmp LABEL84
 mov r15, rax
LABEL79:
 mov esi, CONST
 lea rbx, [r15 + CONST]
 call CONST
 test al, al
 cjmp LABEL90
 movsx edi, byte [r15]
 mov esi, CONST
 call CONST
 test al, al
 cjmp LABEL90
 movzx eax, byte [r15]
 cmp al, CONST
 cjmp LABEL98
LABEL125:
 movsx edi, byte [r15]
 test dil, dil
 cjmp LABEL101
 cmp dil, CONST
 cjmp LABEL101
 mov esi, CONST
 call CONST
 test al, al
 cjmp LABEL107
LABEL101:
 mov rax, r15
 mov r15, rbx
LABEL84:
 mov byte [rax], CONST
 cmp byte [rbp], CONST
 lea rbx, [r15 + CONST]
 cjmp LABEL113
LABEL127:
 mov rax, qword [rip + CONST]
 mov rdi, rbp
 call qword [rax + CONST]
 movsx edi, byte [r15 + CONST]
 test dil, dil
 cjmp LABEL119
LABEL59:
 mov rax, qword [rip + CONST]
 call qword [rax + CONST]
 jmp LABEL24
LABEL98:
 bt r12, rax
 cjmp LABEL90
 jmp LABEL125
LABEL113:
 cmp byte [rbp + CONST], CONST
 cjmp LABEL127
 mov r12, qword [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov rsi, rbp
 mov rdi, rax
 mov rdx, r12
 xor eax, eax
 call CONST
LABEL75:
 movsx edi, byte [rbp]
 mov esi, CONST
 call CONST
 test al, al
 cjmp LABEL142
 cmp byte [rbp], CONST
 cjmp LABEL142
LABEL71:
 mov rbx, rbp
 nop dword [rax + rax]
LABEL45:
 mov rdx, rbx
 mov rsi, r14
 mov edi, r13d
 call CONST
LABEL80:
 mov rax, r15
 mov r15, rbp
 jmp LABEL84
LABEL20:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL156
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL107:
 mov rdx, r15
 mov rsi, r14
 mov edi, r13d
 call CONST
LABEL156:
 call CONST
