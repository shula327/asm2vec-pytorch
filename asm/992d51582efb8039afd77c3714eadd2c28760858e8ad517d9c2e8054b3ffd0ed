 .name fcn.00018950
 .offset 0000000000018950
 .file grep
LABEL1353:
 call CONST
LABEL1389:
 push r15
 mov r15, rdi
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rdi, qword [rdi + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, rdi
 shr rax, CONST
 setne al
 shl rdi, CONST
 cjmp LABEL17
 movzx eax, al
 test rax, rax
 cjmp LABEL17
 mov ebx, esi
 call CONST
 mov edx, CONST
 mov rcx, qword [r15 + CONST]
 mov rbp, rax
 mov qword [rsp + CONST], rax
 mov rax, qword [r15 + CONST]
 shl rax, CONST
 add rax, rbp
 mov qword [rsp + CONST], rax
 mov rax, rdx
 mul rcx
 seto dl
 movzx edx, dl
 test rax, rax
 cjmp LABEL17
 test rdx, rdx
 cjmp LABEL17
 lea rdi, [rcx + rcx*CONST]
 shl rdi, CONST
 call CONST
 mov rdi, r15
 mov esi, CONST
 mov qword [rsp + CONST], rax
 mov r14, rax
 call CONST
 mov byte [r15 + CONST], bl
 mov rbx, qword [r15 + CONST]
 mov rax, rbx
 mov rdi, rbx
 shr rax, CONST
 setne al
 shl rdi, CONST
 movzx eax, al
 cjmp LABEL17
 test rax, rax
 cjmp LABEL17
 call CONST
 mov rdi, qword [r15 + CONST]
 mov esi, CONST
 mov qword [rsp + CONST], rbx
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], CONST
 call CONST
 mov rdi, qword [r15 + CONST]
 mov qword [rsp + CONST], rbp
 mov qword [r15 + CONST], rax
 mov qword [rsp + CONST], CONST
 test rdi, rdi
 cjmp LABEL70
 nop dword [rax]
LABEL194:
 mov rax, qword [rsp + CONST]
 mov rcx, qword [r15 + CONST]
 shl rax, CONST
 add rcx, rax
 mov qword [rsp + CONST], rax
 mov rdx, qword [rcx]
 lea rax, [rdx + CONST]
 cmp rax, CONST
 cjmp LABEL80
 lea rbx, [rip + CONST]
 movsxd rax, dword [rbx + rax*CONST]
 add rax, rbx
 notrack jmp rax
 mov rax, qword [r14 + CONST]
 mov rbx, qword [rsp + CONST]
 mov rdx, rax
 mov qword [rsp + CONST], rax
 mov rax, qword [r14 + CONST]
 shl rdx, CONST
 sub rbx, rdx
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rbx
 test rax, rax
 cjmp LABEL95
 mov rbx, qword [rsp + CONST]
 shl rax, CONST
 lea r13, [rsp + CONST]
 lea rbp, [rsp + CONST]
 mov qword [rsp + CONST], r14
 lea r12, [rsp + CONST]
 mov r14, r13
 mov r13, rbp
 sub rbx, rax
 xor eax, eax
 mov rbp, r15
 mov r15, rbx
 mov rbx, rax
 jmp LABEL109
LABEL133:
 mov qword [rcx + CONST], rdx
 test rdx, rdx
 cjmp LABEL112
LABEL173:
 add rbx, CONST
 add r15, CONST
 cmp qword [rsp + CONST], rbx
 cjmp LABEL116
LABEL109:
 mov rax, qword [r15]
 mov r9, r14
 mov r8d, CONST
 mov rsi, r13
 mov rdi, r12
 lea rdx, [rax + rax*CONST]
 mov rax, qword [rbp + CONST]
 lea rdx, [rax + rdx*CONST]
 lea rcx, [rdx + CONST]
 call CONST
 mov rax, qword [r15]
 lea rdx, [rax + rax*CONST]
 mov rax, qword [rbp + CONST]
 lea rcx, [rax + rdx*CONST]
 mov rdx, qword [rsp + CONST]
 cmp qword [rcx + CONST], rdx
 cjmp LABEL133
 mov rdi, qword [rcx]
 mov qword [rsp + CONST], rcx
 call CONST
 mov rcx, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rax, qword [rcx + CONST]
 mov rdx, rax
 sar rdx, CONST
 add rdx, rax
 cjmp LABEL143
 imul r8, rdx, CONST
 mov rsi, r8
 cjmp LABEL143
 cmp r8, CONST
 mov r10d, CONST
 cmovle rsi, r10
 cmp r8, CONST
 mov r8d, CONST
 cmovle rdx, r8
LABEL1197:
 mov qword [rcx + CONST], CONST
 cmp rdi, rdx
 cjmp LABEL155
 sub rdi, rax
 mov rdx, rdi
 add rdx, rax
 cjmp LABEL17
 imul rsi, rdx, CONST
 cjmp LABEL17
LABEL155:
 xor edi, edi
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], rcx
 call CONST
 mov rcx, qword [rsp + CONST]
 mov rdx, qword [rsp + CONST]
 mov qword [rcx + CONST], rdx
 mov rdx, qword [rsp + CONST]
 mov qword [rcx], rax
 mov qword [rcx + CONST], rdx
 test rdx, rdx
 cjmp LABEL173
LABEL112:
 mov rdi, qword [rcx]
 shl rdx, CONST
 add rbx, CONST
 add r15, CONST
 mov rsi, qword [rsp + CONST]
 call CONST
 cmp qword [rsp + CONST], rbx
 cjmp LABEL109
LABEL116:
 mov rax, qword [rbp + CONST]
 mov rbx, qword [rsp + CONST]
 mov r15, rbp
 mov r14, qword [rsp + CONST]
 mov rdi, qword [rbp + CONST]
 mov rax, qword [rax + rbx]
LABEL1114:
 cmp rax, CONST
 cjmp LABEL189
 mov byte [r14 + CONST], CONST
LABEL189:
 add qword [rsp + CONST], CONST
 mov rax, qword [rsp + CONST]
 cmp rax, rdi
 cjmp LABEL194
LABEL70:
 mov rbp, qword [r15 + CONST]
 xor ebx, ebx
 mov rax, rbp
 mov rdi, rbp
 shr rax, CONST
 mov eax, CONST
 setne bl
 shl rdi, CONST
 cmovs rbx, rax
 test rbx, rbx
 cjmp LABEL17
 call CONST
 mov r11, qword [r15 + CONST]
 mov qword [rsp + CONST], rbp
 mov qword [rsp + CONST], rax
 mov rdi, rax
 mov qword [rsp + CONST], CONST
 test r11, r11
 cjmp LABEL213
 xor ebp, ebp
 nop word [rax + rax]
LABEL232:
 mov r14, qword [r15 + CONST]
 lea r12, [rbp + rbp*CONST]
 shl r12, CONST
 add r14, r12
 mov r13, qword [r14 + CONST]
 test r13, r13
 cjmp LABEL222
 mov rax, qword [r15 + CONST]
 mov rax, qword [rax + rbp*CONST]
 lea rdx, [rax + CONST]
 cmp rdx, CONST
 cjmp LABEL222
 cmp rax, CONST
 cjmp LABEL229
LABEL222:
 add rbp, CONST
 cmp rbp, r11
 cjmp LABEL232
LABEL1187:
 mov rdi, qword [rsp + CONST]
LABEL213:
 call CONST
 mov rdi, qword [r15 + CONST]
 call CONST
 mov r11, qword [r15 + CONST]
 mov r10, rax
 test r11, r11
 cjmp LABEL240
 mov r8, qword [r15 + CONST]
 mov r9d, CONST
 nop word cs:[rax + rax]
LABEL269:
 mov rdi, qword [r8 + CONST]
 test rdi, rdi
 cjmp LABEL246
 mov rax, qword [r8]
 shl rdi, CONST
 add rdi, rax
 jmp LABEL250
LABEL261:
 lea rsi, [r10 + rdx]
 movzx ecx, byte [rsi]
 cjmp LABEL253
 or ecx, CONST
 mov byte [rsi], cl
LABEL862:
 add rax, CONST
 cmp rdi, rax
 cjmp LABEL246
LABEL250:
 mov rdx, qword [rax]
 cmp rdx, rbx
 cjmp LABEL261
 add rax, CONST
 or byte [r10 + rbx], CONST
 cmp rdi, rax
 cjmp LABEL250
LABEL246:
 add rbx, CONST
 add r8, CONST
 cmp rbx, r11
 cjmp LABEL269
LABEL240:
 mov rbx, qword [r15 + CONST]
 or byte [r10], CONST
 mov qword [rsp + CONST], r10
 mov rax, rbx
 mov rdi, rbx
 shr rax, CONST
 setne al
 shl rdi, CONST
 movzx eax, al
 cjmp LABEL17
 test rax, rax
 cjmp LABEL17
 call CONST
 mov rdi, qword [r15 + CONST]
 mov qword [rsp + CONST], rbx
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], CONST
 mov rax, rdi
 shr rax, CONST
 setne al
 shl rdi, CONST
 movzx eax, al
 cjmp LABEL17
 test rax, rax
 cjmp LABEL17
 call CONST
 mov rdi, qword [r15 + CONST]
 mov r10, qword [rsp + CONST]
 mov qword [r15 + CONST], rax
 test rdi, rdi
 cjmp LABEL300
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], r10
 mov qword [rsp + CONST], rax
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], r15
 jmp LABEL308
LABEL316:
 add qword [rsp + CONST], CONST
 mov rax, qword [rsp + CONST]
 cmp rax, rdi
 cjmp LABEL312
LABEL308:
 mov rax, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 test byte [rax + rbx], CONST
 cjmp LABEL316
 mov rax, qword [rsp + CONST]
 lea rsi, [rbx*CONST]
 xor r14d, r14d
 mov qword [rsp + CONST], rsi
 mov rcx, qword [rax + CONST]
 mov rax, qword [rax + CONST]
 mov dword [rax + rbx*CONST], CONST
 lea rax, [rbx + rbx*CONST]
 lea rax, [rcx + rax*CONST]
 mov qword [rsp + CONST], rcx
 mov r11, qword [rax + CONST]
 mov qword [rsp + CONST], rax
 test r11, r11
 cjmp LABEL330
 xor ebx, ebx
 jmp LABEL332
LABEL363:
 mov rsi, qword [rsp + CONST]
 add rsi, rdi
 movzx ebp, byte [rsi]
 mov qword [rsp + CONST], rsi
 test bpl, CONST
 cjmp LABEL338
LABEL864:
 movdqu xmm1, xmmword [rax]
 mov rax, qword [rsp + CONST]
 or ebp, CONST
 mov rdx, r14
 shl rdx, CONST
 add r14, CONST
 mov byte [rax], bpl
 movups xmmword [rcx + rdx], xmm1
LABEL357:
 add rbx, CONST
 cmp rbx, r11
 cjmp LABEL349
LABEL332:
 mov rax, qword [rsp + CONST]
 mov r13, rbx
 shl r13, CONST
 mov rcx, qword [rax]
 lea rax, [rcx + r13]
 mov edx, dword [rax + CONST]
 test edx, edx
 cjmp LABEL357
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rax]
 mov r8, qword [rsi + CONST]
 mov r9, qword [r8 + rdi*CONST]
 test r9, r9
 cjmp LABEL363
 mov rax, qword [rsp + CONST]
 add rbx, CONST
 add rax, qword [rsi + CONST]
 or dword [rax], edx
 cmp rbx, r11
 cjmp LABEL332
 nop word [rax + rax]
LABEL349:
 mov rax, qword [rsp + CONST]
 mov rdi, qword [rax + CONST]
LABEL330:
 mov rax, qword [rsp + CONST]
 add qword [rsp + CONST], CONST
 mov qword [rax + CONST], r14
 mov rax, qword [rsp + CONST]
 cmp rax, rdi
 cjmp LABEL308
LABEL312:
 mov r10, qword [rsp + CONST]
 mov r15, qword [rsp + CONST]
LABEL300:
 mov rax, rdi
 mov qword [rsp + CONST], r10
 shr rax, CONST
 setne al
 shl rdi, CONST
 movzx eax, al
 cjmp LABEL17
 test rax, rax
 cjmp LABEL17
 call CONST
 mov r10, qword [rsp + CONST]
 mov qword [rax], CONST
 mov r12, rax
 mov rax, qword [r15 + CONST]
 cmp rax, CONST
 cjmp LABEL396
 lea rdi, [r12 + CONST]
 mov esi, CONST
 mov qword [rsp + CONST], r10
 lea rdx, [rax*CONST + CONST]
 call CONST
 mov r10, qword [rsp + CONST]
LABEL396:
 mov rdi, qword [r15 + CONST]
 mov rax, rdi
 shr rax, CONST
 setne al
 shl rdi, CONST
 movzx eax, al
 cjmp LABEL17
 test rax, rax
 cjmp LABEL17
 mov qword [rsp + CONST], r10
 call CONST
 mov edx, CONST
 mov rcx, qword [r15 + CONST]
 mov qword [rsp + CONST], rax
 mov rax, rdx
 mul rcx
 seto dl
 movzx edx, dl
 test rax, rax
 cjmp LABEL17
 test rdx, rdx
 cjmp LABEL17
 lea rdi, [rcx + rcx*CONST]
 xor r13d, r13d
 shl rdi, CONST
 call CONST
 mov rdi, qword [r15 + CONST]
 mov r14, rax
 mov rax, rdi
 shr rax, CONST
 mov eax, CONST
 setne r13b
 shl rdi, CONST
 cmovs r13, rax
 test r13, r13
 cjmp LABEL17
 call CONST
 cmp byte [r15 + CONST], CONST
 mov r10, qword [rsp + CONST]
 mov r11, rax
 cjmp LABEL443
 xor r8d, r8d
 cmp qword [r15 + CONST], CONST
 mov rax, qword [r15 + CONST]
 mov ebx, CONST
 cjmp LABEL448
LABEL976:
 mov qword [rsp + CONST], r10
 xor ebp, ebp
 mov ebx, CONST
 mov rdi, r15
 mov qword [rsp + CONST], r11
 mov r15, rbx
 mov rbx, rdi
 mov qword [rsp + CONST], r13
 mov r13, r12
 mov r12, rbp
 mov rbp, r8
 nop dword [rax]
LABEL511:
 lea rdx, [r12 + r12*CONST]
 mov rcx, qword [r13 + r12*CONST]
 shl rdx, CONST
 add rax, rdx
 mov rdi, qword [rax]
 cmp rcx, CONST
 cjmp LABEL467
 mov rdx, qword [rbx + CONST]
 mov rsi, qword [rsp + CONST]
 movdqu xmm2, xmmword [rax]
 mov rdx, qword [rdx + r12*CONST]
 mov qword [rsi + rcx*CONST], rdx
 mov rsi, qword [rax + CONST]
 lea rdx, [rcx + rcx*CONST]
 lea rdx, [r14 + rdx*CONST]
 mov qword [rdx + CONST], rsi
 mov rsi, qword [rsp + CONST]
 movups xmmword [rdx], xmm2
 mov rdx, qword [rbx + CONST]
 mov edx, dword [rdx + r12*CONST]
 mov dword [rsi + rcx*CONST], edx
 test rbp, rbp
 cjmp LABEL483
 mov rdx, qword [rbx + CONST]
 movzx edx, byte [rdx + r12]
 mov byte [rbp + rcx], dl
LABEL483:
 mov rsi, qword [rax + CONST]
 test rsi, rsi
 cjmp LABEL489
 mov r11, rsi
 mov rax, rdi
 shl r11, CONST
 add r11, rdi
 nop
LABEL503:
 mov rdx, qword [rax]
 lea rcx, [r13 + rdx*CONST]
 mov rdx, qword [rcx]
 cmp rdx, CONST
 cjmp LABEL499
 mov qword [rax], rdx
 add rax, CONST
 cmp r11, rax
 cjmp LABEL503
LABEL489:
 lea rcx, [rip + CONST]
 mov edx, CONST
 call CONST
 mov rax, qword [rbx + CONST]
 mov rcx, rax
LABEL995:
 add r12, CONST
 cmp r12, qword [rbx + CONST]
 cjmp LABEL511
 mov rdi, rbx
 mov r12, r13
 mov r10, qword [rsp + CONST]
 mov r11, qword [rsp + CONST]
 mov r13, qword [rsp + CONST]
 mov rbx, r15
 mov r8, rbp
 mov r15, rdi
LABEL978:
 mov rsi, qword [rsp + CONST]
 xor edx, edx
 test r8, r8
 cjmp LABEL523
 jmp LABEL448
LABEL542:
 mov rcx, qword [r15 + CONST]
LABEL523:
 mov rax, qword [r15 + CONST]
 mov rdi, qword [rsi + r13*CONST]
 movdqu xmm3, xmmword [r14 + rdx]
 mov qword [rax + r13*CONST], rdi
 mov rax, qword [r14 + rdx + CONST]
 movups xmmword [rcx + rdx], xmm3
 mov qword [rcx + rdx + CONST], rax
 mov rax, qword [r15 + CONST]
 add rdx, CONST
 mov ecx, dword [r11 + r13*CONST]
 mov dword [rax + r13*CONST], ecx
 movzx ecx, byte [r8 + r13]
 mov rax, qword [r15 + CONST]
 mov byte [rax + r13], cl
 add r13, CONST
 cmp r13, rbx
 cjmp LABEL542
LABEL1033:
 mov qword [r15 + CONST], rbx
 mov rdi, qword [rsp + CONST]
 mov qword [r15 + CONST], rbx
 mov qword [rsp + CONST], r10
 mov qword [rsp + CONST], r8
 mov qword [rsp + CONST], r11
 call CONST
 mov rdi, r14
 call CONST
 mov r11, qword [rsp + CONST]
 mov rdi, r11
 call CONST
 mov r8, qword [rsp + CONST]
 mov rdi, r8
 call CONST
 mov rdi, r12
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 mov r10, qword [rsp + CONST]
 mov rdi, r10
 call CONST
 mov edi, CONST
 call CONST
 mov rdi, qword [r15 + CONST]
 movdqa xmm0, xmmword [rip + CONST]
 mov qword [rsp + CONST], rax
 mov qword [rax], CONST
 mov dword [rax + CONST], CONST
 mov rax, rdi
 shr rax, CONST
 movups xmmword [rsp + CONST], xmm0
 setne al
 shl rdi, CONST
 movzx eax, al
 cjmp LABEL17
 test rax, rax
 cjmp LABEL17
 call CONST
 mov rdx, qword [r15 + CONST]
 mov qword [r15 + CONST], rax
 test rdx, rdx
 cjmp LABEL585
 mov r9, qword [r15 + CONST]
 mov r10, qword [r15 + CONST]
 mov rdi, rax
 lea rbx, [rax + rdx*CONST]
 mov r11d, CONST
 nop
LABEL636:
 mov dword [rdi], CONST
 mov ecx, dword [r9]
 mov edx, ecx
 sar edx, CONST
 xor edx, ecx
 and edx, CONST
 cmovne edx, r11d
 mov dword [rdi], edx
 mov esi, dword [r9]
 mov ecx, esi
 sar ecx, CONST
 xor ecx, esi
 and ecx, CONST
 cjmp LABEL605
 or edx, CONST
 mov dword [rdi], edx
LABEL605:
 mov r8, qword [r10 + CONST]
 test r8, r8
 cjmp LABEL610
 mov rcx, qword [r10]
 shl r8, CONST
 add r8, rcx
 nop
LABEL631:
 mov edx, dword [rcx + CONST]
 mov esi, edx
 sar esi, CONST
 xor esi, edx
 and esi, CONST
 cjmp LABEL620
 or dword [rdi], CONST
 mov edx, dword [rcx + CONST]
LABEL620:
 mov esi, edx
 sar esi, CONST
 xor edx, esi
 and edx, CONST
 cjmp LABEL627
 or dword [rdi], CONST
LABEL627:
 add rcx, CONST
 cmp rcx, r8
 cjmp LABEL631
LABEL610:
 add rdi, CONST
 add r9, CONST
 add r10, CONST
 cmp rdi, rbx
 cjmp LABEL636
LABEL585:
 mov rdi, qword [rsp + CONST]
 mov rdx, qword [rsp + CONST]
 test rdi, rdi
 cjmp LABEL640
 shl rdi, CONST
 xor ecx, ecx
 add rdi, rdx
 nop
LABEL649:
 mov rsi, qword [rdx]
 add rdx, CONST
 or ecx, dword [rax + rsi*CONST]
 cmp rdi, rdx
 cjmp LABEL649
 mov r12d, ecx
 mov ebx, ecx
 lea rbp, [rsp + CONST]
 xor r12d, CONST
 and ebx, CONST
 and ecx, CONST
 cjmp LABEL656
 mov edx, CONST
 mov rsi, rbp
 mov rdi, r15
 call CONST
LABEL656:
 mov edx, r12d
 mov rsi, rbp
 mov rdi, r15
 call CONST
 mov dword [r15 + CONST], eax
 mov edx, eax
 cdqe
 mov qword [r15 + CONST], rax
 test ebx, ebx
 cjmp LABEL670
 mov edx, CONST
 mov rsi, rbp
 mov rdi, r15
 call CONST
 mov edx, eax
LABEL670:
 add edx, CONST
 mov rdi, qword [rsp + CONST]
 mov dword [r15 + CONST], CONST
 mov dword [r15 + CONST], edx
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL689
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
 pxor xmm0, xmm0
 mov byte [r14], CONST
 add r14, CONST
 movups xmmword [r14 + CONST], xmm0
 jmp LABEL189
 movdqu xmm6, xmmword [r14 + CONST]
 movdqu xmm0, xmmword [r14 + CONST]
 movzx eax, byte [r14 + CONST]
 or byte [r14 + CONST], al
 sub r14, CONST
 paddq xmm0, xmm6
 movups xmmword [r14 + CONST], xmm0
 jmp LABEL189
 mov rax, qword [r14 + CONST]
 mov rbx, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rax
 shl rax, CONST
 sub rbx, rax
 mov rax, qword [r14 + CONST]
 mov qword [rsp + CONST], rbx
 mov qword [rsp + CONST], rbx
 mov rbx, qword [r14 + CONST]
 mov qword [rsp + CONST], rax
 shl rax, CONST
 mov rcx, rbx
 mov qword [rsp + CONST], rax
 shl rcx, CONST
 mov qword [rsp + CONST], rbx
 add rax, rcx
 mov qword [rsp + CONST], rcx
 mov rcx, qword [rsp + CONST]
 sub rcx, rax
 mov qword [rsp + CONST], rcx
 test rbx, rbx
 cjmp LABEL733
 lea r13, [rsp + CONST]
 lea rbp, [rsp + CONST]
 xor eax, eax
 mov qword [rsp + CONST], r14
 lea r12, [rsp + CONST]
 mov r14, r13
 mov rbx, rax
 mov r13, rbp
 mov rbp, r15
 mov r15, rcx
 jmp LABEL744
LABEL768:
 mov qword [rcx + CONST], rdx
 test rdx, rdx
 cjmp LABEL747
LABEL808:
 add rbx, CONST
 add r15, CONST
 cmp qword [rsp + CONST], rbx
 cjmp LABEL751
LABEL744:
 mov rax, qword [r15]
 mov r9, r14
 mov r8d, CONST
 mov rsi, r13
 mov rdi, r12
 lea rdx, [rax + rax*CONST]
 mov rax, qword [rbp + CONST]
 lea rdx, [rax + rdx*CONST]
 lea rcx, [rdx + CONST]
 call CONST
 mov rax, qword [r15]
 lea rdx, [rax + rax*CONST]
 mov rax, qword [rbp + CONST]
 lea rcx, [rax + rdx*CONST]
 mov rdx, qword [rsp + CONST]
 cmp qword [rcx + CONST], rdx
 cjmp LABEL768
 mov rdi, qword [rcx]
 mov qword [rsp + CONST], rcx
 call CONST
 mov rcx, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rax, qword [rcx + CONST]
 mov rdx, rax
 sar rdx, CONST
 add rdx, rax
 cjmp LABEL778
 imul r8, rdx, CONST
 mov rsi, r8
 cjmp LABEL778
 cmp r8, CONST
 mov r9d, CONST
 cmovle rsi, r9
 cmp r8, CONST
 mov r8d, CONST
 cmovle rdx, r8
LABEL1194:
 mov qword [rcx + CONST], CONST
 cmp rdi, rdx
 cjmp LABEL790
 sub rdi, rax
 mov rdx, rdi
 add rdx, rax
 cjmp LABEL17
 imul rsi, rdx, CONST
 cjmp LABEL17
LABEL790:
 xor edi, edi
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], rcx
 call CONST
 mov rcx, qword [rsp + CONST]
 mov rdx, qword [rsp + CONST]
 mov qword [rcx + CONST], rdx
 mov rdx, qword [rsp + CONST]
 mov qword [rcx], rax
 mov qword [rcx + CONST], rdx
 test rdx, rdx
 cjmp LABEL808
LABEL747:
 mov rdi, qword [rcx]
 shl rdx, CONST
 add rbx, CONST
 add r15, CONST
 mov rsi, qword [rsp + CONST]
 call CONST
 cmp qword [rsp + CONST], rbx
 cjmp LABEL744
LABEL751:
 mov r14, qword [rsp + CONST]
 mov rdi, qword [rbp + CONST]
 mov r15, rbp
LABEL733:
 movzx edx, byte [r14 + CONST]
 test dl, dl
 cjmp LABEL822
 mov rax, qword [rsp + CONST]
 add qword [r14 + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
LABEL822:
 movzx esi, byte [r14 + CONST]
 test sil, sil
 cjmp LABEL829
 mov rax, qword [rsp + CONST]
 add rax, qword [rsp + CONST]
 mov qword [r14 + CONST], rax
LABEL1012:
 mov rax, qword [rsp + CONST]
 and edx, esi
 sub r14, CONST
 mov byte [r14 + CONST], dl
 mov qword [rsp + CONST], rax
 jmp LABEL189
LABEL80:
 mov rax, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 cmp rdx, CONST
 mov rcx, qword [rsp + CONST]
 movdqa xmm7, xmmword [rip + CONST]
 sete byte [r14]
 add r14, CONST
 add rbx, CONST
 add rax, CONST
 mov qword [rax + CONST], rcx
 mov qword [rbx + CONST], rcx
 movups xmmword [r14 + CONST], xmm7
 mov dword [rax + CONST], CONST
 mov dword [rbx + CONST], CONST
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rbx
 jmp LABEL189
LABEL253:
 and ecx, CONST
 mov edx, ecx
 or edx, CONST
 test cl, cl
 cmove edx, r9d
 mov byte [rsi], dl
 jmp LABEL862
LABEL338:
 test r14, r14
 cjmp LABEL864
 mov rsi, rcx
 xor r12d, r12d
 nop word [rax + rax]
LABEL923:
 cmp edx, dword [rsi + CONST]
 cjmp LABEL869
 mov r15, qword [rsi]
 mov r10, qword [rsp + CONST]
 movzx r10d, byte [r10 + r15]
 test r10b, CONST
 cjmp LABEL869
 cmp r9, qword [r8 + r15*CONST]
 cjmp LABEL869
 xor r10d, ebp
 and r10d, CONST
 cjmp LABEL869
 mov rcx, qword [rsp + CONST]
 lea rax, [rdi + rdi*CONST]
 lea rax, [rcx + rax*CONST]
 mov qword [rsp + CONST], rax
 mov r10, qword [rax + CONST]
 test bpl, CONST
 cjmp LABEL886
LABEL1053:
 mov rdi, qword [rsp + CONST]
 lea rax, [r15 + r15*CONST]
 lea r15, [rdi + rax*CONST]
 cmp r10, CONST
 cjmp LABEL891
 test r10, r10
 cjmp LABEL893
LABEL929:
 mov byte [rsp + CONST], bpl
 xor ecx, ecx
 mov rbp, qword [rsp + CONST]
 mov qword [rsp + CONST], rbx
 mov rbx, rcx
 nop word [rax + rax]
LABEL909:
 mov rax, rbx
 mov rdx, r15
 add rbx, CONST
 shl rax, CONST
 add rax, qword [rbp]
 mov rdi, qword [rax]
 mov rsi, qword [rax + CONST]
 call CONST
 cmp rbx, qword [rbp + CONST]
 cjmp LABEL909
 movzx ebp, byte [rsp + CONST]
 mov rbx, qword [rsp + CONST]
LABEL893:
 mov rax, qword [rsp + CONST]
 mov r11, qword [rax + CONST]
LABEL944:
 cmp r14, r12
 cjmp LABEL357
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rax]
 lea rax, [rcx + r13]
 jmp LABEL864
LABEL869:
 add r12, CONST
 add rsi, CONST
 cmp r12, r14
 cjmp LABEL923
 jmp LABEL864
LABEL953:
 mov rdi, qword [rsp + CONST]
 lea rax, [r15 + r15*CONST]
 lea r15, [rdi + rax*CONST]
 cmp r10, CONST
 cjmp LABEL929
LABEL891:
 mov rax, qword [rsp + CONST]
 mov r9, qword [rsp + CONST]
 lea rcx, [r15 + CONST]
 mov rdx, r15
 mov r8d, CONST
 lea rsi, [rax + CONST]
 mov rdi, rax
 call CONST
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rdx, r15
 call CONST
 mov rax, qword [rsp + CONST]
 mov r11, qword [rax + CONST]
 jmp LABEL944
LABEL886:
 mov rsi, qword [rax]
 test r10, r10
 cjmp LABEL944
 mov rdx, r10
 xor eax, eax
 jmp LABEL950
LABEL960:
 lea rax, [rcx + CONST]
LABEL963:
 cmp rdx, rax
 cjmp LABEL953
LABEL950:
 lea rcx, [rdx + rax]
 sar rcx, CONST
 mov r9, rcx
 shl r9, CONST
 lea r8, [rsi + r9]
 cmp rdi, qword [r8]
 cjmp LABEL960
 cjmp LABEL961
 mov rdx, rcx
 jmp LABEL963
LABEL443:
 mov rdi, qword [r15 + CONST]
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], r10
 test rdi, rdi
 cjmp LABEL17
 call CONST
 mov r10, qword [rsp + CONST]
 mov r11, qword [rsp + CONST]
 mov r8, rax
 mov rax, qword [r15 + CONST]
 cmp qword [r15 + CONST], CONST
 mov rcx, rax
 cjmp LABEL976
 mov ebx, CONST
 jmp LABEL978
LABEL499:
 mov qword [rax], r15
 lea rdx, [r15 + CONST]
 add rax, CONST
 mov qword [rcx], r15
 mov r15, rdx
 cmp r11, rax
 cjmp LABEL503
 jmp LABEL489
LABEL467:
 mov qword [rsp + CONST], rdx
 call CONST
 mov rax, qword [rbx + CONST]
 mov rdx, qword [rsp + CONST]
 add rdx, rax
 mov rcx, rax
 mov qword [rdx], CONST
 mov qword [rdx + CONST], CONST
 jmp LABEL995
LABEL829:
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov r8, qword [rsp + CONST]
 add rcx, rax
 cmp qword [rsp + CONST], CONST
 cjmp LABEL1001
 nop word [rax + rax]
LABEL1007:
 movdqu xmm4, xmmword [rax + r8]
 add rax, CONST
 movups xmmword [rax + CONST], xmm4
 cmp rcx, rax
 cjmp LABEL1007
LABEL1001:
 mov rax, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 sub qword [rsp + CONST], rbx
 mov qword [r14 + CONST], rax
 jmp LABEL1012
LABEL448:
 mov rdi, qword [r15 + CONST]
 mov rbp, qword [rsp + CONST]
 xor edx, edx
 xor ecx, ecx
 mov rsi, qword [r15 + CONST]
 lea r8, [rbx*CONST]
 nop word [rax + rax]
LABEL1031:
 mov r9, qword [rbp + rdx*CONST]
 movdqu xmm5, xmmword [r14 + rcx]
 mov qword [rdi + rdx*CONST], r9
 mov r9, qword [r14 + rcx + CONST]
 movups xmmword [rax + rcx], xmm5
 mov qword [rax + rcx + CONST], r9
 mov r9d, dword [r11 + rdx]
 add rcx, CONST
 mov dword [rsi + rdx], r9d
 add rdx, CONST
 cmp r8, rdx
 cjmp LABEL1031
 xor r8d, r8d
 jmp LABEL1033
LABEL961:
 lea r11, [rcx + CONST]
 cmp r11, r10
 mov qword [rsp + CONST], r11
 cjmp LABEL1037
 lea rdx, [r10 + CONST]
 lea rsi, [rsi + r9 + CONST]
 mov rdi, r8
 mov qword [rsp + CONST], r10
 sub rdx, rcx
 mov qword [rsp + CONST], rcx
 shl rdx, CONST
 call CONST
 mov rcx, qword [rsp + CONST]
 mov r11, qword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 sub r11, rcx
 lea r10, [r11 + r10 + CONST]
LABEL1189:
 mov rax, qword [rsp + CONST]
 mov qword [rax + CONST], r10
 jmp LABEL1053
LABEL229:
 sub rax, CONST
 mov dword [rsp + CONST], CONST
 cmp rax, CONST
 cjmp LABEL1057
 lea rdi, [rip + CONST]
 mov eax, dword [rdi + rax*CONST]
 mov dword [rsp + CONST], eax
LABEL1057:
 mov r9, qword [r14]
 mov rsi, r13
 xor edx, edx
 jmp LABEL1064
LABEL1074:
 lea rdx, [rcx + CONST]
 cmp rsi, rdx
 cjmp LABEL1067
LABEL1064:
 lea rcx, [rdx + rsi]
 sar rcx, CONST
 mov rax, rcx
 shl rax, CONST
 lea rdi, [r9 + rax]
 cmp qword [rdi], rbp
 cjmp LABEL1074
 cjmp LABEL1075
 mov rsi, rcx
 cmp rsi, rdx
 cjmp LABEL1064
LABEL1067:
 mov qword [rsp + CONST], r12
 xor r14d, r14d
 mov r12, rbx
 jmp LABEL1082
LABEL1087:
 add r14, CONST
 cmp r14, r11
 cjmp LABEL1085
LABEL1082:
 cmp r14, rbp
 cjmp LABEL1087
 mov r8, qword [r15 + CONST]
 lea rax, [r14 + r14*CONST]
 lea r9, [r8 + rax*CONST]
 mov rcx, qword [r9 + CONST]
 test rcx, rcx
 cjmp LABEL1087
 mov rsi, qword [r9]
 mov rbx, rcx
 xor eax, eax
 jmp LABEL1097
LABEL1107:
 lea rax, [r13 + CONST]
LABEL1110:
 cmp rbx, rax
 cjmp LABEL1087
LABEL1097:
 lea r13, [rax + rbx]
 sar r13, CONST
 mov rdx, r13
 shl rdx, CONST
 lea rdi, [rsi + rdx]
 cmp qword [rdi], rbp
 cjmp LABEL1107
 cjmp LABEL1108
 mov rbx, r13
 jmp LABEL1110
LABEL1085:
 mov rbx, r12
 jmp LABEL222
LABEL95:
 mov rax, qword [rcx]
 jmp LABEL1114
LABEL1108:
 mov eax, dword [rdi + CONST]
 lea rbx, [r13 + CONST]
 mov dword [rsp + CONST], eax
 cmp rbx, rcx
 cjmp LABEL1119
 lea rax, [rcx + CONST]
 lea rsi, [rsi + rdx + CONST]
 mov qword [rsp + CONST], r9
 sub rax, r13
 mov qword [rsp + CONST], r8
 shl rax, CONST
 mov qword [rsp + CONST], rcx
 mov rdx, rax
 call CONST
 mov rcx, qword [rsp + CONST]
 mov r9, qword [rsp + CONST]
 mov r8, qword [rsp + CONST]
 sub rcx, CONST
 sub rcx, r13
 mov r13, rcx
 add r13, rbx
LABEL1119:
 mov qword [r9 + CONST], r13
 mov eax, dword [rsp + CONST]
 and eax, dword [rsp + CONST]
 cjmp LABEL1139
 mov dword [rsp + CONST], eax
 mov rax, qword [rsp + CONST]
 lea rsi, [r9 + CONST]
 mov rdi, r9
 lea r13, [rsp + CONST]
 mov qword [rsp + CONST], r9
 mov rdx, r13
 lea rbx, [r8 + rax]
 call CONST
 mov eax, dword [rsp + CONST]
 lea rcx, [rbx + CONST]
 mov rdx, rbx
 mov r9, qword [rsp + CONST]
 lea rsi, [rsp + CONST]
 mov rdi, r13
 mov r8d, eax
 call CONST
LABEL1139:
 mov r11, qword [r15 + CONST]
 jmp LABEL1087
LABEL640:
 mov edx, CONST
 lea rsi, [rsp + CONST]
 mov rdi, r15
 call CONST
 mov edx, eax
 cdqe
 mov qword [r15 + CONST], rax
 jmp LABEL670
LABEL1075:
 lea r8, [rcx + CONST]
 cmp r13, r8
 mov qword [rsp + CONST], r8
 cjmp LABEL1170
 lea rdx, [r13 + CONST]
 lea rsi, [r9 + rax + CONST]
 mov qword [rsp + CONST], rcx
 sub r13, CONST
 sub rdx, rcx
 shl rdx, CONST
 call CONST
 mov rcx, qword [rsp + CONST]
 mov r8, qword [rsp + CONST]
 mov rax, r13
 sub rax, rcx
 lea rcx, [rax + r8]
LABEL1170:
 mov qword [r14 + CONST], rcx
 mov r11, qword [r15 + CONST]
 test r11, r11
 cjmp LABEL1067
 jmp LABEL1187
LABEL1037:
 mov r10, rcx
 jmp LABEL1189
LABEL17:
 call CONST
LABEL689:
 call CONST
LABEL778:
 movabs rsi, CONST
 movabs rdx, CONST
 jmp LABEL1194
LABEL143:
 movabs rsi, CONST
 movabs rdx, CONST
 jmp LABEL1197
 endbr64
 push r15
 push r14
 push r13
 push r12
 mov r12, rdx
 push rbp
 push rbx
 sub rsp, CONST
 mov dword [rsp + CONST], ecx
 test rdi, rdi
 cjmp LABEL1209
 call CONST
LABEL1209:
 mov edi, CONST
 call CONST
 mov ecx, CONST
 mov rsi, r12
 pxor xmm0, xmm0
 mov rdi, rax
 mov rbp, rax
 rep movsq qword [rdi], qword [rsi]
 mov byte [rax + CONST], CONST
 lea rax, [rip + CONST]
 mov qword [rbp + CONST], rax
 mov rdi, qword [rbp + CONST]
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], CONST
 mov rax, rdi
 movups xmmword [rbp + CONST], xmm0
 shr rax, CONST
 movups xmmword [rbp + CONST], xmm0
 setne al
 shl rdi, CONST
 mov qword [rbp + CONST], CONST
 mov qword [rbp + CONST], CONST
 movzx eax, al
 movups xmmword [rbp + CONST], xmm0
 movups xmmword [rbp + CONST], xmm0
 cjmp LABEL1236
 test rax, rax
 cjmp LABEL1236
 call CONST
 mov rdx, qword [r12 + CONST]
 mov qword [rbp], rax
 test rdx, rdx
 cjmp LABEL1243
LABEL1518:
 mov rdi, qword [r12 + CONST]
 xor r14d, r14d
 mov rax, rdi
 shr rax, CONST
 mov eax, CONST
 setne r14b
 shl rdi, CONST
 cmovs r14, rax
 test r14, r14
 cjmp LABEL1236
 call CONST
 mov qword [rbp + CONST], rax
 mov rax, qword [r12 + CONST]
 lea rdx, [rax + rax]
 mov qword [rbp + CONST], rdx
 test rax, rax
 cjmp LABEL1260
 xor ecx, ecx
 mov rsi, qword [r12 + CONST]
 xor ebx, ebx
 xor r13d, r13d
 mov r15d, ecx
 xor edi, edi
 mov rcx, r14
 movabs r9, CONST
 pcmpeqd xmm0, xmm0
 jmp LABEL1270
LABEL1291:
 mov rdx, qword [rbp + CONST]
 add r13, CONST
 cmp rax, CONST
 mov qword [rdx + rbx*CONST], rax
 setbe dl
 cmp rax, CONST
 setg al
 add rbx, CONST
 or dl, al
 cmovne r15d, edx
LABEL1475:
 mov rdx, qword [r12 + CONST]
 cmp rdx, r13
 cjmp LABEL1283
LABEL1270:
 mov rax, qword [rsi + r13*CONST]
 lea r14, [r13*CONST]
 cmp rax, CONST
 cjmp LABEL1287
 cmp rax, CONST
 cjmp LABEL1289
 cmp rax, CONST
 cjmp LABEL1291
 mov r10, qword [rbp + CONST]
 mov rdi, qword [rbp]
 test r10, r10
 cjmp LABEL1295
 nop dword [rax]
LABEL1407:
 mov rax, rdi
 xor r8d, r8d
 jmp LABEL1299
LABEL1309:
 add r8, CONST
 add rax, CONST
 cmp r8, r10
 cjmp LABEL1303
LABEL1299:
 mov rdx, qword [rax + CONST]
 and rdx, qword [rax]
 and rdx, qword [rax + CONST]
 and rdx, qword [rax + CONST]
 cmp rdx, CONST
 cjmp LABEL1309
LABEL1466:
 mov rax, qword [rbp + CONST]
 lea rdx, [rbx*CONST]
 mov edi, CONST
 add r8, CONST
 mov qword [rax + rbx*CONST], r8
 add rbx, CONST
 mov qword [rax + rdx + CONST], CONST
 mov rax, qword [rsi + r14 + CONST]
 mov rdx, qword [r12 + CONST]
 sub rax, CONST
 cmp rax, CONST
 adc r13, CONST
 cmp rdx, r13
 cjmp LABEL1270
LABEL1283:
 mov qword [rbp + CONST], rbx
 mov r14, rcx
 test r15b, r15b
 cjmp LABEL1327
 test dil, dil
 cjmp LABEL1329
LABEL1501:
 mov qword [r12 + CONST], rbp
LABEL1507:
 test rdx, rdx
 cjmp LABEL1332
 mov rsi, qword [r12 + CONST]
 xor ecx, ecx
LABEL1342:
 mov rax, qword [rsi + rcx*CONST]
 cmp rax, CONST
 cjmp LABEL1337
 cmp rax, CONST
 cjmp LABEL1339
LABEL1481:
 add rcx, CONST
 cmp rcx, rdx
 cjmp LABEL1342
 movzx edi, byte [r12 + CONST]
 test dil, dil
 cjmp LABEL1345
 xor ecx, ecx
 nop word cs:[rax + rax]
LABEL1358:
 mov rax, qword [rsi + r14*CONST]
 cmp rax, CONST
 cjmp LABEL1345
 cjmp LABEL1351
 cmp rax, CONST
 cjmp LABEL1353
 cmp rax, CONST
 cmove ecx, edi
LABEL1351:
 add r14, CONST
 cmp r14, rdx
 cjmp LABEL1358
 test cl, cl
 cjmp LABEL1360
LABEL1526:
 mov rdi, qword [r12 + CONST]
 call CONST
 mov rdi, qword [r12 + CONST]
 call CONST
 mov rdi, qword [r12 + CONST]
 call CONST
 mov rax, qword [r12 + CONST]
 test rax, rax
 cjmp LABEL1369
 cmp qword [r12 + CONST], CONST
 cjmp LABEL1371
 mov rbx, CONST
 nop dword [rax + rax]
LABEL1379:
 mov rdi, qword [rax + rbx*CONST]
 add rbx, CONST
 call CONST
 cmp rbx, qword [r12 + CONST]
 mov rax, qword [r12 + CONST]
 cjmp LABEL1379
LABEL1371:
 lea rdi, [rax + CONST]
 call CONST
LABEL1369:
 mov byte [r12 + CONST], CONST
 lea rax, [rip + CONST]
 mov qword [r12 + CONST], rax
 mov byte [r12 + CONST], CONST
 nop dword [rax]
LABEL1345:
 movzx esi, byte [rsp + CONST]
 mov rdi, r12
 call LABEL1389
 mov rdi, qword [r12 + CONST]
 test rdi, rdi
 cjmp LABEL1392
LABEL1486:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL1287:
 lea rdx, [rax + CONST]
 cmp rdx, CONST
 cjmp LABEL1291
 mov r10, qword [rbp + CONST]
 mov rdi, qword [rbp]
 test r10, r10
 cjmp LABEL1407
LABEL1295:
 xor r8d, r8d
 nop dword [rax]
LABEL1303:
 mov r11, qword [rbp + CONST]
 cmp r11, r10
 cjmp LABEL1412
 mov rax, r11
 sar rax, CONST
 add rax, r11
 cjmp LABEL1416
 cmp rax, r9
 cmovg rax, r9
 mov rdx, rax
 imul rax, rax, CONST
 mov rsi, rax
 cjmp LABEL1416
 cmp rax, CONST
 mov r10d, CONST
 cmovle rsi, r10
 cmp rax, CONST
 mov eax, CONST
 cmovle rdx, rax
LABEL1534:
 test rdi, rdi
 cjmp LABEL1430
 mov rax, rdx
 sub rax, r11
 test rax, rax
 cjmp LABEL1434
LABEL1512:
 mov rdx, r11
 xor eax, eax
 add rdx, CONST
 seto al
 cmp rdx, r9
 cjmp LABEL1236
 test rax, rax
 cjmp LABEL1236
 imul rsi, rdx, CONST
 cjmp LABEL1236
LABEL1434:
 mov qword [rsp + CONST], rcx
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], r8
 call CONST
 mov rdx, qword [rsp + CONST]
 mov r10, qword [rbp + CONST]
 movabs r9, CONST
 mov rsi, qword [r12 + CONST]
 mov rcx, qword [rsp + CONST]
 mov rdi, rax
 pcmpeqd xmm0, xmm0
 mov qword [rbp + CONST], rdx
 mov r8, qword [rsp + CONST]
LABEL1412:
 mov rax, r8
 mov qword [rbp], rdi
 add r10, CONST
 shl rax, CONST
 mov qword [rbp + CONST], r10
 add rdi, rax
 movups xmmword [rdi], xmm0
 movups xmmword [rdi + CONST], xmm0
 jmp LABEL1466
LABEL1289:
 mov r8, qword [rbp + CONST]
 add r13, CONST
 lea rdx, [rbx + CONST]
 cmp byte [r12 + CONST], CONST
 lea r8, [r8 + rbx*CONST]
 cjmp LABEL1472
 mov qword [r8], CONST
 mov rbx, rdx
 jmp LABEL1475
LABEL1472:
 mov qword [r8], rax
 mov rbx, rdx
 jmp LABEL1475
LABEL1337:
 sub rax, CONST
 cmp rax, CONST
 cjmp LABEL1481
LABEL1498:
 mov rdi, qword [r12 + CONST]
 lea rax, [rip + CONST]
 mov qword [r12 + CONST], rax
 test rdi, rdi
 cjmp LABEL1486
LABEL1392:
 mov byte [r12 + CONST], CONST
 movzx esi, byte [rsp + CONST]
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp LABEL1389
LABEL1339:
 cmp byte [r12 + CONST], CONST
 cjmp LABEL1498
 jmp LABEL1481
LABEL1329:
 cmp byte [r12 + CONST], CONST
 cjmp LABEL1501
LABEL1327:
 mov rdi, rbp
 call CONST
 mov rdi, rbp
 call CONST
 mov rdx, qword [r12 + CONST]
 jmp LABEL1507
LABEL1430:
 mov rax, rdx
 mov qword [rbp + CONST], CONST
 sub rax, r11
 test rax, rax
 cjmp LABEL1512
 jmp LABEL1434
LABEL1243:
 mov rsi, qword [r12]
 shl rdx, CONST
 mov rdi, rax
 call CONST
 jmp LABEL1518
LABEL1260:
 mov qword [rbp + CONST], CONST
 jmp LABEL1327
LABEL1236:
 call CONST
LABEL1332:
 cmp byte [r12 + CONST], CONST
 cjmp LABEL1345
LABEL1360:
 mov rdi, qword [r12 + CONST]
 test rdi, rdi
 cjmp LABEL1526
 call CONST
 mov rdi, qword [r12 + CONST]
 call CONST
 mov qword [r12 + CONST], CONST
 jmp LABEL1526
LABEL1416:
 movabs rsi, CONST
 movabs rdx, CONST
 jmp LABEL1534
