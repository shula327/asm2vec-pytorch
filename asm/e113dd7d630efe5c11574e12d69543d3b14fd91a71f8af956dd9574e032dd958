 .name fcn.00004e50
 .offset 0000000000004e50
 .file lsmem
 push r12
 push rbx
 sub rsp, CONST
 or qword [rsp], CONST
 sub rsp, CONST
 xor esi, esi
 lea rdx, qword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rbx, rdi
 mov rdi, qword [rdi]
 call CONST
 test eax, eax
 cjmp LABEL14
 mov rdi, qword [rbx]
 mov r12, rsp
 xor ecx, ecx
 mov edx, CONST
 mov rsi, r12
 xor eax, eax
 call CONST
 mov rcx, qword [rip + CONST]
 lea rsi, qword [rbx + CONST]
 mov rdi, r12
 lea rdx, qword [rip + CONST]
 call CONST
 mov dword [rbx + CONST], eax
 test eax, eax
 cjmp LABEL29
 mov rax, qword [rbx + CONST]
 mov rdi, qword [rbx]
 mov rsi, qword [rax]
 add rsi, CONST
 call CONST
 cmp eax, -1
 cjmp LABEL36
 or byte [rbx + CONST], CONST
LABEL36:
 mov rdi, qword [rbx]
 xor esi, esi
 lea rdx, qword [rip + CONST]
 call CONST
 test eax, eax
 cjmp LABEL43
LABEL52:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL46
 add rsp, CONST
 pop rbx
 pop r12
 ret
LABEL43:
 or byte [rbx + CONST], CONST
 jmp LABEL52
LABEL29:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL14:
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov edx, CONST
 call CONST
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL46:
 call CONST
