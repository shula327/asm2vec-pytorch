 .name fcn.00025dc0
 .offset 0000000000025dc0
 .file localedef
 push r15
 push r14
 mov r14, r8
 push r13
 mov r13, rcx
 push r12
 mov r12, rsi
 push rbp
 mov rbp, rdi
 mov rdi, r13
 push rbx
 mov rbx, rdx
 sub rsp, CONST
 mov r15, qword [r9 + CONST]
 mov qword [rsp + CONST], r9
 mov rcx, qword fs:[CONST]
 mov qword [rsp + CONST], rcx
 xor ecx, ecx
 call CONST
 mov r10, rax
 test rax, rax
 cjmp LABEL21
 mov r8d, dword [rax + CONST]
 cmp r8d, -2
 cjmp LABEL24
 mov rdx, rbx
 mov rsi, r12
 mov rdi, r14
 mov qword [rsp + CONST], rax
 call CONST
 mov r10, qword [rsp + CONST]
 mov r8d, eax
 mov dword [r10 + CONST], eax
LABEL24:
 lea rcx, qword [rsp + CONST]
 mov rdx, rbx
 mov rsi, r12
 mov qword [rsp + CONST], r10
 lea rax, qword [r15 + CONST]
 mov dword [rsp + CONST], r8d
 mov rdi, rax
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], CONST
 call CONST
 mov r8d, dword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 test eax, eax
 cjmp LABEL46
 mov dword [rsp + CONST], r8d
 cmp r8d, -1
 lea rcx, qword [rsp + CONST]
 mov eax, CONST
 mov dword [rsp + CONST], CONST
 cmove rcx, rax
 movsxd rdx, dword [r10 + CONST]
 add r10, CONST
LABEL304:
 sub rsp, CONST
 mov r8, r12
 mov rsi, r10
 push CONST
 mov r9, rbx
 mov rdi, r15
 call CONST
 mov rdi, qword [rsp + CONST]
 mov rdx, rbx
 mov rsi, r12
 mov rcx, rax
 mov qword [rsp + CONST], rax
 call CONST
 pop rdi
 pop r8
 test eax, eax
 mov r11, qword [rsp + CONST]
 cjmp LABEL72
LABEL102:
 cmp qword [r11 + CONST], CONST
 cjmp LABEL74
 cmp qword [r15 + CONST], r11
 cjmp LABEL74
 mov r8, qword [rsp + CONST]
 xor r9d, r9d
 mov rcx, r14
 mov rdx, r13
 mov rsi, r11
 mov rdi, rbp
 call CONST
 xor eax, eax
 jmp LABEL85
LABEL21:
 mov rdx, rbx
 mov rsi, r12
 mov rdi, r14
 mov qword [rsp + CONST], rax
 call CONST
 mov r10, qword [rsp + CONST]
 cmp eax, -1
 cjmp LABEL93
 lea rcx, qword [rsp + CONST]
 lea rdi, qword [r15 + CONST]
 mov rdx, rbx
 mov rsi, r12
 mov qword [rsp + CONST], CONST
 call CONST
 mov r11, qword [rsp + CONST]
 test eax, eax
 cjmp LABEL102
 lea rcx, qword [rsp + CONST]
 lea rdi, qword [r15 + CONST]
 mov rdx, rbx
 mov rsi, r12
 call CONST
 test eax, eax
 cjmp LABEL109
 mov r10, qword [rsp + CONST]
 mov r11, qword [r10 + CONST]
 test r11, r11
 cjmp LABEL102
 mov qword [rsp + CONST], r10
 sub rsp, CONST
 xor ecx, ecx
 xor esi, esi
 push CONST
 mov r9, rbx
 mov r8, r12
 xor edx, edx
 mov rdi, r15
 call CONST
 mov r10, qword [rsp + CONST]
 mov r11, rax
 mov qword [r10 + CONST], rax
 pop rcx
 pop rsi
 jmp LABEL102
LABEL74:
 mov r14, qword [r11 + CONST]
 mov r13, qword [r11 + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
 mov r9, r14
 mov r8, r13
 mov rcx, r12
 mov rsi, rax
 mov edx, ebx
 xor eax, eax
 mov rdi, rbp
 call CONST
 xor esi, esi
 mov rdi, rbp
 call CONST
 mov eax, CONST
LABEL85:
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL150
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL46:
 mov r11, qword [rsp + CONST]
 cmp qword [r11 + CONST], CONST
 cjmp LABEL161
LABEL232:
 cmp qword [r11 + CONST], CONST
 cjmp LABEL102
 cmp r8d, -1
 cjmp LABEL102
 mov rdx, qword [r15 + CONST]
 lea rax, qword [rdx + CONST]
 cmp qword [r15 + CONST], rax
 cjmp LABEL169
LABEL261:
 mov qword [rdx], r8
 mov rax, qword [r15 + CONST]
 mov rsi, qword [r15 + CONST]
 lea rdx, qword [rax + CONST]
 cmp rdx, rsi
 cjmp LABEL175
LABEL282:
 movsxd rax, dword [r15 + CONST]
 mov rcx, rax
 add rax, rdx
 mov rdx, qword [r15 + CONST]
 not ecx
 movsxd rcx, ecx
 and rax, rcx
 mov qword [r15 + CONST], rax
 cmp rax, rdx
 cjmp LABEL185
 mov qword [r15 + CONST], rdx
 mov rax, rdx
LABEL185:
 mov qword [r15 + CONST], rax
 mov qword [r11 + CONST], rsi
 mov qword [r11 + CONST], CONST
 jmp LABEL102
LABEL161:
 movsxd rdx, dword [r10 + CONST]
 mov rdi, qword [r15 + CONST]
 mov rsi, rdx
 lea rax, qword [rdi + rdx + CONST]
 cmp qword [r15 + CONST], rax
 cjmp LABEL197
LABEL245:
 lea rsi, qword [r10 + CONST]
 mov qword [rsp + CONST], r11
 mov dword [rsp + CONST], r8d
 mov qword [rsp + CONST], r10
 mov qword [rsp + CONST], rdx
 call CONST
 mov rdx, qword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 add rdx, qword [r15 + CONST]
 mov r8d, dword [rsp + CONST]
 lea rax, qword [rdx + CONST]
 mov r11, qword [rsp + CONST]
 mov qword [r15 + CONST], rax
 mov byte [rdx], CONST
 mov rsi, qword [r15 + CONST]
 mov rdx, qword [r15 + CONST]
 cmp rdx, rsi
 cjmp LABEL215
LABEL247:
 movsxd rax, dword [r15 + CONST]
 mov rcx, rax
 add rax, rdx
 mov rdx, qword [r15 + CONST]
 not ecx
 movsxd rcx, ecx
 and rax, rcx
 mov qword [r15 + CONST], rax
 cmp rax, rdx
 cjmp LABEL225
 mov qword [r15 + CONST], rdx
 mov rax, rdx
LABEL225:
 mov qword [r15 + CONST], rax
 movsxd rax, dword [r10 + CONST]
 mov qword [r11 + CONST], rsi
 mov qword [r11 + CONST], rax
 jmp LABEL232
LABEL197:
 lea rdi, qword [r15 + CONST]
 add esi, CONST
 mov qword [rsp + CONST], r10
 mov qword [rsp + CONST], r11
 mov qword [rsp + CONST], rdx
 mov dword [rsp + CONST], r8d
 call CONST
 mov r10, qword [rsp + CONST]
 mov r11, qword [rsp + CONST]
 mov rdi, qword [r15 + CONST]
 mov rdx, qword [rsp + CONST]
 mov r8d, dword [rsp + CONST]
 jmp LABEL245
LABEL215:
 or byte [r15 + CONST], CONST
 jmp LABEL247
LABEL72:
 lea rcx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL169:
 lea rdi, qword [r15 + CONST]
 mov esi, CONST
 mov qword [rsp + CONST], r8
 mov qword [rsp + CONST], r11
 call CONST
 mov r8, qword [rsp + CONST]
 mov r11, qword [rsp + CONST]
 mov rdx, qword [r15 + CONST]
 jmp LABEL261
LABEL109:
 sub rsp, CONST
 mov r9, rbx
 mov r8, r12
 xor ecx, ecx
 push CONST
 xor edx, edx
 xor esi, esi
 mov rdi, r15
 call CONST
 mov rdx, rbx
 lea rdi, qword [r15 + CONST]
 mov rsi, r12
 mov rcx, rax
 mov qword [rsp + CONST], rax
 call CONST
 pop rax
 pop rdx
 mov r11, qword [rsp + CONST]
 jmp LABEL102
LABEL175:
 or byte [r15 + CONST], CONST
 jmp LABEL282
LABEL150:
 call CONST
LABEL93:
 mov dword [rsp + CONST], eax
 lea rcx, qword [rsp + CONST]
 mov rdx, rbx
 mov rsi, r12
 lea rax, qword [r15 + CONST]
 mov qword [rsp + CONST], r10
 mov rdi, rax
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], CONST
 call CONST
 mov r8d, dword [rsp + CONST]
 mov r10, qword [rsp + CONST]
 test eax, eax
 cjmp LABEL297
 mov r11, qword [rsp + CONST]
 jmp LABEL232
LABEL297:
 mov dword [rsp + CONST], r8d
 lea rcx, qword [rsp + CONST]
 xor edx, edx
 mov dword [rsp + CONST], CONST
 jmp LABEL304
