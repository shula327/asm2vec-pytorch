 .name fcn.000058a0
 .offset 00000000000058a0
 .file dd
LABEL54:
 push r12
 push rbx
 sub rsp, CONST
 mov rbx, qword [rip + CONST]
 mov r12, qword [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rdi, qword [rbx + r12 + CONST]
 call CONST
 test rax, rax
 cjmp LABEL11
 lea rcx, qword [rax + rbx + CONST]
 xor edx, edx
 mov rax, rcx
 div rbx
 sub rcx, rdx
 mov qword [rip + CONST], rcx
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL20
 add rsp, CONST
 pop rbx
 pop r12
 ret
LABEL11:
 mov ecx, CONST
 mov rsi, rsp
 mov edx, CONST
 mov rdi, r12
 mov r8d, CONST
 call CONST
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov rbx, rax
 call CONST
 mov r8, rbx
 mov rcx, r12
 xor esi, esi
 mov rdx, rax
 mov edi, CONST
 xor eax, eax
 call CONST
LABEL20:
 call CONST
 cmp qword [rip + CONST], CONST
 cjmp LABEL45
 ret
LABEL45:
 test byte [rip + CONST], CONST
 cjmp LABEL48
 cmp qword [rip + CONST], CONST
 cjmp LABEL50
 mov rax, qword [rip + CONST]
 mov qword [rip + CONST], rax
 ret
LABEL48:
 jmp LABEL54
LABEL50:
 push rax
 call CONST
 mov rax, qword [rip + CONST]
 mov qword [rip + CONST], rax
 pop rdx
 ret
