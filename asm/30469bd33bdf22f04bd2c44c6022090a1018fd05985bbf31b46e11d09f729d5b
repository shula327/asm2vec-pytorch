 .name fcn.0000a840
 .offset 000000000000a840
 .file grep
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r15, qword [rsi]
 mov r13, qword [rdi]
 mov qword [rsp + CONST], rdi
 mov qword [rsp + CONST], rsi
 mov rdi, r15
 mov rcx, qword fs:[CONST]
 mov qword [rsp + CONST], rcx
 xor ecx, ecx
 add rdi, CONST
 mov qword [rsp + CONST], CONST
 sets al
 add rdi, rdi
 cjmp LABEL20
 movzx eax, al
 test rax, rax
 cjmp LABEL20
 call CONST
 mov qword [rsp + CONST], rax
 test r15, r15
 cjmp LABEL27
 mov r14, rax
 lea r12, [rip + CONST]
 movabs rbp, CONST
 jmp LABEL31
LABEL48:
 cmp rbx, CONST
 cjmp LABEL33
 sub r15, rbx
LABEL93:
 mov rsi, r13
 mov rdi, r14
 mov rdx, rbx
 add r13, rbx
 call CONST
 mov r14, rax
 test r15, r15
 cjmp LABEL42
LABEL31:
 movzx eax, byte [r13]
 movsx rbx, byte [r12 + rax + CONST]
 cmp rbx, CONST
 cjmp LABEL46
LABEL90:
 cmp rbx, CONST
 cjmp LABEL48
 mov qword [rsp + CONST], CONST
LABEL33:
 movzx edx, byte [r13]
 lea rsi, [r14 + CONST]
 lea eax, [rdx + CONST]
 cmp al, CONST
 cjmp LABEL54
 bt rbp, rax
 cjmp LABEL56
LABEL54:
 mov ebx, CONST
 sub r15, CONST
 mov byte [r14], dl
 mov r14, rsi
 add r13, rbx
 test r15, r15
 cjmp LABEL31
LABEL42:
 mov r15, r14
 sub r15, qword [rsp + CONST]
LABEL27:
 mov rbx, qword [rsp + CONST]
 mov rdi, qword [rbx]
 call CONST
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov qword [rbx], rcx
 mov qword [rax], r15
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL75
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL46:
 lea rdx, [rsp + CONST]
 mov rsi, r15
 mov rdi, r13
 call CONST
 mov rbx, rax
 cmp rax, CONST
 cjmp LABEL90
 mov rbx, r15
 xor r15d, r15d
 jmp LABEL93
LABEL56:
 lea rax, [r14 + CONST]
 mov byte [r14], CONST
 mov r14, rsi
 movzx edx, byte [r13]
 mov rsi, rax
 jmp LABEL54
LABEL20:
 call CONST
LABEL75:
 call CONST
