 .name fcn.0000c8b0
 .offset 000000000000c8b0
 .file install
 endbr64
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test rcx, rcx
 cjmp LABEL6
 cmp dword [rcx], CONST
 cjmp LABEL8
 mov eax, dword [rcx + CONST]
 lea r10d, [rax + CONST]
 cmp r10d, CONST
 cjmp LABEL12
 mov r10d, dword [rcx + CONST]
 cmp r10d, CONST
 cjmp LABEL15
 cmp byte [rcx + CONST], CONST
 cjmp LABEL17
LABEL42:
 cmp eax, CONST
 cjmp LABEL19
 cmp r10d, CONST
 cjmp LABEL21
LABEL19:
 mov byte [rsp + CONST], CONST
 movzx edx, dl
 push r9
 mov r9, rcx
 xor ecx, ecx
 push r8
 xor r8d, r8d
 mov qword [rip + CONST], rsi
 mov qword [rip + CONST], rdi
 lea rax, [rsp + CONST]
 push rax
 push CONST
 call CONST
 add rsp, CONST
 mov rsi, qword [rsp + CONST]
 xor rsi, qword fs:[CONST]
 cjmp LABEL38
 add rsp, CONST
 ret
LABEL17:
 cmp byte [rcx + CONST], CONST
 cjmp LABEL42
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL21:
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL38:
 call CONST
LABEL15:
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL12:
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL8:
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL6:
 lea rcx, [rip + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
