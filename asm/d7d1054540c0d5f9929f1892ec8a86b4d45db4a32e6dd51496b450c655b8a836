 .name fcn.00014910
 .offset 0000000000014910
 .file grep
 push r15
 push r14
 push r13
 push r12
 push rbp
 mov rbp, rdi
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rbx, qword [rsp + CONST]
 lea rdx, qword [rsp + CONST]
 mov qword [rsp + CONST], CONST
 mov rdi, rbx
 call CONST
 cmp rax, -1
 cjmp LABEL17
 movzx esi, byte [rsp + CONST]
 mov r12, rax
 cmp eax, CONST
 cjmp LABEL21
 mov edx, CONST
 mov rdi, rbp
 call CONST
 cmp r12d, CONST
 cjmp LABEL26
 lea r13d, dword [r12 + CONST]
 sub r12d, CONST
 mov r14d, CONST
 add r12, CONST
 jmp LABEL31
LABEL61:
 mov rax, qword [rbp + CONST]
 mov byte [rax + rdx], r15b
 mov rax, qword [rbp + CONST]
 mov rdx, qword [rbp + CONST]
LABEL63:
 lea rsi, qword [rdx + CONST]
 mov qword [rbp + CONST], rsi
 mov qword [rax + rdx*CONST], rcx
 mov rax, qword [rbp + CONST]
 add qword [rbp + CONST], CONST
 add rax, CONST
 mov qword [rbp + CONST], rax
 cmp rax, qword [rbp + CONST]
 cjmp LABEL44
 mov qword [rbp + CONST], rax
LABEL44:
 mov esi, CONST
 mov rdi, rbp
 add r14, CONST
 call CONST
 cmp r14, r12
 cjmp LABEL26
LABEL31:
 cmp r13d, r14d
 mov rax, qword [rbp + CONST]
 movzx ecx, byte [rbx + r14]
 mov rdx, qword [rbp + CONST]
 sete r15b
 add r15d, r15d
 cmp rax, rdx
 cjmp LABEL59
LABEL106:
 cmp byte [rbp + CONST], CONST
 cjmp LABEL61
 mov rax, qword [rbp + CONST]
 jmp LABEL63
LABEL59:
 mov r8, rax
 mov rdi, qword [rbp + CONST]
 sar r8, CONST
 add r8, rax
 cjmp LABEL68
 imul rdx, r8, CONST
 mov rsi, rdx
 cjmp LABEL68
 cmp rdx, CONST
 mov r9d, CONST
 cmovle rsi, r9
 cmp rdx, CONST
 mov edx, CONST
 cmovle r8, rdx
LABEL134:
 test rdi, rdi
 cjmp LABEL79
LABEL125:
 mov rdx, r8
 sub rdx, rax
 test rdx, rdx
 cjmp LABEL83
 add rax, CONST
 mov r8, rax
 cjmp LABEL86
 imul rsi, rax, CONST
 cjmp LABEL86
LABEL83:
 mov qword [rsp + CONST], r8
 mov qword [rsp], rcx
 call CONST
 mov r8, qword [rsp + CONST]
 cmp byte [rbp + CONST], CONST
 mov qword [rbp + CONST], rax
 mov rcx, qword [rsp]
 mov qword [rbp + CONST], r8
 cjmp LABEL97
 mov rdi, qword [rbp + CONST]
 test r8, r8
 cjmp LABEL86
 mov rsi, r8
 call CONST
 mov rdx, qword [rbp + CONST]
 mov rcx, qword [rsp]
 mov qword [rbp + CONST], rax
 jmp LABEL106
LABEL21:
 mov edx, CONST
 mov rdi, rbp
 call CONST
 nop dword [rax]
LABEL26:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL113
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL97:
 mov rdx, qword [rbp + CONST]
 jmp LABEL63
LABEL79:
 mov qword [rbp + CONST], CONST
 jmp LABEL125
LABEL17:
 mov edx, CONST
 xor esi, esi
 mov rdi, rbp
 mov byte [rsp + CONST], CONST
 call CONST
 jmp LABEL26
LABEL68:
 movabs rsi, CONST
 movabs r8, CONST
 jmp LABEL134
LABEL86:
 call CONST
LABEL113:
 call CONST
