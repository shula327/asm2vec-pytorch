 .name main
 .offset 0000000000004e10
 .file grep
LABEL555:
 call CONST
 endbr64
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov dword [rsp + CONST], edi
 mov edi, CONST
 mov qword [rsp + CONST], rsi
 lea rsi, [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov byte [rip + CONST], CONST
 movabs rax, CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov dword [rip + CONST], CONST
 mov dword [rip + CONST], CONST
 mov qword [rip + CONST], rax
 mov qword [rip + CONST], CONST
 mov qword [rip + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov byte [rip + CONST], CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 xor edi, edi
 call CONST
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL43
 cmp byte [rax], CONST
 mov dword [rsp + CONST], CONST
 mov rbp, rax
 cjmp LABEL47
LABEL714:
 lea rax, [rsp + CONST]
 mov dword [rsp + CONST], CONST
 xor ebp, ebp
 lea r12, [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
LABEL103:
 mov eax, dword [rip + CONST]
 mov r14, r12
 xor r15d, r15d
 mov dword [rsp + CONST], eax
 mov r13d, eax
LABEL79:
 mov rsi, qword [rsp + CONST]
 mov edi, dword [rsp + CONST]
 xor r8d, r8d
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 call CONST
 mov ebx, eax
 lea eax, [rax + CONST]
 cmp eax, CONST
 cjmp LABEL68
 cmp dword [rip + CONST], r13d
 cjmp LABEL70
 test r15b, r15b
 cjmp LABEL72
LABEL70:
 mov rax, r12
LABEL411:
 mov byte [rax], bl
 lea r14, [rax + CONST]
 mov r15d, CONST
 mov dword [rip + CONST], r13d
 mov r13d, dword [rip + CONST]
 jmp LABEL79
LABEL68:
 cmp r14, r12
 cjmp LABEL81
LABEL414:
 mov byte [r14], CONST
 xor esi, esi
 lea rcx, [rsp + CONST]
 mov edx, CONST
 lea r8, [rip + CONST]
 mov rdi, r12
 call CONST
 cmp eax, CONST
 cjmp LABEL90
 cmp qword [rsp + CONST], CONST
 cjmp LABEL90
LABEL81:
 cmp ebx, CONST
 cjmp LABEL94
 cmp ebx, CONST
 cjmp LABEL96
 lea rsi, [rip + CONST]
 mov eax, ebx
 movsxd rax, dword [rsi + rax*CONST]
 add rax, rsi
 notrack jmp rax
 mov ebp, CONST
 jmp LABEL103
 mov ebp, CONST
 jmp LABEL103
 mov dword [rip + CONST], CONST
 mov dword [rip + CONST], CONST
 mov eax, dword [rsp + CONST]
 mov dword [rsp + CONST], eax
 jmp LABEL103
LABEL379:
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL115
 mov dword [rip + CONST], CONST
 jmp LABEL103
LABEL115:
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL122
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 cmp byte [rdi], CONST
 cjmp LABEL127
 cmp byte [rdi + CONST], CONST
 cjmp LABEL127
 mov r13, qword [rip + CONST]
LABEL395:
 mov rbx, qword [rsp + CONST]
 mov r14, qword [rsp + CONST]
 mov rax, rbx
 jmp LABEL134
LABEL149:
 sub rdx, CONST
 sub rdx, rax
LABEL157:
 add rdi, rax
 mov rcx, r13
 mov esi, CONST
 call CONST
 test rax, rax
 cjmp LABEL142
 add rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
LABEL134:
 mov rdx, qword [rsp + CONST]
 lea rcx, [rax + CONST]
 mov rdi, qword [rsp + CONST]
 cmp rcx, rdx
 cjmp LABEL149
 mov rsi, r14
 call CONST
 mov rdi, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov rdx, rdi
 not rdx
 add rdx, qword [rsp + CONST]
 jmp LABEL157
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov esi, dword [rsp + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 jmp LABEL103
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov esi, dword [rsp + CONST]
 mov rdi, qword [rip + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov esi, dword [rsp + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 jmp LABEL103
 mov esi, dword [rsp + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 jmp LABEL103
 mov esi, dword [rsp + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov dword [rsp + CONST], eax
 jmp LABEL103
 mov r8, qword [rip + CONST]
 mov ecx, CONST
 lea rdi, [rip + CONST]
 mov rsi, r8
 repe cmpsb byte [rsi], byte [rdi]
 seta al
 sbb al, CONST
 test al, al
 cjmp LABEL206
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 lea rsi, [rsp + CONST]
 call CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov rax, qword [rip + CONST]
 mov qword [rip + CONST], rax
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov rax, qword [rip + CONST]
 mov qword [rip + CONST], rax
 jmp LABEL103
 mov rsi, qword [rip + CONST]
 test rsi, rsi
 cjmp LABEL233
LABEL967:
 lea r13, [rip + CONST]
 mov r8d, CONST
 mov ecx, CONST
 mov rdx, qword [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL241
 mov rsi, qword [rip + CONST]
 test rsi, rsi
 cjmp LABEL244
LABEL951:
 mov rdx, qword [rip + CONST]
 mov r8d, CONST
 mov ecx, CONST
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL103
LABEL241:
 call CONST
 mov rcx, qword [rip + CONST]
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 mov r14, qword [rip + CONST]
 mov rdi, r14
 call CONST
 mov r13, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 mov rbx, rax
 lea rax, [r13 + rax + CONST]
 cmp rax, qword [rsp + CONST]
 cjmp LABEL267
LABEL744:
 add rdi, r13
 mov rdx, rbx
 mov rsi, r14
 call CONST
 mov rax, qword [rsp + CONST]
 lea rsi, [rbx + CONST]
 add rax, rbx
 lea rdx, [rax + CONST]
 mov qword [rsp + CONST], rdx
 mov rdx, qword [rsp + CONST]
 mov byte [rdx + rax], CONST
 mov rdi, qword [rsp + CONST]
 lea rdx, [rip + CONST]
 add rdi, r13
 call CONST
 jmp LABEL103
 mov r9, qword [rip + CONST]
 mov rsi, qword [rip + CONST]
 mov r8d, CONST
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov r8, rax
 lea rax, [rip + CONST]
 mov eax, dword [rax + r8*CONST]
 cmp eax, CONST
 mov dword [rip + CONST], eax
 mov eax, dword [rsp + CONST]
 cmovne eax, dword [rsp + CONST]
 mov dword [rsp + CONST], eax
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 xor esi, esi
 lea r8, [rip + CONST]
 lea rcx, [rip + CONST]
 mov edx, CONST
 call CONST
 cmp eax, CONST
 cjmp LABEL103
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 xor esi, esi
 mov edi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 test rdi, rdi
 cjmp LABEL329
LABEL955:
 cmp ebx, CONST
 mov eax, CONST
 mov r13d, CONST
 mov edx, CONST
 cmovne r13d, eax
 mov eax, CONST
 mov rsi, qword [rip + CONST]
 cmovne edx, eax
 call CONST
 mov rdi, qword [rip + CONST]
 test rdi, rdi
 cjmp LABEL341
LABEL959:
 mov rsi, qword [rip + CONST]
 mov edx, r13d
 call CONST
 jmp LABEL103
 mov rdi, qword [rip + CONST]
 call CONST
 mov rdi, qword [rip + CONST]
 test rdi, rdi
 cjmp LABEL350
LABEL963:
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 call CONST
 mov rdi, qword [rip + CONST]
 test rdi, rdi
 cjmp LABEL356
LABEL947:
 mov rsi, qword [rip + CONST]
 mov edx, CONST
 call CONST
 jmp LABEL103
 mov r13, qword [rip + CONST]
 test r13, r13
 cjmp LABEL363
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL368
LABEL618:
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov r13, qword [rip + CONST]
 mov ecx, CONST
 lea rdi, [rip + CONST]
 mov rsi, r13
 repe cmpsb byte [rsi], byte [rdi]
 seta al
 sbb al, CONST
 test al, al
 cjmp LABEL379
 mov dword [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 call CONST
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
 mov byte [rip + CONST], CONST
 jmp LABEL103
LABEL127:
 lea rsi, [rip + CONST]
 call CONST
 mov r13, rax
 test rax, rax
 cjmp LABEL395
 call CONST
 mov rcx, qword [rip + CONST]
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov esi, dword [rax]
 xor eax, eax
 call CONST
 nop
LABEL72:
 xor eax, eax
 cmp byte [rsp + CONST], CONST
 lea rdx, [rsp + CONST]
 sete al
 sub r14, rax
 mov rax, r14
 cmp r14, rdx
 cjmp LABEL411
 mov dword [r14], CONST
 lea r14, [rsp + CONST]
 jmp LABEL414
LABEL142:
 test byte [r13], CONST
 cjmp LABEL416
 cmp qword [rip + CONST], r13
 cjmp LABEL418
 mov rdi, r13
 call CONST
LABEL418:
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 cmp rsi, rbx
 cjmp LABEL424
 cmp byte [rdi + rsi + CONST], CONST
 cjmp LABEL424
 lea rax, [rsi + CONST]
 mov qword [rsp + CONST], rax
 mov byte [rdi + rsi], CONST
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
LABEL424:
 mov rdx, qword [rip + CONST]
 sub rsi, rbx
 add rdi, rbx
 call CONST
 jmp LABEL103
LABEL94:
 movzx eax, byte [rip + CONST]
 test al, al
 cjmp LABEL439
 mov edx, dword [rip + CONST]
 test edx, edx
 cjmp LABEL442
 cmp qword [rsp + CONST], CONST
 cjmp LABEL444
 mov rax, qword [rsp + CONST]
 test rax, rax
 cjmp LABEL447
 sub rax, CONST
 mov qword [rsp + CONST], rax
LABEL659:
 movzx ebx, byte [rip + CONST]
 test bl, bl
 cjmp LABEL452
 mov dword [rip + CONST], CONST
 xor ebx, ebx
LABEL764:
 mov byte [rip + CONST], CONST
 mov byte [rip + CONST], CONST
LABEL766:
 movzx eax, byte [rip + CONST]
 or al, byte [rip + CONST]
 cmp qword [rip + CONST], CONST
 mov byte [rip + CONST], al
 cjmp LABEL461
 mov rax, qword [rsp + CONST]
 mov qword [rip + CONST], rax
LABEL461:
 cmp qword [rip + CONST], CONST
 cjmp LABEL465
 mov rax, qword [rsp + CONST]
 mov qword [rip + CONST], rax
LABEL465:
 cmp qword [rip + CONST], CONST
 cjmp LABEL469
 cmp qword [rsp + CONST], CONST
 cjmp LABEL471
LABEL725:
 cmp dword [rip + CONST], CONST
 cjmp LABEL473
LABEL893:
 call CONST
 cmp dword [rip + CONST], CONST
 cjmp LABEL476
LABEL914:
 mov eax, CONST
 mov edx, CONST
 xor esi, esi
 lea rdi, [rip + CONST]
 jmp LABEL481
LABEL486:
 add rax, CONST
 cmp rax, CONST
 cjmp LABEL484
LABEL481:
 cmp byte [rdi + rax], CONST
 cjmp LABEL486
 movzx ecx, sil
 test ecx, eax
 cjmp LABEL486
 nop word [rax + rax]
LABEL494:
 mov ecx, edx
 add edx, edx
 cmp edx, eax
 cjmp LABEL494
 add rax, CONST
 or esi, ecx
 mov edx, ecx
 cmp rax, CONST
 cjmp LABEL481
LABEL484:
 movabs rax, CONST
 movzx esi, sil
 imul rsi, rax
 mov eax, dword [rsp + CONST]
 mov qword [rip + CONST], rsi
 test eax, eax
 cjmp LABEL506
 cmp eax, CONST
 cjmp LABEL508
 cmp dword [rsp + CONST], CONST
 lea r14, [rsp + CONST]
 cjmp LABEL511
LABEL771:
 movsxd rax, dword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 shl rax, CONST
 mov rdx, rax
 lea rax, [rip + CONST]
 add rax, rdx
 mov rdx, qword [rax + CONST]
 mov qword [rip + CONST], rdx
 movsxd rdx, dword [rax + CONST]
 call qword [rax + CONST]
 xor r8d, r8d
 mov rcx, r14
 mov edx, CONST
 mov qword [rip + CONST], rax
 mov rdi, rax
 movzx eax, byte [rip + CONST]
 lea rsi, [rsp + CONST]
 mov byte [rsp + CONST], CONST
 mov byte [rsp + CONST], al
 mov byte [rsp + CONST], CONST
 call qword [rip + CONST]
 mov ebx, dword [rsp + CONST]
 test rax, rax
 sete al
 cmp al, byte [rip + CONST]
 sete byte [rip + CONST]
 sub ebx, dword [rip + CONST]
 test ebp, ebp
 cjmp LABEL541
 cmp ebx, CONST
 cjmp LABEL541
 xor ebp, ebp
 cmp dword [rip + CONST], CONST
 sete bpl
 neg ebp
LABEL749:
 mov edi, CONST
 mov dword [rip + CONST], ebp
 call CONST
 mov rcx, rax
 lea rdx, [rax + CONST]
 movabs rax, CONST
 cmp rdx, rax
 cjmp LABEL555
 mov eax, CONST
 xor edx, edx
 mov qword [rip + CONST], rcx
 div rcx
 mov eax, CONST
 test rdx, rdx
 cjmp LABEL562
 lea rax, [rcx + CONST]
 sub rax, rdx
LABEL562:
 lea rdi, [rcx + rax + CONST]
 mov qword [rip + CONST], rdi
 call CONST
 mov qword [rip + CONST], rax
 test byte [rip + CONST], CONST
 cjmp LABEL570
 cmp dword [rip + CONST], CONST
 cjmp LABEL572
LABEL570:
 test ebx, ebx
 cjmp LABEL574
 movsxd rax, dword [rip + CONST]
 mov rdi, qword [rsp + CONST]
 lea rbx, [rdi + rax*CONST]
LABEL806:
 mov ebp, CONST
LABEL592:
 mov rsi, qword [rbx]
 add rbx, CONST
 cmp byte [rsi], CONST
 cjmp LABEL582
 cmp byte [rsi + CONST], CONST
 cjmp LABEL582
 mov rax, qword [rip + CONST]
 xor edi, edi
 mov esi, CONST
 mov qword [rip + CONST], rax
 call CONST
 and ebp, eax
 cmp qword [rbx], CONST
 cjmp LABEL592
LABEL723:
 cmp byte [rip + CONST], CONST
 cjmp LABEL594
 movzx eax, bpl
LABEL733:
 mov rdi, qword [rsp + CONST]
 xor rdi, qword fs:[CONST]
 cjmp LABEL598
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL206:
 lea rsi, [rip + CONST]
 mov rdi, r8
 call CONST
 test eax, eax
 cjmp LABEL611
 mov dword [rip + CONST], CONST
 jmp LABEL103
LABEL368:
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL618
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL618
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL628
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL628
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL628
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL363
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL363
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test eax, eax
 cjmp LABEL363
 mov dword [rip + CONST], CONST
 jmp LABEL103
LABEL447:
 xor byte [rip + CONST], CONST
 mov byte [rip + CONST], CONST
 mov byte [rip + CONST], CONST
 jmp LABEL659
LABEL47:
 xor eax, eax
 mov rdi, rbp
 or rcx, CONST
 repne scasb al, byte [rdi]
 mov rdi, rcx
 not rdi
 call CONST
 xor edx, edx
 mov rdi, rbp
 mov rsi, rax
 mov r13, rax
 call CONST
 mov r12, rax
 mov eax, CONST
 sub eax, dword [rsp + CONST]
 cdqe
 cmp r12, rax
 cjmp LABEL677
 movsxd rax, dword [rsp + CONST]
 lea rdi, [r12 + rax + CONST]
 mov r15, rax
 shl rdi, CONST
 add r15d, r12d
 call CONST
 mov r11, qword [rsp + CONST]
 mov rsi, r13
 mov rdi, rbp
 lea rdx, [rax + CONST]
 mov rbx, rax
 mov dword [rsp + CONST], r15d
 mov rax, qword [r11]
 mov qword [rbx], rax
 call CONST
 lea rcx, [rdx + rax*CONST]
 mov rsi, r11
 xor eax, eax
LABEL700:
 mov rdx, qword [rsi + rax + CONST]
 mov qword [rcx + rax], rdx
 add rax, CONST
 test rdx, rdx
 cjmp LABEL700
 mov dword [rsp + CONST], r12d
 test r12, r12
 cjmp LABEL703
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 xor esi, esi
 xor edi, edi
 mov rdx, rax
 xor eax, eax
 call CONST
 mov qword [rsp + CONST], rbx
 jmp LABEL714
LABEL582:
 mov ecx, CONST
 mov edx, CONST
 mov edi, CONST
 mov qword [rip + CONST], rsi
 call CONST
 and ebp, eax
 cmp qword [rbx], CONST
 cjmp LABEL592
 jmp LABEL723
LABEL471:
 cmp byte [rip + CONST], CONST
 cjmp LABEL725
 cmp byte [rip + CONST], CONST
 cjmp LABEL725
 cmp byte [rip + CONST], CONST
 cjmp LABEL725
LABEL469:
 cmp dword [rip + CONST], CONST
 cjmp LABEL725
 mov eax, CONST
 jmp LABEL733
LABEL703:
 mov qword [rsp + CONST], rbx
LABEL43:
 mov dword [rsp + CONST], CONST
 jmp LABEL714
LABEL267:
 mov rsi, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 mov r14, qword [rip + CONST]
 mov r13, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov rdi, rax
 jmp LABEL744
LABEL363:
 mov dword [rip + CONST], CONST
 jmp LABEL103
LABEL541:
 not ebp
 shr ebp, CONST
 jmp LABEL749
LABEL452:
 lea r12, [rsp + CONST]
 mov esi, CONST
 mov edi, CONST
 mov rdx, r12
 call CONST
 test eax, eax
 cjmp LABEL756
 mov eax, dword [rsp + CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL760
 cmp eax, CONST
 cjmp LABEL762
LABEL756:
 cmp byte [rip + CONST], CONST
 cjmp LABEL764
 cmp dword [rip + CONST], CONST
 cjmp LABEL766
 jmp LABEL764
LABEL506:
 mov dword [rsp + CONST], CONST
LABEL511:
 cmp qword [rip + CONST], CONST
 lea r14, [rsp + CONST]
 cjmp LABEL771
 mov r10, qword [rsp + CONST]
 mov r12, qword [rsp + CONST]
 lea r13, [rip + CONST]
 lea rdi, [r10 + CONST]
 mov qword [rsp + CONST], r10
 mov qword [rsp + CONST], r12
 call CONST
 mov r10, qword [rsp + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], rax
 lea rax, [rsp + CONST]
 mov r15, r10
 mov qword [rsp + CONST], rax
LABEL850:
 test r15, r15
 cjmp LABEL787
 movzx eax, byte [r12]
 cmp al, CONST
 cjmp LABEL790
 cmp al, CONST
 cjmp LABEL792
 sub eax, CONST
 cmp al, CONST
 cjmp LABEL792
 movzx eax, al
 movsxd rax, dword [r13 + rax*CONST]
 add rax, r13
 notrack jmp rax
LABEL574:
 cmp dword [rip + CONST], CONST
 cjmp LABEL801
 mov edi, dword [rsp + CONST]
 cmp dword [rsp + CONST], edi
 cjmp LABEL804
LABEL801:
 lea rbx, [rip + CONST]
 jmp LABEL806
LABEL444:
 mov edx, dword [rip + CONST]
 cmp edx, dword [rsp + CONST]
 cjmp LABEL96
 mov rdi, qword [rsp + CONST]
 movsxd rcx, edx
 add edx, CONST
 mov r8, qword [rdi + rcx*CONST]
 or rcx, CONST
 mov rdi, r8
 repne scasb al, byte [rdi]
 mov rdi, r8
 mov dword [rip + CONST], edx
 not rcx
 mov rsi, rcx
 lea rax, [rcx + CONST]
 mov qword [rsp + CONST], rax
 call CONST
 mov rsi, qword [rsp + CONST]
 lea rdx, [rip + CONST]
 mov rdi, rax
 mov qword [rsp + CONST], rax
 call CONST
 add qword [rip + CONST], CONST
 jmp LABEL659
LABEL572:
 mov dword [rip + CONST], CONST
 jmp LABEL570
LABEL792:
 movzx eax, byte [r12]
 lea rdi, [rip + CONST]
 cmp byte [rip + CONST], CONST
 movzx edx, byte [rdi + rax + CONST]
 cjmp LABEL837
 movsx eax, dl
 mov dword [rsp + CONST], eax
 test eax, eax
 cjmp LABEL841
LABEL1096:
 movsxd rax, dword [rsp + CONST]
LABEL1014:
 mov rdi, qword [rsp + CONST]
 mov rsi, r12
 mov ecx, eax
 add qword [rsp + CONST], rax
 rep movsb byte [rdi], byte [rsi]
 add r12, rax
 sub r15, rax
 jmp LABEL850
LABEL787:
 mov rdx, qword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 mov dword [rsp + CONST], CONST
 sub rdx, rsi
 cmp qword [rsp + CONST], rdx
 cjmp LABEL856
 mov rdi, qword [rsp + CONST]
 mov qword [rsp + CONST], rdx
 call CONST
LABEL856:
 mov rdi, qword [rsp + CONST]
 call CONST
 jmp LABEL771
LABEL790:
 sub eax, CONST
 cmp al, CONST
 cjmp LABEL792
 cmp dword [rsp + CONST], CONST
 cjmp LABEL792
 jmp LABEL856
LABEL628:
 mov dword [rip + CONST], CONST
 jmp LABEL103
LABEL594:
 mov eax, CONST
 jmp LABEL733
LABEL439:
 call CONST
 mov rdi, qword [rip + CONST]
 xor r8d, r8d
 lea rcx, [rip + CONST]
 mov rsi, rax
 lea rdx, [rip + CONST]
 xor eax, eax
 call CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rdi, rax
 call CONST
 xor eax, eax
 jmp LABEL733
LABEL473:
 test bl, bl
 cjmp LABEL890
LABEL896:
 xor eax, eax
LABEL902:
 mov dword [rip + CONST], eax
 jmp LABEL893
LABEL890:
 call CONST
 test eax, eax
 cjmp LABEL896
 mov edi, CONST
 call CONST
 test eax, eax
 setne al
 movzx eax, al
 jmp LABEL902
LABEL476:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL906
 cmp byte [rax], CONST
 cjmp LABEL906
 mov qword [rip + CONST], rax
 mov qword [rip + CONST], rax
LABEL906:
 lea rdi, [rip + CONST]
 call CONST
 test rax, rax
 cjmp LABEL914
 cmp byte [rax], CONST
 cjmp LABEL914
 mov rdi, rax
 xor r14d, r14d
 lea r15, [rip + CONST]
 call CONST
 mov dword [rsp + CONST], ebp
 mov r12, rax
 mov rdx, rax
LABEL943:
 movzx ebx, byte [rdx]
 cmp bl, CONST
 cjmp LABEL926
 test bl, bl
 cjmp LABEL926
 cmp bl, CONST
 cjmp LABEL930
 test r14, r14
 cjmp LABEL932
 cmp bl, CONST
 cjmp LABEL932
 movsx eax, bl
 sub eax, CONST
 cmp eax, CONST
 cjmp LABEL932
LABEL992:
 mov ebp, dword [rsp + CONST]
 jmp LABEL914
LABEL932:
 lea r13, [rdx + CONST]
LABEL995:
 mov rdx, r13
 jmp LABEL943
LABEL356:
 call CONST
 mov qword [rip + CONST], rax
 mov rdi, rax
 jmp LABEL947
LABEL244:
 call CONST
 mov qword [rip + CONST], rax
 mov rsi, rax
 jmp LABEL951
LABEL329:
 call CONST
 mov qword [rip + CONST], rax
 mov rdi, rax
 jmp LABEL955
LABEL341:
 call CONST
 mov qword [rip + CONST], rax
 mov rdi, rax
 jmp LABEL959
LABEL350:
 call CONST
 mov qword [rip + CONST], rax
 mov rdi, rax
 jmp LABEL963
LABEL233:
 call CONST
 mov qword [rip + CONST], rax
 mov rsi, rax
 jmp LABEL967
LABEL926:
 mov byte [rdx], CONST
 lea r13, [rdx + CONST]
 lea rbp, [rip + CONST]
 mov rdi, r15
 jmp LABEL972
LABEL980:
 mov rdi, qword [rbp + CONST]
 add rbp, CONST
 test rdi, rdi
 cjmp LABEL976
LABEL972:
 mov rsi, r12
 call CONST
 test eax, eax
 cjmp LABEL980
LABEL976:
 mov rax, qword [rbp + CONST]
 test rax, rax
 cjmp LABEL983
 test r14, r14
 cjmp LABEL983
 mov qword [rax], r14
LABEL983:
 mov rax, qword [rbp + CONST]
 test rax, rax
 cjmp LABEL989
 call rax
LABEL989:
 test bl, bl
 cjmp LABEL992
 mov r12, r13
 xor r14d, r14d
 jmp LABEL995
LABEL930:
 cmp r12, rdx
 cjmp LABEL992
 test r14, r14
 cjmp LABEL992
 lea r13, [rdx + CONST]
 mov byte [rdx], CONST
 mov r14, r13
 jmp LABEL995
LABEL508:
 cmp byte [rip + CONST], CONST
 cjmp LABEL1005
 cmp qword [rip + CONST], CONST
 cjmp LABEL1007
LABEL1105:
 lea r14, [rsp + CONST]
 jmp LABEL771
LABEL837:
 movsx rax, dl
 cmp dl, CONST
 cjmp LABEL1012
LABEL1101:
 cmp rax, CONST
 cjmp LABEL1014
 jmp LABEL856
LABEL96:
 mov edi, CONST
 call CONST
LABEL1007:
 cmp byte [rip + CONST], CONST
 lea r14, [rsp + CONST]
 cjmp LABEL771
LABEL1103:
 lea rsi, [rsp + CONST]
 lea rdi, [rsp + CONST]
 call CONST
 mov dword [rsp + CONST], CONST
 jmp LABEL771
LABEL762:
 lea rdx, [rsp + CONST]
 lea rsi, [rip + CONST]
 mov edi, CONST
 call CONST
 test eax, eax
 cjmp LABEL1031
 mov rax, qword [rsp + CONST]
 cmp qword [rsp + CONST], rax
 cjmp LABEL1034
LABEL1031:
 mov ebx, CONST
 jmp LABEL756
LABEL760:
 lea rdi, [rip + CONST]
 mov ecx, CONST
 mov rsi, r12
 rep movsd dword [rdi], dword [rsi]
 jmp LABEL756
LABEL1005:
 mov r12, qword [rsp + CONST]
 mov r14, qword [rsp + CONST]
 xor ebx, ebx
 lea r13, [rip + CONST]
 mov qword [rsp + CONST], CONST
 jmp LABEL1047
LABEL1057:
 cmp rax, CONST
 cjmp LABEL1049
 add rbx, rax
LABEL1047:
 cmp r12, rbx
 cjmp LABEL1052
 lea rdi, [r14 + rbx]
 movzx eax, byte [rdi]
 movsx rax, byte [r13 + rax + CONST]
 cmp rax, CONST
 cjmp LABEL1057
 mov rsi, r12
 lea rdx, [rsp + CONST]
 sub rsi, rbx
 call CONST
 jmp LABEL1057
LABEL804:
 mov byte [rip + CONST], CONST
 lea rbx, [rip + CONST]
 jmp LABEL806
LABEL841:
 mov rcx, qword [rsp + CONST]
 mov rdx, r15
 mov rsi, r12
 mov rdi, r14
 call CONST
 mov rbx, rax
 cmp rax, CONST
 cjmp LABEL856
 mov edi, dword [rsp + CONST]
 lea rsi, [rsp + CONST]
 call CONST
 test eax, eax
 cjmp LABEL856
 lea edx, [rbx + CONST]
 mov dword [rsp + CONST], ebx
 movsxd rbx, edx
 mov dword [rsp + CONST], ebp
 mov rbp, rbx
 jmp LABEL1084
LABEL1094:
 call CONST
 movzx ebx, byte [r12 + rbp]
 sub rbp, CONST
 mov rcx, qword [rax]
 movzx esi, bl
 movzx eax, bl
 cmp dword [rcx + rsi*CONST], eax
 cjmp LABEL1092
LABEL1084:
 test ebp, ebp
 cjmp LABEL1094
 mov ebp, dword [rsp + CONST]
 jmp LABEL1096
LABEL1012:
 mov rdx, qword [rsp + CONST]
 mov rsi, r15
 mov rdi, r12
 call CONST
 jmp LABEL1101
LABEL1049:
 lea r14, [rsp + CONST]
 jmp LABEL1103
LABEL1052:
 cmp byte [rip + CONST], CONST
 cjmp LABEL1105
 mov rax, qword [rsp + CONST]
 mov dword [rsp + CONST], ebp
 xor r13d, r13d
 lea r14, [rsp + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL1114
LABEL1124:
 add r13, r12
LABEL1114:
 cmp r13, qword [rsp + CONST]
 cjmp LABEL1117
 mov rax, qword [rsp + CONST]
 lea rdi, [rip + CONST]
 lea r15, [rax + r13]
 movzx eax, byte [r15]
 movsx r12, byte [rdi + rax + CONST]
 test r12d, r12d
 cjmp LABEL1124
 mov rdx, qword [rsp + CONST]
 lea rcx, [rsp + CONST]
 mov rsi, r15
 mov rdi, r14
 sub rdx, r13
 call CONST
 mov rbx, rax
 cmp rax, CONST
 cjmp LABEL1133
 mov edi, dword [rsp + CONST]
 lea rsi, [rsp + CONST]
 call CONST
 test eax, eax
 cjmp LABEL1133
 movsxd r12, ebx
 sub ebx, CONST
 movsxd rbx, ebx
LABEL1150:
 test ebx, ebx
 cjmp LABEL1124
 call CONST
 movzx ebp, byte [r15 + rbx]
 sub rbx, CONST
 mov rax, qword [rax]
 movzx edx, bpl
 cmp dword [rax + rdx*CONST], ebp
 cjmp LABEL1150
LABEL1133:
 mov ebp, dword [rsp + CONST]
 jmp LABEL1103
LABEL90:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 mov rcx, r12
 xor esi, esi
 mov edi, CONST
 mov r8, rax
 lea rdx, [rip + CONST]
 xor eax, eax
 call CONST
LABEL1092:
 mov ebp, dword [rsp + CONST]
 jmp LABEL856
LABEL1117:
 mov ebp, dword [rsp + CONST]
 jmp LABEL771
LABEL1034:
 mov rax, qword [rsp + CONST]
 cmp qword [rsp + CONST], rax
 cjmp LABEL1031
 mov byte [rip + CONST], CONST
 jmp LABEL756
LABEL122:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 xor esi, esi
 mov edi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
LABEL677:
 call CONST
LABEL611:
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor edi, edi
 call CONST
 xor esi, esi
 mov edi, CONST
 mov rdx, rax
 xor eax, eax
 call CONST
LABEL442:
 xor edi, edi
 call CONST
LABEL416:
 call CONST
 mov rcx, qword [rip + CONST]
 mov edi, CONST
 lea rdx, [rip + CONST]
 mov esi, dword [rax]
 xor eax, eax
 call CONST
LABEL598:
 call CONST
