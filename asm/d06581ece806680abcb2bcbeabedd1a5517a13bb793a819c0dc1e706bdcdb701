 .name fcn.00078e90
 .offset 0000000000078e90
 .file perl5.30.0
 push r15
 mov r15d, r9d
 push r14
 mov r14, rsi
 push r13
 mov r13, rdi
 push r12
 mov r12, rcx
 push rbp
 push rbx
 mov rbx, r8
 sub rsp, CONST
 mov dword [rsp + CONST], edx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, qword [rsi + CONST]
 cmp dl, CONST
 cjmp LABEL18
 mov rdi, qword [rax + CONST]
LABEL360:
 test rdi, rdi
 cjmp LABEL21
 test byte [rdi + CONST], CONST
 cjmp LABEL23
LABEL21:
 mov rax, qword [r13 + CONST]
 mov rbp, qword [r13]
 mov rax, qword [rax + CONST]
 test rax, rax
 cjmp LABEL28
LABEL376:
 mov rdx, qword [rax]
 mov dword [rax + CONST], CONST
 mov rdi, r13
 mov dword [rax + CONST], CONST
 mov rdx, qword [rdx]
 mov qword [rdx + CONST], CONST
 mov rdx, qword [r13 + CONST]
 sub rbp, qword [r13 + CONST]
 mov rdx, qword [rdx]
 sar rbp, CONST
 mov qword [rdx + CONST], rbp
 mov rdx, qword [rax]
 mov rdx, qword [rdx + CONST]
 mov qword [r13 + CONST], rdx
 mov rcx, qword [rax]
 mov rcx, qword [rcx]
 mov rcx, qword [rcx + CONST]
 lea rcx, qword [rdx + rcx*CONST]
 mov qword [r13 + CONST], rcx
 mov rcx, qword [rax]
 mov rcx, qword [rcx]
 mov rcx, qword [rcx + CONST]
 lea rbp, qword [rdx + rcx*CONST]
 mov qword [r13], rbp
 mov rdx, qword [rax]
 mov qword [r13 + CONST], rax
 mov qword [r13 + CONST], rdx
 call CONST
 sub rsp, CONST
 xor r9d, r9d
 mov r8, rbx
 push CONST
 mov rsi, qword [r13 + CONST]
 mov rcx, r12
 xor edx, edx
 push CONST
 mov rdi, r13
 push CONST
 call CONST
 add rsp, CONST
 test rax, rax
 cjmp LABEL70
 mov rax, qword [rax + CONST]
 mov rax, qword [rax]
 mov r11, qword [rax + CONST]
 test r11, r11
 cjmp LABEL75
LABEL291:
 sub rsp, CONST
 mov r8d, CONST
 xor r9d, r9d
 mov rsi, r11
 push CONST
 lea rdx, qword [rip + CONST]
 mov ecx, CONST
 mov rdi, r13
 call CONST
 mov r8, rax
 pop rax
 pop rdx
 test r8, r8
 cjmp LABEL75
 mov rax, qword [r8]
 test rax, rax
 cjmp LABEL75
 mov edx, dword [rax + CONST]
 cmp dl, CONST
 cjmp LABEL95
LABEL368:
 and dh, CONST
 cjmp LABEL75
 mov rax, qword [rax + CONST]
 cmp byte [rax + CONST], CONST
 cjmp LABEL100
 nop dword [rax]
LABEL75:
 mov rdx, rbx
 mov rsi, r12
 mov rdi, r13
 call CONST
 cmp byte [rsp + CONST], CONST
 mov rdx, rax
 setne al
 add eax, CONST
 mov byte [rsp + CONST], al
 test r15d, r15d
 cjmp LABEL112
LABEL358:
 xor ecx, ecx
 mov esi, CONST
 mov rdi, r13
 xor eax, eax
 call CONST
 sub rsp, CONST
 xor r9d, r9d
 mov r8, rbx
 push CONST
 mov rsi, qword [r13 + CONST]
 mov rcx, r12
 xor edx, edx
 push CONST
 mov rdi, r13
 push CONST
 call CONST
 add rsp, CONST
 test rax, rax
 cjmp LABEL131
 mov rax, qword [rax + CONST]
 mov rax, qword [rax]
 mov r15, qword [rax + CONST]
 test r15, r15
 cjmp LABEL136
LABEL352:
 sub rsp, CONST
 xor r9d, r9d
 mov r8d, CONST
 mov rdi, r13
 push CONST
 mov ecx, CONST
 lea rdx, qword [rip + CONST]
 mov rsi, r15
 call CONST
 pop rdi
 pop r9
 mov r8, rax
 test rax, rax
 cjmp LABEL150
 mov rax, qword [rax]
 test rax, rax
 cjmp LABEL150
 mov edx, dword [rax + CONST]
 cmp dl, CONST
 cjmp LABEL156
LABEL364:
 and dh, CONST
 cjmp LABEL150
 mov rax, qword [rax + CONST]
 cmp byte [rax + CONST], CONST
 cjmp LABEL150
LABEL100:
 mov rax, qword [r13 + CONST]
 add rax, CONST
 mov qword [r13 + CONST], rax
 cmp rax, qword [r13 + CONST]
 cjmp LABEL166
LABEL416:
 mov rdx, rbp
 sub rdx, qword [r13 + CONST]
 sar rdx, CONST
 mov dword [rax], edx
 mov rax, qword [r13 + CONST]
 sub rax, rbp
 test rax, rax
 cjmp LABEL174
LABEL411:
 mov qword [rbp + CONST], r14
 add rbp, CONST
 mov edx, CONST
 mov rdi, r13
 mov qword [r13], rbp
 mov rsi, qword [r8]
 call CONST
 mov rdi, r13
 call CONST
 mov rax, qword [r13 + CONST]
 mov rdx, qword [r13]
 mov rax, qword [rax + CONST]
 test rax, rax
 cjmp LABEL188
 mov rcx, qword [r13 + CONST]
 sub rdx, qword [r13 + CONST]
 sar rdx, CONST
 mov rcx, qword [rcx]
 mov qword [rcx + CONST], rdx
 mov rdx, qword [rax]
 mov rdx, qword [rdx + CONST]
 mov qword [r13 + CONST], rdx
 mov rcx, qword [rax]
 mov rcx, qword [rcx]
 mov rcx, qword [rcx + CONST]
 lea rcx, qword [rdx + rcx*CONST]
 mov qword [r13 + CONST], rcx
 mov rcx, qword [rax]
 mov rcx, qword [rcx]
 mov rcx, qword [rcx + CONST]
 lea rdx, qword [rdx + rcx*CONST]
 mov qword [r13], rdx
 mov rdx, qword [rax]
 mov qword [r13 + CONST], rax
 mov qword [r13 + CONST], rdx
LABEL227:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL212
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL23:
 cmp byte [rsp + CONST], CONST
 mov esi, CONST
 mov eax, CONST
 cmovne esi, eax
 call CONST
 test rax, rax
 cjmp LABEL227
 jmp LABEL21
LABEL70:
 lea r9, qword [rsp + CONST]
 mov ecx, CONST
 mov rdx, rbx
 mov rsi, r12
 mov rdi, r9
 call CONST
 xor ecx, ecx
 lea edx, dword [rbx + CONST]
 mov r8d, CONST
 mov r9, rax
 mov rdi, r13
 lea eax, dword [rbx + CONST]
 mov byte [rsp + rbx + CONST], CONST
 mov rsi, r9
 mov byte [rsp + rax + CONST], CONST
 call CONST
 test rax, rax
 cjmp LABEL75
 mov edx, dword [rax + CONST]
 mov ecx, edx
 and ecx, CONST
 cmp ecx, CONST
 cjmp LABEL75
 movzx edx, dl
 sub edx, CONST
 cmp edx, CONST
 cjmp LABEL75
 mov rdx, qword [rax + CONST]
 mov r11, qword [rdx + CONST]
 test r11, r11
 cjmp LABEL75
 test byte [r11 + CONST], CONST
 cjmp LABEL261
 mov rdx, qword [r11]
 mov rcx, qword [rdx + CONST]
 mov rdx, qword [r11 + CONST]
 lea rdx, qword [rdx + rcx*CONST + CONST]
 mov rcx, qword [rdx]
 test rcx, rcx
 cjmp LABEL261
 mov esi, dword [rdx + CONST]
 test esi, esi
 cjmp LABEL271
 cmp qword [rcx], CONST
 cjmp LABEL261
 nop
LABEL271:
 mov rsi, r11
 mov rdi, r13
 mov qword [rsp + CONST], r11
 call CONST
 sub rsp, CONST
 mov rdx, r12
 mov ecx, ebx
 push CONST
 mov rsi, qword [r13 + CONST]
 mov r9, rax
 mov rdi, r13
 mov r8d, CONST
 call CONST
 pop rax
 pop rdx
 mov r11, qword [rsp + CONST]
 jmp LABEL291
LABEL131:
 lea r9, qword [rsp + CONST]
 mov ecx, CONST
 mov rdx, rbx
 mov rsi, r12
 mov rdi, r9
 call CONST
 xor ecx, ecx
 lea edx, dword [rbx + CONST]
 mov r8d, CONST
 mov r9, rax
 mov rdi, r13
 lea eax, dword [rbx + CONST]
 mov byte [rsp + rbx + CONST], CONST
 mov rsi, r9
 mov byte [rsp + rax + CONST], CONST
 call CONST
 test rax, rax
 cjmp LABEL136
 mov edx, dword [rax + CONST]
 mov ecx, edx
 and ecx, CONST
 cmp ecx, CONST
 cjmp LABEL136
 movzx edx, dl
 sub edx, CONST
 cmp edx, CONST
 cjmp LABEL136
 mov rdx, qword [rax + CONST]
 mov r15, qword [rdx + CONST]
 test r15, r15
 cjmp LABEL136
 test byte [r15 + CONST], CONST
 cjmp LABEL324
 mov rdx, qword [r15]
 mov rcx, qword [rdx + CONST]
 mov rdx, qword [r15 + CONST]
 lea rdx, qword [rdx + rcx*CONST + CONST]
 mov rcx, qword [rdx]
 test rcx, rcx
 cjmp LABEL324
 mov r11d, dword [rdx + CONST]
 test r11d, r11d
 cjmp LABEL334
 cmp qword [rcx], CONST
 cjmp LABEL324
 nop dword [rax + rax]
LABEL334:
 mov rsi, r15
 mov rdi, r13
 call CONST
 sub rsp, CONST
 mov ecx, ebx
 mov rdx, r12
 push CONST
 mov rsi, qword [r13 + CONST]
 mov r9, rax
 mov rdi, r13
 mov r8d, CONST
 call CONST
 pop rcx
 pop rsi
 jmp LABEL352
LABEL112:
 mov rsi, r14
 mov rdi, r13
 mov qword [rsp + CONST], rdx
 call CONST
 mov rdx, qword [rsp + CONST]
 jmp LABEL358
LABEL18:
 mov rdi, qword [rax]
 jmp LABEL360
LABEL156:
 mov rcx, qword [rax + CONST]
 cmp qword [rcx + CONST], CONST
 cjmp LABEL100
 jmp LABEL364
LABEL95:
 mov rcx, qword [rax + CONST]
 cmp qword [rcx + CONST], CONST
 cjmp LABEL100
 jmp LABEL368
LABEL28:
 mov edx, CONST
 mov esi, CONST
 mov rdi, r13
 call CONST
 mov rdx, qword [r13 + CONST]
 mov qword [rax + CONST], rdx
 mov qword [rdx + CONST], rax
 jmp LABEL376
LABEL261:
 xor r8d, r8d
 mov ecx, ebx
 mov rdx, r12
 mov rsi, r11
 mov rdi, r13
 mov qword [rsp + CONST], rax
 mov qword [rsp + CONST], r11
 call CONST
 mov rax, qword [rsp + CONST]
 mov r11, qword [rsp + CONST]
 mov rdx, qword [rax]
 mov rdx, qword [rdx + CONST]
 mov rcx, qword [rdx]
 mov rdx, qword [rdx + CONST]
 mov rcx, qword [rcx + CONST]
 mov ecx, dword [rdx + rcx*CONST + CONST]
 test ecx, ecx
 cjmp LABEL271
 mov rsi, r11
 mov r8d, CONST
 mov rcx, rax
 xor edx, edx
 mov rdi, r13
 call CONST
 mov r11, qword [rsp + CONST]
 jmp LABEL271
LABEL174:
 mov rdx, rbp
 mov rsi, rbp
 mov ecx, CONST
 mov rdi, r13
 mov qword [rsp + CONST], r8
 call CONST
 mov r8, qword [rsp + CONST]
 mov rbp, rax
 jmp LABEL411
LABEL166:
 mov rdi, r13
 mov qword [rsp + CONST], r8
 call CONST
 mov r8, qword [rsp + CONST]
 jmp LABEL416
LABEL324:
 mov ecx, ebx
 mov rdx, r12
 xor r8d, r8d
 mov rsi, r15
 mov rdi, r13
 mov qword [rsp + CONST], rax
 call CONST
 mov rax, qword [rsp + CONST]
 mov rdx, qword [rax]
 mov rdx, qword [rdx + CONST]
 mov rcx, qword [rdx]
 mov rdx, qword [rdx + CONST]
 mov rcx, qword [rcx + CONST]
 mov r10d, dword [rdx + rcx*CONST + CONST]
 test r10d, r10d
 cjmp LABEL334
 mov r8d, CONST
 mov rcx, rax
 xor edx, edx
 mov rsi, r15
 mov rdi, r13
 call CONST
 jmp LABEL334
LABEL136:
 movsx ecx, byte [rsp + CONST]
 movsx edx, byte [rsp + CONST]
 mov r8, r12
 mov rdi, r13
 lea rsi, qword [rip + CONST]
 xor eax, eax
 call CONST
LABEL150:
 movsx ecx, byte [rsp + CONST]
 movsx edx, byte [rsp + CONST]
 mov r8, r12
 mov rdi, r13
 lea rsi, qword [rip + CONST]
 xor eax, eax
 call CONST
LABEL212:
 call CONST
LABEL188:
 call CONST
 nop
