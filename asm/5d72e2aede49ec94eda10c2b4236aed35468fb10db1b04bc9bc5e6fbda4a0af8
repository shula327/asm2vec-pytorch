 .name sym.Perl_av_store
 .offset 00000000000fe8b0
 .file perl5.30.0
 endbr64
 push r15
 push r14
 mov r14, rcx
 push r13
 push r12
 mov r12, rdi
 push rbp
 mov rbp, rsi
 push rbx
 sub rsp, CONST
 mov eax, dword [rsi + CONST]
 mov qword [rsp + CONST], rdx
 test eax, CONST
 cjmp LABEL14
 mov rdx, qword [rsp + CONST]
 test rdx, rdx
 cjmp LABEL17
LABEL180:
 test eax, CONST
 cjmp LABEL19
LABEL132:
 test eax, CONST
 cjmp LABEL21
 mov rax, qword [rbp]
 mov rax, qword [rax + CONST]
LABEL172:
 cmp qword [rsp + CONST], rax
 cjmp LABEL25
 mov eax, dword [rbp + CONST]
LABEL19:
 test eax, CONST
 cjmp LABEL28
 test eax, eax
 cjmp LABEL30
LABEL28:
 mov rdx, qword [rbp]
 mov r8, qword [rsp + CONST]
 cmp qword [rdx + CONST], r8
 cjmp LABEL34
LABEL122:
 mov ecx, dword [rbp + CONST]
 mov rax, qword [rdx + CONST]
 mov r15, qword [rbp + CONST]
 and ecx, CONST
 cmp rax, r8
 cjmp LABEL40
 test ecx, ecx
 cjmp LABEL42
 cmp qword [r12 + CONST], rbp
 cjmp LABEL44
 nop word [rax + rax]
LABEL53:
 add rax, CONST
 mov qword [rdx + CONST], rax
 mov qword [r15 + rax*CONST], CONST
 mov rdx, qword [rbp]
 mov r8, qword [rsp + CONST]
 mov rax, qword [rdx + CONST]
 cmp rax, r8
 cjmp LABEL53
LABEL42:
 mov qword [rdx + CONST], r8
 lea rax, [r15 + r8*CONST]
LABEL106:
 mov qword [rax], r14
 test byte [rbp + CONST], CONST
 cjmp LABEL58
 mov rax, qword [rbp]
 mov r13d, CONST
 mov rbx, qword [rax + CONST]
 test rbx, rbx
 cjmp LABEL63
 nop word cs:[rax + rax]
LABEL91:
 movzx eax, byte [rbx + CONST]
 mov ecx, eax
 sub eax, CONST
 cmp eax, CONST
 cjmp LABEL69
 test r14, r14
 cjmp LABEL71
 add ecx, CONST
 mov r9d, dword [rsp + CONST]
 xor r8d, r8d
 mov rdx, rbp
 movzx ecx, cl
 mov rsi, r14
 mov rdi, r12
 call CONST
LABEL71:
 movzx eax, word [r12 + CONST]
 test ax, ax
 cjmp LABEL69
 cmp byte [rbx + CONST], CONST
 cjmp LABEL69
 or eax, CONST
 xor r13d, r13d
 mov word [r12 + CONST], ax
 nop word [rax + rax]
LABEL69:
 mov rbx, qword [rbx]
 test rbx, rbx
 cjmp LABEL91
 test r13b, r13b
 cjmp LABEL63
LABEL58:
 mov rax, qword [rsp + CONST]
 add rsp, CONST
 pop rbx
 pop rbp
 lea rax, [r15 + rax*CONST]
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL40:
 lea rax, [r15 + r8*CONST]
 test ecx, ecx
 cjmp LABEL106
 mov rsi, qword [rax]
 test rsi, rsi
 cjmp LABEL106
 mov edx, dword [rsi + CONST]
 cmp edx, CONST
 cjmp LABEL112
 sub edx, CONST
 mov dword [rsi + CONST], edx
 jmp LABEL106
LABEL34:
 mov rdx, r8
 mov rsi, rbp
 mov rdi, r12
 call CONST
 mov rdx, qword [rbp]
 mov r8, qword [rsp + CONST]
 jmp LABEL122
LABEL17:
 mov rax, qword [rbp]
 mov rax, qword [rax + CONST]
 add rax, CONST
LABEL189:
 add rax, rdx
 mov qword [rsp + CONST], rax
 cjmp LABEL128
 mov eax, dword [rbp + CONST]
 test eax, CONST
 cjmp LABEL19
 jmp LABEL132
LABEL14:
 mov esi, CONST
 mov rdi, rbp
 call CONST
 mov rdx, rax
 test rax, rax
 cjmp LABEL138
 cmp qword [rsp + CONST], CONST
 cjmp LABEL140
 lea rcx, [rsp + CONST]
 mov rsi, rbp
 mov rdi, r12
 call CONST
 test al, al
 cjmp LABEL128
LABEL140:
 test r14, r14
 cjmp LABEL128
 mov r8d, dword [rsp + CONST]
 xor ecx, ecx
 mov rdx, r14
 mov rsi, rbp
 mov rdi, r12
 call CONST
LABEL128:
 add rsp, CONST
 xor eax, eax
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL30:
 mov rsi, rbp
 mov rdi, r12
 call CONST
 jmp LABEL28
LABEL21:
 mov rsi, rbp
 mov rdi, r12
 call CONST
 cdqe
 jmp LABEL172
LABEL63:
 mov rsi, rbp
 mov rdi, r12
 call CONST
 jmp LABEL58
LABEL138:
 mov rdx, qword [rsp + CONST]
 mov eax, dword [rbp + CONST]
 test rdx, rdx
 cjmp LABEL180
 test eax, CONST
 cjmp LABEL17
 mov rsi, rbp
 mov rdi, r12
 call CONST
 mov rdx, qword [rsp + CONST]
 cdqe
 add rax, CONST
 jmp LABEL189
LABEL44:
 mov rsi, qword [r12 + CONST]
 mov rcx, qword [r12]
 sub rcx, rsi
 sar rcx, CONST
 cmp rcx, r8
 cjmp LABEL53
 lea rax, [rsi + r8*CONST]
 mov qword [r12], rax
 mov rdx, qword [rbp]
 mov rax, qword [rdx + CONST]
 jmp LABEL53
LABEL112:
 mov rdi, r12
 call CONST
 mov rax, qword [rsp + CONST]
 lea rax, [r15 + rax*CONST]
 jmp LABEL106
LABEL25:
 call CONST
