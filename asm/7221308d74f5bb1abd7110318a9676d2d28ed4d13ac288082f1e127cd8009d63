 .name fcn.00005320
 .offset 0000000000005320
 .file logger
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 mov rbx, rdi
 sub rsp, CONST
 mov r15, qword [rdi + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test r15, r15
 cjmp LABEL13
 mov rax, qword [rdi + CONST]
 mov ebp, CONST
 lea r13, qword [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 mov r14, rax
 lea rax, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
LABEL161:
 pxor xmm0, xmm0
 movaps xmmword [r13], xmm0
 movaps xmmword [r13 + CONST], xmm0
 movaps xmmword [r13 + CONST], xmm0
 cmp ebp, CONST
 cjmp LABEL27
 test byte [rbx + CONST], CONST
 cjmp LABEL29
 cmp qword [rsp + CONST], CONST
 lea rax, qword [rip + CONST]
 mov ebp, CONST
 mov dword [rsp + CONST], CONST
 cmove r14, rax
LABEL141:
 mov rcx, qword [rsp + CONST]
 mov rdx, r13
 mov rsi, r14
 mov rdi, r15
 mov dword [rsp + CONST], CONST
 call CONST
 test eax, eax
 cjmp LABEL42
 mov rax, qword [rsp + CONST]
 mov edx, dword [rax + CONST]
 mov esi, dword [rax + CONST]
 mov edi, dword [rax + CONST]
 call CONST
 mov r12d, eax
 cmp eax, -1
 cjmp LABEL50
 mov rax, qword [rsp + CONST]
 mov edi, r12d
 mov edx, dword [rax + CONST]
 mov rsi, qword [rax + CONST]
 call CONST
 mov rdi, qword [rsp + CONST]
 cmp eax, -1
 cjmp LABEL58
 call CONST
 cmp dword [rbx + CONST], ebp
 cjmp LABEL61
 mov dword [rbx + CONST], ebp
LABEL61:
 mov dword [rbx], r12d
 jmp LABEL64
LABEL13:
 mov r12, qword [rdi + CONST]
 test r12, r12
 cjmp LABEL67
 mov rdi, r12
 call CONST
 cmp rax, CONST
 cjmp LABEL71
LABEL159:
 mov eax, CONST
 mov edx, CONST
 mov rsi, r12
 lea rdi, qword [rip + CONST]
 mov word [rip + CONST], ax
 call CONST
 mov eax, dword [rbx + CONST]
 test al, CONST
 cjmp LABEL80
LABEL124:
 test al, CONST
 cjmp LABEL82
 nop
LABEL121:
 test byte [rbx + CONST], CONST
 cjmp LABEL85
 mov ebp, CONST
LABEL115:
 mov dword [rbx], ebp
LABEL64:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL90
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL80:
 xor edx, edx
 mov esi, CONST
 mov edi, CONST
 mov r14d, CONST
 call CONST
 mov r13d, CONST
 mov ebp, eax
 cmp eax, -1
 cjmp LABEL107
LABEL134:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 mov edi, ebp
 call CONST
 cmp eax, -1
 cjmp LABEL113
 cmp dword [rbx + CONST], r13d
 cjmp LABEL115
 mov dword [rbx + CONST], r13d
 jmp LABEL115
LABEL113:
 mov edi, ebp
 call CONST
 cmp r14d, CONST
 cjmp LABEL121
 nop dword [rax]
LABEL107:
 mov eax, dword [rbx + CONST]
 jmp LABEL124
LABEL82:
 xor edx, edx
 mov esi, CONST
 mov edi, CONST
 call CONST
 mov ebp, eax
 cmp eax, -1
 cjmp LABEL121
 mov r14d, CONST
 mov r13d, CONST
 jmp LABEL134
LABEL27:
 test byte [rbx + CONST], CONST
 cjmp LABEL136
 cmp qword [rsp + CONST], CONST
 lea rax, qword [rip + CONST]
 mov dword [rsp + CONST], CONST
 cmove r14, rax
 jmp LABEL141
LABEL50:
 mov rdi, qword [rsp + CONST]
 call CONST
LABEL136:
 cmp dword [rsp + CONST], CONST
 mov ebp, CONST
 cjmp LABEL146
LABEL29:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov rcx, r14
 mov rdx, r15
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL67:
 lea r12, qword [rip + CONST]
 mov qword [rdi + CONST], r12
 jmp LABEL159
LABEL146:
 mov dword [rsp + CONST], CONST
 jmp LABEL161
LABEL58:
 call CONST
 mov edi, r12d
 call CONST
 jmp LABEL136
LABEL90:
 call CONST
LABEL71:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
LABEL42:
 mov edi, eax
 call CONST
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 mov rbx, rax
 call CONST
 mov r8, rbx
 mov rcx, r14
 mov rdx, r15
 mov rsi, rax
 mov edi, CONST
 xor eax, eax
 call CONST
LABEL85:
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 xor edi, edi
 call CONST
 mov rdx, r12
 mov edi, CONST
 mov rsi, rax
 xor eax, eax
 call CONST
