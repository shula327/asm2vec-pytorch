 .name fcn.001a3280
 .offset 00000000001a3280
 .file perl5.30.0
 push r15
 push r14
 push r13
 mov r13, rdi
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rbp, qword [rdi]
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], rsi
 mov rbx, rbp
 mov qword [rsp + CONST], rcx
 mov qword [rsp + CONST], r8
 mov qword [rsp + CONST], r9
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, rbp
 sub rax, qword [rdi + CONST]
 mov rbp, r13
 mov qword [rsp + CONST], CONST
 sar rax, CONST
 mov qword [rsp + CONST], rax
 mov eax, dword [rsi + CONST]
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov edi, eax
 and edi, CONST
 setne byte [rsp + CONST]
 shr eax, CONST
 sub rdx, rcx
 xor r12d, r12d
 and eax, CONST
 mov dword [rsp + CONST], edi
 mov r15, r12
 mov byte [rsp + CONST], al
 mov qword [rsi + CONST], rdx
LABEL225:
 mov rsi, qword [rsp + CONST]
 mov rdi, rbp
 call CONST
 mov byte [rsp + CONST], al
 test al, al
 cjmp LABEL43
 mov rax, qword [rsp + CONST]
 mov edx, dword [rsp + CONST]
 mov edi, dword [rax + CONST]
 mov dword [rsp + CONST], edi
 test edx, edx
 cjmp LABEL49
 mov rcx, qword [rsp + CONST]
 mov rax, rbx
 sub rax, qword [rbp + CONST]
 sar rax, CONST
 lea rdx, qword [rcx + CONST]
 cmp rax, rdx
 cjmp LABEL49
 cmp edi, CONST
 cjmp LABEL43
LABEL49:
 mov rax, qword [rsp + CONST]
 mov eax, dword [rax + CONST]
 mov dword [rsp + CONST], eax
 cmp eax, CONST
 cjmp LABEL63
 mov rax, qword [rsp + CONST]
 mov r13, qword [rax + CONST]
LABEL239:
 movzx r14d, byte [rsp + CONST]
 mov r12, rbx
 mov r8d, r14d
 nop word [rax + rax]
LABEL198:
 mov r14d, dword [rsp + CONST]
 lea rbx, qword [rip + CONST]
 mov rdi, qword [rsp + CONST]
 and r14d, CONST
 mov qword [rsp + CONST], rdi
 movsxd rax, r14d
 movzx ecx, byte [rbx + rax]
 test cl, cl
 cjmp LABEL78
 mov rax, qword [rsp + CONST]
 mov rsi, rcx
 and esi, CONST
 sub rax, rdi
 cqo
 idiv rsi
 cmp r13, rax
 cmovg r13, rax
 test r15, r15
 cjmp LABEL88
 test cl, cl
 cjmp LABEL88
LABEL78:
 mov ebx, dword [rsp + CONST]
 sub r14d, CONST
 and ebx, CONST
 cmp r14d, CONST
 cjmp LABEL95
 lea rdi, qword [rip + CONST]
 movsxd rax, dword [rdi + r14*CONST]
 add rax, rdi
 jmp rax
LABEL309:
 cmp dword [rsp + CONST], CONST
 cjmp LABEL101
 cmp byte [rsp + CONST], CONST
 lea r14, qword [rbx + r13 + CONST]
 cjmp LABEL104
 mov rax, qword [rsp + CONST]
 test byte [rax + CONST], CONST
 cjmp LABEL104
 cmp rbx, r14
 cjmp LABEL109
 lea rcx, qword [rip + CONST]
 lea rdx, qword [rip + CONST]
 jmp LABEL112
LABEL132:
 mov eax, dword [rdx + rsi*CONST]
 shr eax, CONST
 xor eax, CONST
 and eax, CONST
LABEL355:
 test al, al
 cjmp LABEL118
LABEL125:
 lea rax, qword [r14 + CONST]
 cmp rax, rbx
 cjmp LABEL121
 mov r14, rax
LABEL112:
 movzx eax, byte [r14]
 test al, al
 cjmp LABEL125
 mov esi, eax
 and esi, CONST
 cmp sil, CONST
 cjmp LABEL125
 movzx esi, al
 test al, al
 cjmp LABEL132
 mov rdi, qword [rsp + CONST]
 mov r8d, eax
 and r8d, CONST
 sub rdi, r14
 cmp r8b, CONST
 cjmp LABEL138
 movzx esi, byte [rcx + rsi]
 cmp rsi, rdi
 cjmp LABEL141
 cmp al, CONST
 cjmp LABEL143
 cmp al, CONST
 cjmp LABEL145
 cmp al, CONST
 cjmp LABEL147
LABEL118:
 add r13, rbx
 cmp rbx, r14
 cjmp LABEL150
 movzx eax, byte [r14]
 lea rdi, qword [rip + CONST]
 movzx eax, byte [rdi + rax]
 add r14, rax
LABEL369:
 cmp r14, r13
 cjmp LABEL156
LABEL290:
 mov rdx, r14
 mov rsi, rbx
 mov rdi, rbp
 sub rdx, rbx
 call CONST
 mov qword [rsp + CONST], rax
 jmp LABEL163
LABEL285:
 mov rbx, qword [rsp + CONST]
 test byte [rbx + CONST], CONST
 cjmp LABEL166
 mov rax, r14
 sub rax, qword [rbp + CONST]
 sar rax, CONST
 sub rax, qword [rsp + CONST]
 test rax, rax
 cjmp LABEL172
 mov rsi, rbx
 mov rdi, rbp
 call CONST
 test al, al
 cjmp LABEL177
 cmp dword [rbx + CONST], CONST
 cjmp LABEL179
 mov rdi, qword [rsp + CONST]
 cmp qword [rsp + CONST], rdi
 cjmp LABEL182
 mov rsi, qword [r14]
 lea r12, qword [r14 + CONST]
 mov eax, dword [rsi + CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL188
 mov rax, qword [rsi]
 mov r13, qword [rax + CONST]
LABEL203:
 test r13, r13
 cjmp LABEL192
 mov rax, qword [rsp + CONST]
 xor r8d, r8d
 xor r15d, r15d
 mov eax, dword [rax + CONST]
 mov dword [rsp + CONST], eax
 jmp LABEL198
LABEL188:
 mov edx, CONST
 mov rdi, rbp
 call CONST
 mov r13, rax
 jmp LABEL203
LABEL88:
 test r13, r13
 cjmp LABEL205
 cmp byte [rsp + CONST], CONST
 cjmp LABEL205
 mov r13d, CONST
LABEL227:
 mov rax, qword [rbp + CONST]
 sub rax, r12
 sar rax, CONST
 cmp rax, r13
 cjmp LABEL213
LABEL236:
 mov rsi, qword [rbp + CONST]
 add rsi, r13
 cmp qword [rbp + CONST], rsi
 cjmp LABEL78
 mov rdi, rbp
 mov byte [rsp + CONST], r8b
 call CONST
 movzx r8d, byte [rsp + CONST]
 jmp LABEL78
LABEL166:
 mov rbx, r14
 xor r15d, r15d
 jmp LABEL225
LABEL205:
 test r13, r13
 cjmp LABEL227
LABEL213:
 mov rdx, r12
 mov rsi, r12
 mov rcx, r13
 mov rdi, rbp
 mov byte [rsp + CONST], r8b
 call CONST
 movzx r8d, byte [rsp + CONST]
 mov r12, rax
 jmp LABEL236
LABEL63:
 mov r13, qword [rsp + CONST]
 sub r13, qword [rsp + CONST]
 jmp LABEL239
LABEL172:
 mov rdi, r14
 mov r13, rbp
LABEL372:
 mov rbx, qword [rsp + CONST]
 test rbx, rbx
 cjmp LABEL244
 mov rax, qword [rsp + CONST]
 mov qword [rbx], rax
LABEL244:
 mov qword [r13], rdi
 mov rax, rdi
 sub rax, qword [r13 + CONST]
 sar rax, CONST
 sub rax, qword [rsp + CONST]
 mov rbx, qword [rsp + CONST]
 xor rbx, qword fs:[CONST]
 cjmp LABEL254
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL101:
 mov rdx, r13
 mov rsi, rbx
 mov rdi, rbp
 call CONST
 mov qword [rsp + CONST], rax
LABEL163:
 cmp byte [rsp + CONST], CONST
 cjmp LABEL269
 mov rax, qword [rsp + CONST]
 or dword [rax + CONST], CONST
 mov rax, qword [rsp + CONST]
 test byte [rax + CONST], CONST
 cjmp LABEL274
LABEL269:
 mov rax, qword [rbp + CONST]
 sub rax, r12
 test rax, rax
 cjmp LABEL278
LABEL362:
 mov rsi, qword [rsp + CONST]
 mov rdi, rbp
 lea r14, qword [r12 + CONST]
 call CONST
 add qword [rsp + CONST], r15
 mov qword [r12 + CONST], rax
 jmp LABEL285
LABEL104:
 lea rdx, qword [rip + CONST]
 cmp rbx, r14
 cjmp LABEL288
 lea r14, qword [rbx + r13]
 jmp LABEL290
LABEL301:
 mov r14, rax
LABEL288:
 movzx eax, byte [r14]
 test al, al
 cjmp LABEL294
 mov eax, dword [rdx + rax*CONST]
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL298
LABEL294:
 lea rax, qword [r14 + CONST]
 cmp rax, rbx
 cjmp LABEL301
 jmp LABEL290
LABEL385:
 cmp qword [rsp + CONST], rax
 cjmp LABEL156
 sub rax, rbx
 cmp dword [rsp + CONST], CONST
 mov r13, rax
 mov r15, r13
 cjmp LABEL309
 lea rax, qword [rbx + r13]
 mov r13, rbx
 cmp rax, rbx
 cjmp LABEL313
 jmp LABEL314
LABEL319:
 add r13, CONST
 cmp rax, r13
 cjmp LABEL314
LABEL313:
 cmp byte [r13], CONST
 cjmp LABEL319
LABEL314:
 mov rdx, r13
 mov rsi, rbx
 mov rdi, rbp
 sub rdx, rbx
 call CONST
 cmp dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 cjmp LABEL163
 xor r15d, r15d
 mov rax, r13
 sub rax, qword [rsp + CONST]
 cmp r13, qword [rsp + CONST]
 setne r15b
 add r15, rax
 jmp LABEL163
LABEL274:
 mov rsi, qword [rsp + CONST]
 xor edx, edx
 mov rdi, rbp
 call CONST
 jmp LABEL269
LABEL138:
 cmp rdi, CONST
 cjmp LABEL141
 movzx eax, byte [r14 + CONST]
 mov edi, eax
 and edi, CONST
 cmp dil, CONST
 cjmp LABEL141
 and eax, CONST
 shl esi, CONST
 or esi, eax
 movzx eax, sil
 mov eax, dword [rdx + rax*CONST]
 shr eax, CONST
 xor eax, CONST
 and eax, CONST
 jmp LABEL355
LABEL278:
 mov rdx, r12
 mov rsi, r12
 mov ecx, CONST
 mov rdi, rbp
 call CONST
 mov r12, rax
 jmp LABEL362
LABEL143:
 cmp byte [r14 + CONST], CONST
 cjmp LABEL118
LABEL404:
 cmp byte [r14 + CONST], CONST
 setne al
 jmp LABEL355
LABEL121:
 add r13, rbx
 jmp LABEL369
LABEL43:
 mov r13, rbp
 mov rdi, rbx
 jmp LABEL372
LABEL298:
 add r14, CONST
 jmp LABEL290
LABEL95:
 movzx edx, byte [rsp + CONST]
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rax, rbx
 jmp LABEL385
LABEL141:
 mov rdx, qword [rsp + CONST]
 mov r8d, CONST
 xor ecx, ecx
 mov rsi, r14
 mov rdi, rbp
 call CONST
 mov rbx, qword [rsp + CONST]
 jmp LABEL118
LABEL145:
 movzx eax, byte [r14 + CONST]
 cmp al, CONST
 cjmp LABEL396
 cmp al, CONST
 cjmp LABEL118
 cmp byte [r14 + CONST], CONST
 setne al
 jmp LABEL355
LABEL147:
 cmp byte [r14 + CONST], CONST
 cjmp LABEL118
 jmp LABEL404
LABEL396:
 movzx eax, byte [r14 + CONST]
 lea edi, dword [rax + CONST]
 mov esi, eax
 cmp edi, CONST
 cjmp LABEL125
 sub eax, CONST
 cmp eax, CONST
 cjmp LABEL125
 cmp sil, CONST
 cjmp LABEL118
 jmp LABEL125
LABEL177:
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
LABEL192:
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
LABEL182:
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
LABEL179:
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
LABEL150:
 add r14, CONST
 jmp LABEL369
LABEL109:
 lea r14, qword [rbx + r13]
 mov r13, r14
 jmp LABEL369
LABEL254:
 call CONST
LABEL156:
 lea rsi, qword [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 nop word cs:[rax + rax]
 nop dword [rax]
