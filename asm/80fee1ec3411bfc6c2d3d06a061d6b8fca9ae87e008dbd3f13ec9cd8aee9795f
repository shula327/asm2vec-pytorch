 .name fcn.000a7560
 .offset 00000000000a7560
 .file perl5.30.0
LABEL123:
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword [rsp + CONST]
 mov dword [rsp + CONST], ecx
 mov qword [rsp + CONST], rdi
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov dword [rsp + CONST], r9d
 mov qword [rsp + CONST], rax
 mov rax, qword [rsp + CONST]
 mov qword [rsp], rax
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov rax, qword [r8]
 and ecx, CONST
 mov dword [rsp + CONST], ecx
 mov r14, qword [rax + CONST]
 cjmp LABEL23
 mov rax, qword [rsp]
 mov r15, rsi
 mov r13, rdx
 mov rbp, r8
 mov dword [rax], CONST
 test r14, r14
 cjmp LABEL30
 mov rax, qword [r14 + CONST]
 mov rax, qword [rax]
 mov r12, qword [rax + CONST]
 mov rbx, qword [rax + CONST]
 test r12, r12
 cjmp LABEL30
 mov qword [rsp + CONST], CONST
 mov rbp, rsi
 mov r15, rbx
 mov qword [rsp + CONST], r8
 jmp LABEL41
LABEL46:
 sub r12, CONST
 cjmp LABEL43
LABEL41:
 mov rbx, qword [r15 + r12*CONST]
 test rbx, rbx
 cjmp LABEL46
 movzx eax, byte [rbx + CONST]
 cmp rax, r13
 cjmp LABEL46
 mov rdi, qword [rbx]
 cmp rdi, rbp
 cjmp LABEL52
 mov rdx, r13
 mov rsi, rbp
 call CONST
 test eax, eax
 cjmp LABEL46
LABEL52:
 test byte [rbx + CONST], CONST
 cjmp LABEL59
 mov eax, dword [rbx + CONST]
 cmp eax, -1
 cjmp LABEL46
 mov edi, dword [rbx + CONST]
 cmp edi, -1
 cjmp LABEL65
 mov edx, dword [rsp + CONST]
 cmp edx, edi
 setbe sil
 cmp edx, eax
 seta r8b
 mov r9d, esi
 or r9d, r8d
 and esi, r8d
 cmp eax, edi
 cmova esi, r9d
 test sil, sil
 cjmp LABEL46
LABEL200:
 mov rcx, rbx
 mov rax, qword [rsp + CONST]
 mov rbx, r15
 mov r15, rbp
 mov rbp, qword [rsp + CONST]
 mov qword [rax], rcx
 mov eax, CONST
 mov rcx, qword [rbp]
 mov edx, dword [rcx + CONST]
 test dl, CONST
 cjmp LABEL88
LABEL223:
 mov qword [rsp + CONST], CONST
 mov rdx, qword [rsp]
 mov dword [rdx], eax
LABEL216:
 mov rcx, qword [rsp + CONST]
 test rcx, rcx
 cjmp LABEL94
 mov rax, qword [rsp + CONST]
 mov rax, qword [rax]
 cmp qword [rax + CONST], CONST
 cjmp LABEL98
 mov qword [rcx], CONST
 jmp LABEL94
LABEL43:
 cmp qword [rsp + CONST], CONST
 mov rbx, r15
 mov r15, rbp
 mov rbp, qword [rsp + CONST]
 cjmp LABEL105
LABEL30:
 mov rax, qword [rbp]
 mov r8, qword [rax + CONST]
 test r8, r8
 cjmp LABEL109
 cmp qword [rsp + CONST], CONST
 mov r9d, dword [rax + CONST]
 cjmp LABEL112
LABEL202:
 push qword [rsp]
 mov r12, qword [rsp + CONST]
 mov rsi, r15
 mov rdx, r13
 push r12
 push qword [rsp + CONST]
 push CONST
 mov r15, qword [rsp + CONST]
 mov ecx, dword [rsp + CONST]
 mov rdi, r15
 call LABEL123
 add rsp, CONST
 mov r13, rax
 cmp rax, -1
 cjmp LABEL109
 mov rax, qword [rbp]
 cmp qword [rax + CONST], CONST
 cjmp LABEL130
 test r14, r14
 cjmp LABEL130
 mov rdi, qword [r12]
 call CONST
 mov rdi, r15
 mov rdx, qword [r15 + CONST]
 mov r15, qword [r15 + CONST]
 mov rbx, rax
 mov rax, qword [r14 + CONST]
 mov qword [rsp + CONST], rdx
 mov rsi, rbx
 mov rax, qword [rax]
 mov qword [rdi + CONST], rax
 mov rax, qword [r14 + CONST]
 mov rax, qword [rax + CONST]
 mov qword [rdi + CONST], rax
 mov rax, qword [rax + CONST]
 mov qword [rdi + CONST], rax
 mov rax, qword [r12]
 movzx edx, byte [rax + CONST]
 mov rcx, qword [rax + CONST]
 mov r8, qword [rax + CONST]
 and edx, CONST
 movzx edx, dl
 call CONST
 cmp qword [rbx + CONST], CONST
 mov r12, rax
 mov rax, qword [rsp]
 mov eax, dword [rax]
 mov dword [rbx + CONST], CONST
 mov dword [rbx + CONST], eax
 cjmp LABEL162
LABEL300:
 mov rax, qword [rsp + CONST]
 mov rsi, qword [rsp]
 mov rdx, qword [rsp + CONST]
 mov qword [rax], rbx
 mov eax, dword [rbx + CONST]
 mov dword [rsi], eax
 mov rax, qword [rsp + CONST]
 mov qword [rax + CONST], rdx
 mov qword [rax + CONST], r15
 test r15, r15
 cjmp LABEL173
 mov r15, qword [r15 + CONST]
LABEL173:
 mov rax, qword [rsp + CONST]
 mov qword [rax + CONST], r15
 jmp LABEL94
LABEL59:
 mov qword [rsp + CONST], r12
 jmp LABEL46
LABEL130:
 xor r12d, r12d
LABEL94:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL183
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL65:
 mov esi, dword [rsp + CONST]
 cmp esi, eax
 cjmp LABEL195
 sub eax, dword [rsp + CONST]
 shr eax, CONST
LABEL220:
 test al, al
 cjmp LABEL46
 jmp LABEL200
LABEL112:
 test byte [rax + CONST], CONST
 cjmp LABEL202
 cmp byte [rbp + CONST], CONST
 cjmp LABEL202
 lea rax, qword [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 jmp LABEL202
LABEL105:
 mov r12, qword [rsp + CONST]
 mov rcx, qword [rsp + CONST]
 mov rdx, qword [rsp]
 mov rax, qword [rbx + r12*CONST]
 mov qword [rcx], rax
 mov eax, dword [rax + CONST]
 mov dword [rdx], eax
 jmp LABEL216
LABEL195:
 sub esi, eax
 cmp esi, CONST
 setbe al
 jmp LABEL220
LABEL88:
 xor eax, eax
 and dh, CONST
 cjmp LABEL223
 xor eax, eax
 cmp qword [rcx + CONST], CONST
 sete al
 add eax, eax
 jmp LABEL223
LABEL98:
 mov rdx, qword [rbp]
 cmp qword [rdx + CONST], CONST
 cjmp LABEL231
 mov ecx, dword [rdx + CONST]
 mov esi, ecx
 and esi, CONST
 cmp esi, CONST
 cjmp LABEL236
LABEL321:
 movsxd rax, dword [rdx + CONST]
 mov rcx, qword [r14 + CONST]
 mov rdx, rax
 shl rax, CONST
 test edx, edx
 mov edx, CONST
 cmove rax, rdx
 lea rdx, qword [r12*CONST]
 mov rax, qword [rcx + rax]
 mov rcx, qword [rsp + CONST]
 mov rax, qword [rax + CONST]
 mov rax, qword [rax + r12*CONST]
 mov qword [rcx], rax
 test byte [rax + CONST], CONST
 cjmp LABEL94
 mov rax, qword [rbp]
 mov ecx, dword [rax + CONST]
 test ecx, ecx
 cjmp LABEL255
 test byte [rsp + CONST], CONST
 cjmp LABEL94
LABEL255:
 mov rax, qword [rbx + rdx]
 test byte [rax + CONST], CONST
 cjmp LABEL94
 mov rdx, qword [rax]
 movzx r9d, byte [rax + CONST]
 mov esi, CONST
 lea rax, qword [rip + CONST]
 lea rcx, qword [rip + CONST]
 mov r8d, CONST
 cmp byte [rdx], CONST
 cmovne rcx, rax
 sub rsp, CONST
 xor eax, eax
 push rdx
 mov rdi, qword [rsp + CONST]
 lea rdx, qword [rip + CONST]
 call CONST
 mov rax, qword [rsp + CONST]
 mov qword [rax], CONST
 pop rax
 pop rdx
LABEL367:
 test r13, r13
 cjmp LABEL280
 movzx eax, byte [r15]
 mov esi, CONST
 cmp al, CONST
 cjmp LABEL284
 cmp al, CONST
 cjmp LABEL286
 cmp al, CONST
 cjmp LABEL288
LABEL280:
 mov rdi, qword [rsp + CONST]
 call CONST
 mov rdx, qword [rsp + CONST]
 mov qword [rdx], rax
 jmp LABEL94
LABEL162:
 mov rax, qword [rbp]
 test byte [rax + CONST], CONST
 cjmp LABEL296
LABEL302:
 mov dword [rbx + CONST], r13d
 mov rax, qword [rbp]
 or dword [rax + CONST], CONST
 jmp LABEL300
LABEL296:
 cmp byte [rbp + CONST], CONST
 cjmp LABEL302
 mov rax, qword [rsp + CONST]
 mov rcx, qword [rax]
 test rcx, rcx
 cjmp LABEL306
 add dword [rcx + CONST], CONST
LABEL306:
 mov rdi, qword [rsp + CONST]
 mov rdx, r12
 mov rsi, qword [rdi + CONST]
 call CONST
 mov dword [rbx + CONST], r13d
 jmp LABEL300
LABEL231:
 mov rcx, qword [rsp]
 mov ecx, dword [rcx]
 test cl, CONST
 cjmp LABEL317
 and ecx, CONST
 cjmp LABEL319
LABEL375:
 cmp qword [rsp + CONST], CONST
 cjmp LABEL321
 mov ecx, dword [rdx + CONST]
 mov eax, ecx
 and eax, CONST
 cmp eax, CONST
 cjmp LABEL321
LABEL371:
 and ecx, CONST
 cjmp LABEL321
 mov r14, qword [rsp + CONST]
 mov r9d, dword [rdx + CONST]
 xor ecx, ecx
 mov rsi, r15
 mov r8, qword [rdx + CONST]
 mov rdx, r13
 mov rbx, qword [r14]
 push qword [rsp]
 push r14
 push qword [rsp + CONST]
 mov eax, dword [rsp + CONST]
 push rax
 mov rdi, qword [rsp + CONST]
 call LABEL123
 mov qword [r14], rbx
 add rsp, CONST
 jmp LABEL94
LABEL317:
 mov r11d, dword [rsp + CONST]
 test r11d, r11d
 cjmp LABEL348
 mov rdx, qword [rax]
 movzx r9d, byte [rax + CONST]
 mov esi, CONST
 lea rax, qword [rip + CONST]
 lea rcx, qword [rip + CONST]
 mov r8d, CONST
 cmp byte [rdx], CONST
 cmovne rcx, rax
 sub rsp, CONST
 xor eax, eax
 push rdx
 mov rdi, qword [rsp + CONST]
 lea rdx, qword [rip + CONST]
 call CONST
 pop r9
 pop r10
LABEL348:
 mov rax, qword [rsp + CONST]
 mov qword [rax], CONST
 jmp LABEL367
LABEL236:
 test cl, CONST
 cjmp LABEL317
 cmp qword [rsp + CONST], CONST
 cjmp LABEL371
 jmp LABEL321
LABEL319:
 mov rax, qword [rbx + r12*CONST]
 test byte [rax + CONST], CONST
 cjmp LABEL375
 mov r8d, dword [rsp + CONST]
 test r8d, r8d
 cjmp LABEL375
 mov rdi, qword [rsp + CONST]
 mov esi, CONST
 mov qword [rsp + CONST], rdx
 call CONST
 mov rdx, qword [rsp + CONST]
 test al, al
 cjmp LABEL375
 cmp byte [r15], CONST
 mov esi, CONST
 mov r9, r13
 mov r8d, CONST
 lea rax, qword [rip + CONST]
 lea rcx, qword [rip + CONST]
 cmovne rcx, rax
 sub rsp, CONST
 lea rdx, qword [rip + CONST]
 xor eax, eax
 push r15
 mov rdi, qword [rsp + CONST]
 call CONST
 pop rsi
 pop rdi
 mov dword [rsp + CONST], CONST
 mov rdx, qword [rbp]
 jmp LABEL375
LABEL109:
 mov r12, -1
 jmp LABEL94
LABEL286:
 mov esi, CONST
LABEL284:
 mov rbx, qword [rsp + CONST]
 mov rdi, rbx
 call CONST
 mov rdi, rbx
 mov rsi, rax
 call CONST
 mov rcx, qword [rsp + CONST]
 mov qword [rcx], rax
 jmp LABEL94
LABEL288:
 mov rbx, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, rbx
 call CONST
 mov rdi, rbx
 mov rsi, rax
 call CONST
 mov rsi, qword [rsp + CONST]
 mov qword [rsi], rax
 jmp LABEL94
LABEL183:
 call CONST
LABEL23:
 mov edx, ecx
 lea rsi, qword [rip + CONST]
 xor eax, eax
 call CONST
 nop word cs:[rax + rax]
 nop dword [rax]
