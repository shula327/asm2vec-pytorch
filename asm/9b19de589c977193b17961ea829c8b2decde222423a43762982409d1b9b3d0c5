 .name fcn.0000f230
 .offset 000000000000f230
 .file find
 push r15
 mov r9, rsi
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov qword [rsp + CONST], rdi
 mov qword [rsp + CONST], rsi
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 cmp edx, CONST
 cjmp LABEL14
 lea ecx, dword [rdx + CONST]
 mov byte [rsp + CONST], CONST
 mov ebx, edx
 mov byte [rsp + CONST], dl
 mov byte [rsp + CONST], CONST
 cmp ecx, CONST
 cjmp LABEL21
 mov eax, CONST
 shl rax, cl
 test eax, CONST
 cjmp LABEL25
LABEL21:
 mov byte [rsp + CONST], CONST
 xor r13d, r13d
 xor ebp, ebp
LABEL209:
 cmp ebx, CONST
 cjmp LABEL30
LABEL116:
 mov rdi, qword [rsp + CONST]
 mov r8d, CONST
 mov ecx, CONST
 xor edx, edx
 lea rsi, qword [rip + CONST]
 lea rbx, qword [rip + CONST]
 mov rax, rdi
 sar rax, CONST
 xor rdi, rax
 sub rdi, rax
 call CONST
 mov r12, rax
 cmp rax, rbx
 cjmp LABEL44
 lea rax, qword [rip + CONST]
 cmp r12, rax
 cjmp LABEL47
 cmp qword [rsp + CONST], CONST
 cjmp LABEL49
 mov byte [r12 + CONST], CONST
 sub r12, CONST
LABEL49:
 test r13d, r13d
 cjmp LABEL53
 mov rdi, r12
 call CONST
 mov r8, rax
 mov rax, r12
 sub rax, rbx
 add rax, r8
 cmp rax, CONST
 cjmp LABEL61
 mov ebx, CONST
 lea r13, qword [rsp + CONST]
 sub rbx, rax
 mov rsi, r13
LABEL72:
 mov eax, dword [rsi]
 add rsi, CONST
 lea edx, dword [rax + CONST]
 not eax
 and edx, eax
 and edx, CONST
 cjmp LABEL72
 mov eax, edx
 shr eax, CONST
 test edx, CONST
 cmove edx, eax
 lea rax, qword [rsi + CONST]
 cmove rsi, rax
 mov eax, edx
 add al, dl
 sbb rsi, CONST
 sub rsi, r13
 cmp rsi, rbx
 cjmp LABEL84
LABEL320:
 mov rsi, r13
 mov rdi, r12
 call CONST
LABEL53:
 mov rax, qword [rsp + CONST]
 xor rax, qword fs:[CONST]
 cjmp LABEL90
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL14:
 mov ecx, CONST
 mov edx, CONST
 mov esi, CONST
 movabs rax, CONST
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rdi, qword [rsp + CONST]
 lea r8, qword [rip + CONST]
 mov dword [rsp + CONST], CONST
 mov r13d, CONST
 call CONST
 mov ebp, eax
LABEL30:
 lea rdi, qword [rsp + CONST]
 call CONST
 mov r14, rax
 test rax, rax
 cjmp LABEL116
 movsxd rax, ebp
 lea r13, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 mov rbx, r13
LABEL127:
 mov edx, dword [rbx]
 add rbx, CONST
 lea eax, dword [rdx + CONST]
 not edx
 and eax, edx
 and eax, CONST
 cjmp LABEL127
 mov edx, eax
 shr edx, CONST
 test eax, CONST
 cmove eax, edx
 lea rdx, qword [rbx + CONST]
 cmove rbx, rdx
 mov ecx, eax
 add cl, al
 sbb rbx, CONST
 sub rbx, r13
 lea rdi, qword [rbx + CONST]
 add rbx, CONST
 call CONST
 mov byte [rax], CONST
 mov r12, rax
 lea rdx, qword [rax + CONST]
 cmp ebx, CONST
 cjmp LABEL145
 test bl, CONST
 cjmp LABEL147
 test ebx, ebx
 cjmp LABEL149
 movzx eax, byte [r13]
 mov byte [r12 + CONST], al
 test bl, CONST
 cjmp LABEL153
LABEL149:
 movdqu xmm0, xmmword [r14]
 mov r13, qword [rip + CONST]
 movaps xmmword [rsp + CONST], xmm0
 movdqu xmm1, xmmword [r14 + CONST]
 mov edx, dword [rsp + CONST]
 movaps xmmword [rsp + CONST], xmm1
 movdqu xmm2, xmmword [r14 + CONST]
 lea ecx, dword [rdx + CONST]
 cmp edx, CONST
 movaps xmmword [rsp + CONST], xmm2
 mov rax, qword [r14 + CONST]
 mov qword [rsp + CONST], rax
 lea eax, dword [rdx + CONST]
 cmovge eax, ecx
 mov dword [rsp + CONST], eax
 test r13, r13
 cjmp LABEL170
LABEL404:
 movabs rbx, CONST
 jmp LABEL172
LABEL195:
 cmp rsi, rbx
 cjmp LABEL174
 mov rax, rsi
 shr rax, CONST
 lea rsi, qword [rsi + rax + CONST]
LABEL198:
 mov rdi, r13
 mov qword [rip + CONST], rsi
 call CONST
 mov qword [rip + CONST], rax
 mov r13, rax
LABEL172:
 mov rsi, qword [rip + CONST]
 mov rcx, r14
 mov rdx, r12
 mov rdi, r13
 call CONST
 mov rsi, qword [rip + CONST]
 mov r15, rax
 test rax, rax
 cjmp LABEL191
 cmp rax, rsi
 cjmp LABEL193
LABEL191:
 test r13, r13
 cjmp LABEL195
 test rsi, rsi
 cjmp LABEL197
 cjmp LABEL198
LABEL174:
 call CONST
LABEL25:
 lea rdi, qword [rsp + CONST]
 lea r8, qword [rip + CONST]
 mov ecx, CONST
 xor eax, eax
 mov edx, CONST
 mov esi, CONST
 mov r13d, CONST
 call CONST
 mov ebp, eax
 jmp LABEL209
LABEL145:
 mov rax, qword [rsp + CONST]
 lea rsi, qword [r12 + CONST]
 and rsi, CONST
 mov qword [r12 + CONST], rax
 mov eax, ebx
 mov rcx, qword [r13 + rax + CONST]
 mov qword [rdx + rax + CONST], rcx
 sub rdx, rsi
 mov rax, r13
 add ebx, edx
 sub rax, rdx
 and ebx, CONST
 cmp ebx, CONST
 cjmp LABEL149
 and ebx, CONST
 xor edx, edx
LABEL231:
 mov ecx, edx
 add edx, CONST
 mov rdi, qword [rax + rcx]
 mov qword [rsi + rcx], rdi
 cmp edx, ebx
 cjmp LABEL231
 jmp LABEL149
LABEL197:
 mov esi, CONST
 jmp LABEL198
LABEL193:
 mov rax, qword [rsp + CONST]
 mov rdi, r13
 lea rbx, qword [rax + r15 + CONST]
 mov rsi, rbx
 mov qword [rsp + CONST], rbx
 call CONST
 mov rdi, rbx
 mov qword [rip + CONST], rbx
 mov qword [rip + CONST], rax
 call CONST
 mov rsi, qword [rip + CONST]
 mov rdx, r12
 lea rcx, qword [rsp + CONST]
 mov rdi, rax
 mov qword [rsp + CONST], rax
 call CONST
 mov rax, qword [rip + CONST]
 movzx edx, byte [rax]
 mov qword [rsp + CONST], rax
 test dl, dl
 cjmp LABEL255
 xor ebp, ebp
 xor r13d, r13d
 xor r14d, r14d
 xor ebx, ebx
 jmp LABEL260
LABEL288:
 mov rax, r14
 sub rax, r13
 cmp rbp, rax
 cjmp LABEL255
 add rbp, CONST
LABEL278:
 mov rax, qword [rsp + CONST]
 add r14, CONST
 movzx edx, byte [rax + r14]
 test dl, dl
 cjmp LABEL270
LABEL260:
 mov rax, qword [rsp + CONST]
 movzx esi, byte [rax + r14]
 test sil, sil
 cjmp LABEL255
 cmp sil, dl
 mov byte [rsp + CONST], dl
 mov byte [rsp + CONST], sil
 cjmp LABEL278
 call CONST
 movzx edx, byte [rsp + CONST]
 mov rax, qword [rax]
 test byte [rax + rdx*CONST + CONST], CONST
 cjmp LABEL255
 movzx esi, byte [rsp + CONST]
 test byte [rax + rsi*CONST + CONST], CONST
 cjmp LABEL255
 test bl, bl
 cjmp LABEL288
 mov r13, r14
 mov ebp, CONST
 mov ebx, CONST
 jmp LABEL278
LABEL84:
 lea rdx, qword [rip + CONST]
 movsxd rcx, ebp
 mov r9, r13
 mov r8, rbx
 xor esi, esi
 xor edi, edi
 xor eax, eax
 call CONST
 mov rdx, r13
LABEL308:
 mov ecx, dword [rdx]
 add rdx, CONST
 lea eax, dword [rcx + CONST]
 not ecx
 and eax, ecx
 and eax, CONST
 cjmp LABEL308
 mov ecx, eax
 shr ecx, CONST
 test eax, CONST
 cmove eax, ecx
 lea rcx, qword [rdx + CONST]
 cmove rdx, rcx
 mov ecx, eax
 add cl, al
 sbb rdx, CONST
 sub rdx, r13
 cmp rdx, rbx
 cjmp LABEL320
 lea rcx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL270:
 mov rax, qword [rsp + CONST]
 cmp byte [rax + r14], CONST
 cjmp LABEL255
 cmp rbp, CONST
 cjmp LABEL255
 call CONST
 mov rcx, qword [rsp + CONST]
 lea rdi, qword [r13 + CONST]
 mov rax, qword [rax]
 lea r13, qword [rcx + rdi]
 movzx edx, byte [r13]
 test byte [rax + rdx*CONST + CONST], CONST
 cjmp LABEL255
 mov rax, qword [rsp + CONST]
 lea r8, qword [r15 + CONST]
 mov rdx, r8
 sub rdx, rdi
 add r8, rax
 add rdi, rax
 cmp qword [rsp + CONST], r8
 cjmp LABEL346
 add rdi, qword [rsp + CONST]
 mov rsi, r13
 call CONST
 mov rcx, qword [rsp + CONST]
 lea rax, qword [rsp + CONST]
 cmp ecx, CONST
 cjmp LABEL353
 and ecx, CONST
 cjmp LABEL355
 mov rcx, qword [rsp + CONST]
 test ecx, ecx
 cjmp LABEL255
 movzx edx, byte [rax]
 and ecx, CONST
 mov byte [r13], dl
 cjmp LABEL255
 mov ebp, dword [rsp + CONST]
 movzx eax, word [rax + rbp + CONST]
 mov word [r13 + rbp + CONST], ax
 nop
LABEL255:
 mov rdi, r12
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 mov r12, qword [rsp + CONST]
 add r12, CONST
 jmp LABEL53
LABEL353:
 mov rdx, qword [rsp + CONST]
 lea rsi, qword [r13 + CONST]
 and rsi, CONST
 mov qword [r13], rdx
 mov rdi, qword [rsp + CONST]
 mov edx, edi
 mov ebp, edi
 mov rcx, qword [rax + rdx + CONST]
 mov qword [r13 + rdx + CONST], rcx
 sub r13, rsi
 add ebp, r13d
 sub rax, r13
 and ebp, CONST
 mov rdx, rax
 cmp ebp, CONST
 cjmp LABEL255
 and ebp, CONST
 xor eax, eax
LABEL397:
 mov ecx, eax
 add eax, CONST
 mov rdi, qword [rdx + rcx]
 mov qword [rsi + rcx], rdi
 cmp eax, ebp
 cjmp LABEL397
 jmp LABEL255
LABEL170:
 mov qword [rip + CONST], CONST
 mov edi, CONST
 call CONST
 mov qword [rip + CONST], rax
 mov r13, rax
 jmp LABEL404
LABEL147:
 mov eax, dword [r13]
 mov dword [r12 + CONST], eax
 mov eax, ebx
 mov ecx, dword [r13 + rax + CONST]
 mov dword [rdx + rax + CONST], ecx
 jmp LABEL149
LABEL153:
 mov eax, ebx
 movzx ecx, word [r13 + rax + CONST]
 mov word [rdx + rax + CONST], cx
 jmp LABEL149
LABEL355:
 mov edx, dword [rax]
 mov dword [r13], edx
 mov ebp, dword [rsp + CONST]
 mov eax, dword [rax + rbp + CONST]
 mov dword [r13 + rbp + CONST], eax
 jmp LABEL255
LABEL90:
 call CONST
LABEL44:
 lea rcx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL47:
 lea rcx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL61:
 lea rcx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
LABEL346:
 lea rcx, qword [rip + CONST]
 mov edx, CONST
 lea rsi, qword [rip + CONST]
 lea rdi, qword [rip + CONST]
 call CONST
